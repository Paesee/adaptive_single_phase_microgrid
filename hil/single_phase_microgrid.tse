version = 4.2

//
// Saved by sw version: 2024.1
//

model "single_phase_microgrid" {
    configuration {
        hil_device = "VHIL+"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = .5e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = False
        reset_analog_outputs_on_sim_stop = True
        reset_analog_outputs_on_sim_stop_mode = Offset values
        reset_digital_outputs_on_sim_stop = True
        vhil_adio_loopback = False
        cpl_stb = True
        enb_dep_sw_detect = False
        code_section = "internal memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0001
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
        user_cpu_part_option = "default"
        matrix_based_reduction = True
        cpl_dynamics_analysis = False
        export_ss_to_pickle = False
        ground_scope_core = True
        dss_num_tol = 1e-15
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_directory = ""
        cce_custom_type_int = ""
        cce_custom_type_uint = ""
        cce_custom_type_real = ""
        tunable_params = "component defined"
        sp_compiler_type = "C compiler"
        sig_stim = "off"
        export_resource_list = ""
        export_dependency_list = ""
        excluded_resource_list = ""
        export_out_file = ""
        export_lock_top_level = True
        export_encrypt_library = True
        export_encrypt_resources = True
        dae_solver = "BDF"
        max_sim_step = 1e-4
        simulation_time = 1.0
        abs_tol = 1e-3
        rel_tol = 1e-3
        init_sim_step = 1e-6
        r_on_sw = 1e-3
        v_on_diode = 0.2
        data_sampling_rate = 0
        feedthrough_validation_error_level = error
    }

    component Subsystem Root {
        component "core/Ground" gnd3 {
        }
        [
            position = 8552, 8288
            hide_name = True
        ]

        component "core/Resistor" R_load {
            resistance = "LOAD_LINE_RESISTANCE"
        }
        [
            position = 8552, 8176
        ]

        component "core/Inductor" L_load {
            inductance = "LOAD_LINE_INDUCTANCE"
            signal_access = "Inherit"
        }
        [
            position = 8648, 8176
        ]

        component Subsystem MGCC {
            layout = dynamic
            component "core/Double Pole Single Throw Contactor" S1 {
                ctrl_src = "Model"
                enable_fb_out = "True"
                execution_rate = "TS_20KHZ"
                signal_access = "Inherit"
            }
            [
                position = 8176, 8064
                size = 64, 256
            ]

            component "core/Bus Join" "Bus Join1" {
                execution_rate = "TS_20KHZ"
                inputs = "3"
            }
            [
                position = 9264, 7968
                hide_name = True
            ]

            component "core/Voltage Measurement" Vpcc {
                execution_rate = "TS_20KHZ"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 8328, 8064
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vgrid {
                execution_rate = "TS_20KHZ"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 8024, 8064
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" i {
                execution_rate = "TS_20KHZ"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 8272, 7968
                scale = -1, 1
                size = 64, 32
            ]

            component "core/SCADA Input" Pref {
                execution_rate = "TS_20KHZ"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 8808, 7976
            ]

            component "core/SCADA Input" Qref {
                execution_rate = "TS_20KHZ"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 8808, 8096
            ]

            component "core/SCADA Input" STS {
                def_value = "1"
                execution_rate = "TS_20KHZ"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 8112, 7864
            ]

            component "core/Single phase PLL" "Single phase PLL1" {
            }
            [
                position = 8968, 7800
                hide_name = True
                size = 64, 98
            ]

            component "core/Probe" f_pcc {
            }
            [
                position = 9080, 7672
                rotation = left
                scale = -1, 1
            ]

            component "core/Termination" Termination1 {
            }
            [
                position = 9144, 7720
                rotation = left
                hide_name = True
            ]

            component "core/Termination" Termination2 {
            }
            [
                position = 9104, 7720
                rotation = left
                hide_name = True
            ]

            component "core/Termination" Termination6 {
            }
            [
                position = 9016, 7720
                rotation = left
                hide_name = True
            ]

            component "core/Termination" Termination7 {
            }
            [
                position = 9056, 7720
                rotation = left
                hide_name = True
            ]

            component "core/Single-phase Meter" Meter {
                enable_out = "False"
                execution_rate = "TS_20KHZ"
                fgrid = "60.0"
                n_cycles = "1"
            }
            [
                position = 8496, 7968
                size = 80, 80
            ]

            component "core/SCADA Input" short {
                execution_rate = "TS_20KHZ"
                max = "1"
                min = "0"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 9072, 8008
            ]

            component "core/Signal switch" "Signal switch1" {
            }
            [
                position = 8896, 8008
                hide_name = True
            ]

            component "core/Constant" Q00 {
                execution_rate = "TS_20KHZ"
                value = "0"
            }
            [
                position = 8808, 8160
            ]

            component "core/Constant" P00 {
                execution_rate = "TS_20KHZ"
                value = "0"
            }
            [
                position = 8808, 8040
            ]

            component "core/Signal switch" "Signal switch2" {
            }
            [
                position = 8896, 8128
                hide_name = True
            ]

            port "Info out" {
                position = left:3
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 9336, 7968
                hide_name = True
            ]

            port Lug {
                position = bottom:1
                kind = pe
            }
            [
                position = 7912, 7968
                rotation = down
                hide_name = True
                scale = -1, 1
            ]

            port Nug {
                position = bottom:2
                kind = pe
            }
            [
                position = 7912, 8160
                rotation = down
                hide_name = True
                scale = -1, 1
            ]

            port Lg {
                position = top:1
                kind = pe
            }
            [
                position = 8616, 7968
                hide_name = True
                scale = -1, 1
            ]

            port Ng {
                position = top:2
                kind = pe
            }
            [
                position = 8616, 8160
                hide_name = True
                scale = -1, 1
            ]

            tag Goto1 {
                value = "v_grid"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8104, 8064
                hide_name = True
                size = 60, 20
            ]

            tag Goto9 {
                value = "v_pcc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8408, 8064
                hide_name = True
                size = 60, 20
            ]

            tag Goto10 {
                value = "i"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8344, 7904
                hide_name = True
                size = 60, 20
            ]

            tag Goto11 {
                value = "STS_fb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8248, 7864
                hide_name = True
                size = 60, 20
            ]

            tag From21 {
                value = "v_pcc"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8864, 7800
                hide_name = True
                size = 60, 20
            ]

            tag From20 {
                value = "STS_fb"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 8824, 7928
                hide_name = True
                size = 60, 20
            ]

            tag From22 {
                value = "P0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9088, 7928
                hide_name = True
                size = 60, 20
            ]

            tag From23 {
                value = "Q0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9088, 7968
                hide_name = True
                size = 60, 20
            ]

            tag Goto12 {
                value = "P0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8984, 8008
                hide_name = True
                size = 60, 20
            ]

            tag Goto13 {
                value = "Q0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8984, 8128
                hide_name = True
                size = 60, 20
            ]

            junction Junction7 pe
            [
                position = 8328, 8160
            ]

            junction Junction22 pe
            [
                position = 8328, 7968
            ]

            junction Junction23 pe
            [
                position = 8504, 8160
            ]

            junction Junction24 pe
            [
                position = 8024, 8160
            ]

            junction Junction25 pe
            [
                position = 8024, 7968
            ]

            junction Junction26 sp
            [
                position = 8896, 7928
            ]

            connect "Bus Join1.out" "Info out" as Connection21
            connect Junction7 S1.b_out as Connection563
            [
                breakpoints = 8256, 8160
            ]
            connect Vpcc.n_node Junction7 as Connection564
            connect Goto1 Vgrid.out as Connection571
            connect Goto9 Vpcc.out as Connection572
            connect i.n_node S1.a_out as Connection636
            connect Goto10 i.out as Connection640
            connect S1.feedback_out Goto11 as Connection641
            connect STS.out S1.ctrl_in as Connection651
            connect "Single phase PLL1.f" f_pcc.in as Connection653
            connect Termination1.in "Single phase PLL1.sin(wt)" as Connection654
            connect Termination2.in "Single phase PLL1.wt" as Connection655
            connect Termination6.in "Single phase PLL1.d" as Connection656
            connect Termination7.in "Single phase PLL1.q" as Connection657
            connect Vpcc.p_node Junction22 as Connection661
            connect Junction22 i.p_node as Connection662
            [
                breakpoints = 8328, 7968; 8328, 7968; 8328, 7968
            ]
            connect Meter.in Junction22 as Connection663
            connect Lg Meter.out as Connection685
            connect Junction7 Junction23 as Connection686
            [
                breakpoints = 8328, 8160; 8328, 8160
            ]
            connect Junction23 Meter.N as Connection687
            [
                breakpoints = 8496, 8160; 8496, 8160
            ]
            connect Ng Junction23 as Connection688
            connect S1.b_in Junction24 as Connection689
            connect Junction24 Vgrid.n_node as Connection690
            [
                breakpoints = 8024, 8160; 8024, 8160
            ]
            connect Nug Junction24 as Connection691
            connect Vgrid.p_node Junction25 as Connection692
            connect Junction25 S1.a_in as Connection693
            [
                breakpoints = 8024, 7968; 8024, 7968
            ]
            connect Lug Junction25 as Connection694
            connect From21 "Single phase PLL1.In" as Connection702
            [
                breakpoints = 8912, 7800
            ]
            connect "Signal switch1.in" Pref.out as Connection709
            [
                breakpoints = 8864, 7992; 8848, 7992; 8848, 7984
            ]
            connect P00.out "Signal switch1.in1" as Connection710
            [
                breakpoints = 8848, 8040; 8848, 8024
            ]
            connect "Signal switch2.in" Qref.out as Connection711
            [
                breakpoints = 8848, 8112; 8848, 8096
            ]
            connect "Signal switch2.in1" Q00.out as Connection712
            [
                breakpoints = 8848, 8144; 8848, 8160
            ]
            connect From20 Junction26 as Connection714
            connect Junction26 "Signal switch1.in2" as Connection715
            connect Junction26 "Signal switch2.in2" as Connection716
            [
                breakpoints = 8928, 7928; 8928, 8064; 8896, 8064; 8896, 8072; 8896, 8072
            ]
            connect From22 "Bus Join1.in" as Connection717
            [
                breakpoints = 9184, 7928; 9184, 7952
            ]
            connect Goto12 "Signal switch1.out" as Connection722
            connect Goto13 "Signal switch2.out" as Connection723
            connect From23 "Bus Join1.in1" as Connection724
            connect short.out "Bus Join1.in2" as Connection725
            [
                breakpoints = 9184, 8008; 9184, 7984
            ]

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Press \"Ctrl+Enter\" to view the subsystem.</p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images/mgcc.svg")
                ENDCODE
            }
        }
        [
            position = 8792, 8032
            rotation = right
            hide_name = True
            size = 120, 72
        ]

        component "core/Ground" gnd4 {
        }
        [
            position = 8552, 8104
            hide_name = True
        ]

        component Subsystem Grid {
            layout = dynamic
            component "core/SCADA Input" Vrms {
                def_value = "220"
                execution_rate = "TS_20KHZ"
                max = "250"
                min = "0"
                signal_access = "Inherit"
                unit = "V"
            }
            [
                position = 8264, 8144
            ]

            component "core/SCADA Input" Flag {
                execution_rate = "TS_20KHZ"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 7960, 8112
            ]

            component "core/Constant" Constant1 {
                execution_rate = "TS_20KHZ"
                value = "0"
            }
            [
                position = 8264, 8224
            ]

            component "core/Probe" freq_ref {
            }
            [
                position = 8224, 8056
                rotation = left
            ]

            component "core/SCADA Input" F_NADIR {
                def_value = "10"
                execution_rate = "TS_20KHZ"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 7960, 8160
            ]

            component "core/SCADA Input" ROCOF {
                def_value = "0.99995"
                execution_rate = "TS_20KHZ"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 7960, 8208
            ]

            component "core/Probe" flag {
            }
            [
                position = 8016, 8056
                rotation = left
            ]

            component "core/C function" "C function2" {
                arb_defs = "/*Begin code section*/

/*End code section*/"
                execution_rate = "TS_20KHZ"
                global_variables = "real count;real Ts;real k;real flag_a;real pi;real timer_a;real freq;real kf;real w1;real aux;"
                init_fnc = "/*Begin code section*/
count = 0;
Ts = 50e-6;
k = 10000000000;
flag_a = 0;
pi = 3.1415;
timer_a = 0;
freq = 0;
kf = 0;
w1 = 1;
aux = 0;
/*End code section*/"
                input_terminals = "real flag;real F_Nadir;real ROCOF;real f_nom;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True"
                input_terminals_show_labels = "True;True;True;True"
                output_fnc = "/*Begin code section*/
aux = f_nom-F_Nadir;

if(aux > 0)
{
    w1=ROCOF/aux;
}



kf=pi/w1/Ts;

if (flag>flag_a) k=0;

if ( k<kf  )
   {
     freq=f_nom-(f_nom-F_Nadir)*sin(w1*k*Ts);
     k=k+1;  
   }
else freq=f_nom;

flag_a=flag;

out_freq = freq;
/*End code section*/"
                output_terminals = "real out_freq;"
                output_terminals_dimensions = "inherit"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "True"
            }
            [
                position = 8120, 8184
                size = 120, 200
            ]

            component "core/SCADA Input" freq {
                def_value = "60"
                execution_rate = "TS_20KHZ"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 7960, 8256
            ]

            component "core/Signal Controlled Sinusoidal Voltage Source" Vsp_sin1 {
            }
            [
                position = 8360, 8184
                size = 64, 80
            ]

            port N {
                position = left:2
                kind = pe
            }
            [
                position = 8464, 8256
                rotation = down
            ]

            port L {
                position = left:1
                kind = pe
            }
            [
                position = 8464, 8104
                rotation = down
            ]

            junction Junction60 sp
            [
                position = 8016, 8112
            ]

            junction Junction61 sp
            [
                position = 8224, 8184
            ]

            connect Flag.out Junction60 as Connection455
            connect Junction60 flag.in as Connection456
            connect "C function2.flag" Junction60 as Connection457
            connect freq.out "C function2.f_nom" as Connection486
            connect ROCOF.out "C function2.ROCOF" as Connection487
            connect F_NADIR.out "C function2.F_Nadir" as Connection488
            connect Vsp_sin1.p L as Connection496
            connect Vsp_sin1.n N as Connection497
            connect Vsp_sin1.Ph Constant1.out as Connection498
            connect Vsp_sin1.Rms Vrms.out as Connection499
            connect freq_ref.in Junction61 as Connection501
            connect Junction61 "C function2.out_freq" as Connection502
            connect Vsp_sin1.f Junction61 as Connection503

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Press \"Ctrl+Enter\" to view the subsystem.</p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images/grid.svg")
                ENDCODE
            }
        }
        [
            position = 9104, 8032
            hide_name = True
            size = 72, 120
        ]

        component "core/Resistor" R_grid {
            resistance = "GRID_LINE_RESISTANCE"
        }
        [
            position = 8904, 7992
        ]

        component "core/Inductor" L_grid {
            inductance = "GRID_LINE_INDUCTANCE"
            signal_access = "Inherit"
        }
        [
            position = 9000, 7992
        ]

        component Subsystem Load {
            layout = dynamic
            component "core/Single-phase Meter" Meter {
                enable_out = "False"
                execution_rate = "TS_20KHZ"
                fgrid = "60.0"
                n_cycles = "1"
            }
            [
                position = 7696, 8024
                size = 80, 80
            ]

            component "core/Single-phase Variable Load" "Single-phase Variable Load" {
                Snom = "S_NOMINAL"
                Vnom_rms = "V_RMS"
                Z_ind_pu = "0.1"
                execution_rate = "TS_20KHZ"
                fnom = "F_GRID"
                pf_nom = "0.8"
                pf_snubber = "0.8"
            }
            [
                position = 7848, 8256
                size = 184, 160
            ]

            port L {
                position = auto:auto
                kind = pe
            }
            [
                position = 7576, 8024
            ]

            port N {
                position = auto:auto
                kind = pe
            }
            [
                position = 7576, 8120
            ]

            junction Junction1 pe
            [
                position = 7696, 8120
            ]

            connect L Meter.in as Connection112
            connect "Single-phase Variable Load.L" Meter.out as Connection152
            connect Meter.N Junction1 as Connection153
            [
                breakpoints = 7696, 8104; 7696, 8104; 7696, 8104
            ]
            connect Junction1 N as Connection154
            [
                breakpoints = 7696, 8120; 7696, 8120; 7696, 8112; 7696, 8120
            ]
            connect "Single-phase Variable Load.N" Junction1 as Connection155

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Press \"Ctrl+Enter\" to view the subsystem.</p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images/load.svg")
                ENDCODE
            }
        }
        [
            position = 8792, 8216
            hide_name = True
            size = 72, 120
        ]

        component "core/Resistor" R_VSC2 {
            resistance = "VSC2_LINE_RESISTANCE"
        }
        [
            position = 8320, 8176
        ]

        component "core/Inductor" L_VSC2 {
            inductance = "VSC2_LINE_INDUCTANCE"
            signal_access = "Inherit"
        }
        [
            position = 8416, 8176
        ]

        component "core/Ground" gnd7 {
        }
        [
            position = 8416, 8288
            hide_name = True
        ]

        component "core/Resistor" R_VSC1 {
            resistance = "VSC2_LINE_RESISTANCE"
        }
        [
            position = 8320, 7992
        ]

        component "core/Inductor" L_VSC1 {
            inductance = "VSC2_LINE_INDUCTANCE"
            signal_access = "Inherit"
        }
        [
            position = 8416, 7992
        ]

        component "core/Ground" gnd8 {
        }
        [
            position = 8416, 8104
            hide_name = True
        ]

        component "core/Ground" gnd9 {
        }
        [
            position = 8552, 8480
            hide_name = True
        ]

        component Subsystem Short {
            layout = dynamic
            component "core/Single Pole Single Throw Contactor" S_sc {
                ctrl_src = "Model"
                signal_access = "Inherit"
            }
            [
                position = 7672, 7976
                size = 64, 32
            ]

            component "core/Resistor" R_sc {
                resistance = "R_SC"
            }
            [
                position = 7752, 8032
                rotation = right
            ]

            component "core/Bus Selector" "Bus Selector1" {
                signal_indexes = "[2]"
            }
            [
                position = 7592, 7896
            ]

            port L {
                position = auto:auto
                kind = pe
            }
            [
                position = 7480, 7976
            ]

            port N {
                position = auto:auto
                kind = pe
            }
            [
                position = 7480, 8088
            ]

            port Info_in {
                position = right:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7480, 7896
                hide_name = True
            ]

            comment Comment23 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[0] = P0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[1] = Q0 </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[3] = SHORT CIRCUIT  </p></body></html> ENDCOMMENT 
            [
                position = 7464, 7776
            ]

            connect N R_sc.n_node as Connection78
            connect L S_sc.a_in as Connection79
            connect "Bus Selector1.out" S_sc.ctrl_in as Connection80
            connect Info_in "Bus Selector1.in" as Connection81
            connect S_sc.a_out R_sc.p_node as Connection77

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Press \"Ctrl+Enter\" to view the subsystem.</p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images/short.svg")
                ENDCODE
            }
        }
        [
            position = 8792, 8400
            hide_name = True
            size = 72, 120
        ]

        component "core/Resistor" R_sc {
            resistance = "SC_LINE_RESISTANCE"
        }
        [
            position = 8552, 8360
        ]

        component "core/Inductor" L_sc {
            inductance = "SC_LINE_INDUCTANCE"
            signal_access = "Inherit"
        }
        [
            position = 8648, 8360
        ]

        component "core/SCADA Input" test_flag {
            execution_rate = "TS_20KHZ"
            format = "uint"
            max = "1"
            min = "0"
            signal_access = "Inherit"
            signal_type = "uint"
            unit = ""
        }
        [
            position = 9352, 8136
        ]

        component "core/Probe" test_flag_fb {
            execution_rate = "TS_20KHZ"
            signal_access = "Inherit"
        }
        [
            position = 9472, 8136
        ]

        component Subsystem VSC1 {
            layout = dynamic
            component "core/Resistor" Rd {
                resistance = "VSC1_RD"
            }
            [
                position = 9832, 7232
                rotation = right
            ]

            component "core/Voltage Measurement" VC {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 9896, 7232
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" I0 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 9976, 7088
                size = 64, 32
            ]

            component "core/Inductor" Lf {
                inductance = "VSC1_LF"
                signal_access = "Inherit"
            }
            [
                position = 9560, 7088
            ]

            component "core/Voltage Source" V_DC {
                init_const_value = "VSC1_VDC"
            }
            [
                position = 9288, 7208
                rotation = right
            ]

            component "core/Capacitor" Cf {
                capacitance = "VSC1_C"
                signal_access = "Inherit"
            }
            [
                position = 9832, 7144
                rotation = right
            ]

            component "core/Current Measurement" IF {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 9760, 7088
                size = 64, 32
            ]

            component "core/Resistor" Rbus {
                resistance = "1e-6"
            }
            [
                position = 9288, 7128
                rotation = right
            ]

            component "core/Single-phase Meter" Meter {
                enable_out = "False"
                execution_rate = "TS_20KHZ"
                fgrid = "60.0"
                n_cycles = "1"
            }
            [
                position = 10168, 7088
                size = 80, 80
            ]

            component "core/Single Phase Inverter" "GRID FORMING" {
                carr_ph_offset = "[0.0, 0.0]"
                carrier_freq = "20e3"
                ctrl_src = "Model"
                dynamic_ac_voltage = "True"
                execution_rate = "TS_01MHZ"
                fvd_def_method = "LUT"
                load_mode = "on either"
                signal_access = "Inherit"
            }
            [
                position = 9424, 7184
                size = 127, 256
            ]

            component "core/C function" SOGI_QSG {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;

// Current SOGI
struct SOGIqsg i_sogi;
float i_alpha = 0;
float i_beta = 0;
float i_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_20KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.6, 0.2);

// Current SOGI Variables
i_alpha = 0;
i_beta = 0;
i_freq = 60;
// Current SOGI Initialization
SOGIInit(&i_sogi, i_freq, 0.6, 0.2);
/*End code section*/"
                input_terminals = "real IN_VC;real IN_I0;"
                input_terminals_dimensions = "1;1"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
/***INPUT DESCRIPTION ***/

// IN_VC: Voltage over C_{f} capacitor
// IN_I0:  Current over L_{0} inductor

/*** CONTROL LAW ***/

// Compute SOGI + FLL for v_{c}
executeSOGI(&v_sogi, IN_VC, &v_alpha, &v_beta, &v_freq);

// Compute SOGI + FLL for i_{0}
executeSOGI(&i_sogi, IN_I0, &i_alpha, &i_beta, &i_freq);

// Handle Ouput
OUT_VC_AB0[0] = v_alpha;
OUT_VC_AB0[1] = v_beta;
OUT_I0_AB0[0] = i_alpha;
OUT_I0_AB0[1] = i_beta;
/*End code section*/"
                output_terminals = "real OUT_VC_AB0;real OUT_I0_AB0;"
                output_terminals_dimensions = "2;2"
                output_terminals_feedthrough = "True;True"
                output_terminals_show_labels = "False;False"
            }
            [
                position = 9928, 7552
                hide_name = True
                size = 48, 88
            ]

            component "core/Resistor" Rf {
                resistance = "VSC1_RF"
            }
            [
                position = 9656, 7088
            ]

            component "core/Single Phase Core Coupling" "Core Coupling 2" {
                snb_type_i = "R1-C1"
            }
            [
                position = 10264, 7184
                hide_name = True
                size = 12, 256
            ]

            component "core/Product" Product1 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 9120, 7608
                hide_name = True
            ]

            component "core/Product" Product2 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 9120, 7688
                hide_name = True
            ]

            component "core/Constant" Constant9 {
                execution_rate = "TS_20KHZ"
                value = "VSC1_S"
            }
            [
                position = 8912, 7600
                hide_name = True
            ]

            component "core/C function" VOLTAGE_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Ressonant Controller Struct redeclaration
struct MRAC {
    // general
    float sampling_time;
    float gamma;
    float ts_times_gamma;

    // reference model W_{m}(z)
    float pole_0;
    float pole_1;
    float pole_2;
    // phase and gain correction for W_{m}(z)
    float rho;
    float phi;
    // recurrence equation gains
    float alpha0;
    float alpha1;
    float alpha2;
    float alpha3;
    float beta1;
    float beta2;
    float beta3;

    // augmented error
    float a_err_kminus1;

    // recurrence equation variables for y_{m} ==> Y(z)/R(z) = W_{m}(z)
    float ym_kminus1;
    float ym_kminus2;
    float ym_kminus3;

    // recurrence equation variables for v ==> V(z)/U_{bounded}(z) = W_{m}(z)
    float v_kminus1;
    float v_kminus2;
    float v_kminus3;
    float ub_kminus1;
    float ub_kminus2;
    float ub_kminus3;
    float ub_kminus4;

    // output boundary
    float u_boundary;

    // X[k-1]
    float x1_kminus1;
    float x2_kminus1;
    float x3_kminus1;
    float r_kminus1;
    float ds_kminus1;
    float dc_kminus1;
    // X[k-2]
    float x1_kminus2;
    float x2_kminus2;
    float x3_kminus2;
    float r_kminus2;
    float ds_kminus2;
    float dc_kminus2;
    // X[k-3]
    float x1_kminus3;
    float x2_kminus3;
    float x3_kminus3;
    float r_kminus3;
    float ds_kminus3;
    float dc_kminus3;

    // zeta[k]
    float zeta_x1;
    float zeta_x2;
    float zeta_x3;
    float zeta_u;
    float zeta_r;
    float zeta_ds;
    float zeta_dc;
    // zeta[k-1]
    float zeta_x1_kminus1;
    float zeta_x2_kminus1;
    float zeta_x3_kminus1;
    float zeta_u_kminus1;
    float zeta_r_kminus1;
    float zeta_ds_kminus1;
    float zeta_dc_kminus1;
    // zeta[k-2]
    float zeta_x1_kminus2;
    float zeta_x2_kminus2;
    float zeta_x3_kminus2;
    float zeta_u_kminus2;
    float zeta_r_kminus2;
    float zeta_ds_kminus2;
    float zeta_dc_kminus2;
    // zeta[k-3]
    float zeta_x1_kminus3;
    float zeta_x2_kminus3;
    float zeta_x3_kminus3;
    float zeta_u_kminus3;
    float zeta_r_kminus3;
    float zeta_ds_kminus3;
    float zeta_dc_kminus3;

    // theta[k]
    float theta_x1;
    float theta_x2;
    float theta_x3;
    float theta_u;
    float theta_r;
    float theta_ds;
    float theta_dc;
    // zeta[k-1]
    float theta_x1_kminus1;
    float theta_x2_kminus1;
    float theta_x3_kminus1;
    float theta_u_kminus1;
    float theta_r_kminus1;
    float theta_ds_kminus1;
    float theta_dc_kminus1;

    // normalization signal
    float inv_m2_kminus1;

    // teste
    float csi;
};

// MRAC variables
struct MRAC mrac;
float u = 0;
float ym = 0;

// Constants declaration
float TS_20KHZ = 0;
float OUTPUT_BOUNDARY = 0;

// Thetas
float theta0 = 0;
float theta1 = 0;
float theta2 = 0;
float theta3 = 0;
float theta4 = 0;
float theta5 = 0;
float theta6 = 0;

// W_{m} gains
float ALPHA0 = 0;
float ALPHA1 = 0;
float ALPHA2 = 0;
float ALPHA3 = 0;
float BETA1 = 0;
float BETA2 = 0;
float BETA3 = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_mrac.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_mrac.dll"
                execution_rate = "TS_20KHZ"
                h_file_path = "..\src\mrac.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\mrac.h"
                init_fnc = "/*Begin code section*/
// Auxiliary variables
TS_20KHZ = 0.00005;
OUTPUT_BOUNDARY = 500;

// MRAC variables
u = 0;
ym = 0;

// Thetas
theta0 = 0;
theta1 = 0;
theta2 = 0;
theta3 = 0;
theta4 = 0;
theta5 = 0;
theta6 = 0;

// W_{m} gains
ALPHA0 = +0.000000000000000e+00;
ALPHA1 = +0.000000000000000e+00;
ALPHA2 = +0.000000000000000e+00;
ALPHA3 = +3.429999999999999e-01;
BETA1 = -8.999999999999999e-01;
BETA2 = +2.700000000000000e-01;
BETA3 = -2.700000000000000e-02;

// MRAC initialization
initMRAC(&mrac, TS_20KHZ);
setBoundary(&mrac, OUTPUT_BOUNDARY);
setGamma(&mrac, 100);
setWmCoeffs(&mrac, ALPHA0, ALPHA1, ALPHA2, ALPHA3, BETA1, BETA2, BETA3);
/*End code section*/"
                input_terminals = "real IN_VC0_AB0;real IN_X;real IN_D_AB0;real IN_MRAC_PARAM;"
                input_terminals_dimensions = "2;3;2;3"
                input_terminals_feedthrough = "True;True;True;True"
                input_terminals_show_labels = "False;False;False;False"
                output_fnc = "/*Begin code section*/
/***INPUT DESCRIPTION ***/

// IN_VC0_AB0[0] =  v_{c0_{alpha}}
// IN_VC0_AB0[1] =  v_{c0_{beta}}

// IN_X[0] = i_{f}
// IN_X[1] = v_{c}
// IN_X[2] = i_{0}

// IN_D_AB0[0] = d_{sin}
// IN_D_AB0[1] = d_{cos}

//IN_MRAC_PARAM[0] = gamma
//IN_MRAC_PARAM[1] = 1.0 / rho_{m}
//IN_MRAC_PARAM[2] = theta_{m}

// IN_ENABLE: this converter status

/*** CONTROL LAW ***/

// Set MRAC Parameters according to SCADA inputs
setGamma(&mrac, IN_MRAC_PARAM[0]);
setGain(&mrac, IN_MRAC_PARAM[1]);
setPhaseShift(&mrac, IN_MRAC_PARAM[2]);
// MRAC controller computation
computeMRAC(&mrac, IN_VC0_AB0[0], IN_VC0_AB0[1], IN_X[0], IN_X[1], IN_X[2], IN_D_AB0[0], IN_D_AB0[1], &u, &ym);
// Get thetas
getTheta(&mrac, &theta0, &theta1, &theta2, &theta3, &theta4, &theta5, &theta6);
// Handle output
OUT_UV = u;
OUT_YM = ym;
OUT_THETA[0] = theta0;
OUT_THETA[1] = theta1;
OUT_THETA[2] = theta2;
OUT_THETA[3] = theta3;
OUT_THETA[4] = theta4;
OUT_THETA[5] = theta5;
OUT_THETA[6] = theta6;
/*End code section*/"
                output_terminals = "real OUT_UV;real OUT_YM;real OUT_THETA;"
                output_terminals_dimensions = "1;1;7"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "False;False;False"
            }
            [
                position = 10304, 7944
                hide_name = True
                size = 48, 224
            ]

            component "core/C function" SOGI_QSG1 {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_20KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.7, 0.3);
/*End code section*/"
                input_terminals = "real IN_VC0;"
                input_terminals_dimensions = "1"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "False"
                output_fnc = "/*Begin code section*/
/***INPUT DESCRIPTION ***/

// IN_VC0: voltage reference from primary control

/*** CONTROL LAW ***/

// Compute SOGI
executeSOGI(&v_sogi, IN_VC0, &v_alpha, &v_beta, &v_freq);
// Handle output
OUT_VC0_AB0[0] = v_alpha;
OUT_VC0_AB0[1] = v_beta;
/*End code section*/"
                output_terminals = "real OUT_VC0_AB0;"
                output_terminals_dimensions = "2"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10304, 7720
                hide_name = True
                size = 48, 80
            ]

            component "core/SCADA Input" GAMMA {
                def_value = "200"
                execution_rate = "TS_20KHZ"
                max = "1000"
                min = "1"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 9416, 7592
            ]

            component "core/SCADA Input" GAIN {
                def_value = "1"
                execution_rate = "TS_20KHZ"
                max = "3"
                min = "0.1"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 9416, 7648
            ]

            component "core/SCADA Input" PHASE_SHIFT {
                execution_rate = "TS_20KHZ"
                max = "1.57079632679"
                min = "-1.57079632679"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 9416, 7704
            ]

            component "core/Bus Selector" "Bus Selector1" {
                signal_indexes = "[0,1]"
            }
            [
                position = 8992, 7688
                hide_name = True
            ]

            component Subsystem Modulation {
                layout = dynamic
                component "core/C function" Comparator {
                    arb_defs = "/*Begin code section*/

/*End code section*/"
                    execution_rate = "TS_01MHZ"
                    input_terminals = "real IN_MOD;real IN_CARRIER;"
                    input_terminals_dimensions = "1;1"
                    input_terminals_feedthrough = "True;True"
                    input_terminals_show_labels = "True;True"
                    output_fnc = "/*Begin code section*/
// Modulating  (0º) comparison with Carrier
if (+1.0 * IN_MOD > IN_CARRIER){
    OUT_G_S1 = 1;
    OUT_G_S2 = 0;
}else{
    OUT_G_S1 = 0;
    OUT_G_S2 = 1;
}

// Modulating  (180º) comparison with Carrier
if (-1.0 * IN_MOD > IN_CARRIER){
    OUT_G_S3 = 1;
    OUT_G_S4 = 0;
}else{
    OUT_G_S3 = 0;
    OUT_G_S4 = 1;
}
/*End code section*/"
                    output_terminals = "real OUT_G_S1;real OUT_G_S2;real OUT_G_S3;real OUT_G_S4;"
                    output_terminals_dimensions = "1;1;1;1"
                    output_terminals_feedthrough = "True;True;True;True"
                    output_terminals_show_labels = "False;False;False;False"
                }
                [
                    position = 7888, 8064
                    size = 176, 168
                ]

                component "core/Bus Join" "Bus Join1" {
                    execution_rate = "TS_01MHZ"
                    inputs = "4"
                }
                [
                    position = 8096, 8064
                    hide_name = True
                ]

                component "core/Triangular Wave Source" CARRIER {
                    execution_rate = "TS_01MHZ"
                    frequency = "20000"
                    max_val = "1"
                    min_val = "0"
                }
                [
                    position = 7632, 8128
                ]

                component "core/Gain" Gain1 {
                    gain = "VSC1_VDC"
                }
                [
                    position = 7728, 8128
                ]

                component "core/Rate Transition" "Rate Transition1" {
                    execution_rate = "TS_01MHZ"
                }
                [
                    position = 7728, 8000
                    hide_name = True
                    size = 32, 32
                ]

                port M {
                    position = auto:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7632, 8000
                ]

                port G {
                    position = right:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8200, 8064
                ]

                connect "Bus Join1.out" G as Connection25
                connect CARRIER.out Gain1.in as Connection63
                connect Gain1.out Comparator.IN_CARRIER as Connection64
                connect Comparator.OUT_G_S1 "Bus Join1.in" as Connection66
                [
                    breakpoints = 8032, 8000; 8032, 8040
                ]
                connect Comparator.OUT_G_S2 "Bus Join1.in1" as Connection67
                [
                    breakpoints = 8016, 8048; 8016, 8056
                ]
                connect "Bus Join1.in2" Comparator.OUT_G_S3 as Connection68
                [
                    breakpoints = 8056, 8072; 8016, 8072; 8016, 8080
                ]
                connect Comparator.OUT_G_S4 "Bus Join1.in3" as Connection69
                [
                    breakpoints = 8032, 8128; 8032, 8088
                ]
                connect M "Rate Transition1.in" as Connection70
                connect "Rate Transition1.out" Comparator.IN_MOD as Connection71
            }
            [
                position = 10608, 7552
                hide_name = True
                size = 48, 88
            ]

            component "core/C function" VIRTUAL_IMPEDANCE {
                add_src_path = "..\src"
                add_src_path_full = "C:\projetos\adaptive_single_phase_microgrid\src"
                arb_defs = "/*Begin code section*/
// Virtual Impedance Struct definition
struct VirtualImpedance
{
  // general
  float sampling_time;
  float resistance;
  float inductance;
  float zeta;
  float omega_pole;

  // recurrence equation gains
  float alpha0;
  float alpha1;
  float alpha2;
  float beta1;
  float beta2;

  // previous interest variables
  float current_kminus1;
  float current_kminus2;
  float voltage_kminus1;
  float voltage_kminus2;
};

// Virtual Impedance Constants
const float TS = 0.0001;
const float RESISTANCE = 1.0e-4;
const float INDUCTANCE = 1.5e-3;
const float ZETA = 1.0;
const float POLE = 9424.77796077;

// Struct declaration
struct VirtualImpedance vz;

// Virtual Impedance  Variables
float output = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_virtual_impedance.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_virtual_impedance.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\virtual_impedance.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\virtual_impedance.h"
                init_fnc = "/*Begin code section*/
// Struct initialization
initVirtualImpedance(&vz, TS, RESISTANCE, INDUCTANCE, ZETA, POLE);
// Virtual Impedance Variables
output = 0;
/*End code section*/"
                input_terminals = "real IN_I0;real IN_ZV_PARAM;"
                input_terminals_dimensions = "1;3"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
/***INPUT DESCRIPTION ***/

// IN_I0 = i_{0}

// IN_ZV_PARAM[0] = L_{v}
// IN_ZV_PARAM[1] = R_{v}
// IN_ZV_PARAM[2] = omega_{p}

/*** CONTROL LAW ***/

// Set Z_{V} according to SCADA input
setInductance(&vz, 1e-3*IN_ZV_PARAM[0]);
setResistance(&vz, 1e-3*IN_ZV_PARAM[1]);
setComplexPole(&vz, IN_ZV_PARAM[2]);

// Virtual Impedance computation
executeVirtualImpedance(&vz, IN_I0, &output);

// Handle Output
OUT_VL_DROP = output;
/*End code section*/"
                output_terminals = "real OUT_VL_DROP;"
                output_terminals_dimensions = "1"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 9928, 8136
                hide_name = True
                size = 48, 80
            ]

            component "core/Rate Transition" "Rate Transition1" {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 10232, 7720
                hide_name = True
                size = 32, 32
            ]

            component "core/C function" TESTE {
                arb_defs = "/*Begin code section*/
float i0_rms = 0;
float k_zv = 0;
float v0 = 0;
float v0_bounded = 0;
/*End code section*/"
                execution_rate = "TS_10KHZ"
                init_fnc = "/*Begin code section*/
i0_rms = 0;
k_zv = 0;
v0 = 0;
v0_bounded = 0;
/*End code section*/"
                input_terminals = "real IN_V_DROOP;real IN_V_VIRTUAL;real IN_I0_AB0;"
                input_terminals_dimensions = "1;1;2"
                input_terminals_feedthrough = "True;True;True"
                input_terminals_show_labels = "False;False;False"
                output_fnc = "/*Begin code section*/
/***INPUT DESCRIPTION ***/

// IN_V_DROOP: voltage reference from droop

// IN_V_VIRTUAL: voltage drop across virtual impedance

// IN_I0_AB0[0] = i_{0_{alpha}}
// IN_I0_AB0[1] = i_{0_{beta}}

/*** CONTROL LAW ***/

// Compute RMS Value of i_{0}
i0_rms = (1.0/sqrt(2.0)) * sqrt(IN_I0_AB0[0]*IN_I0_AB0[0] + IN_I0_AB0[1]*IN_I0_AB0[1]);
// Limit i0_rms to 100 A_{rms}
if(i0_rms > 110)
    i0_rms = 110;

// Compute Z_{virtual} gain factor based on I_{0_{rms}}
k_zv = 1 + exp(0.1*(-100 + i0_rms));
k_zv = 1;

// Compute V_{0}
v0 = IN_V_DROOP - k_zv * IN_V_VIRTUAL;

// Execute output limitation function
v0_bounded = v0;
if( (v0*v0)/sqrt(v0*v0) > (220*1.5))
    v0_bounded = (220*1.5) * v0 / sqrt(v0*v0);

// Handle output
OUT_V0 = v0_bounded;
/*End code section*/"
                output_terminals = "real OUT_V0;"
                output_terminals_dimensions = "1"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10304, 7560
                hide_name = True
                size = 48, 112
            ]

            component "core/Bus Join" "Bus Join1" {
                inputs = "3"
            }
            [
                position = 9536, 7648
                hide_name = True
            ]

            component "core/SCADA Input" KV {
                unit = ""
            }
            [
                position = 9416, 7872
            ]

            component "core/SCADA Input" KI {
                unit = ""
            }
            [
                position = 9416, 7936
            ]

            component "core/Bus Join" "Bus Join2" {
            }
            [
                position = 9536, 7904
                hide_name = True
            ]

            component "core/SCADA Input" LV {
                def_value = "1.5"
                execution_rate = "TS_10KHZ"
                max = "10"
                min = "0"
                signal_access = "Inherit"
                unit = "mH"
            }
            [
                position = 9416, 8184
            ]

            component "core/SCADA Input" RV {
                def_value = "0.1"
                execution_rate = "TS_10KHZ"
                max = "10"
                min = "0"
                signal_access = "Inherit"
                unit = "mOhm"
            }
            [
                position = 9416, 8240
            ]

            component "core/SCADA Input" W0 {
                def_value = "5000"
                execution_rate = "TS_10KHZ"
                max = "20000"
                min = "500"
                signal_access = "Inherit"
                unit = "rad/s"
            }
            [
                position = 9416, 8296
            ]

            component "core/SCADA Input" FC {
                def_value = "800"
                execution_rate = "TS_10KHZ"
                max = "1000"
                min = "120"
                signal_access = "Inherit"
                unit = "Hz"
            }
            [
                position = 9416, 8128
            ]

            component "core/Bus Join" "Bus Join3" {
                inputs = "3"
            }
            [
                position = 9536, 8240
                hide_name = True
            ]

            component "core/Rate Transition" RT80 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9856, 7816
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" "Rate Transition2" {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9856, 7688
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" "Rate Transition3" {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9856, 7752
                hide_name = True
                size = 32, 32
            ]

            component "core/Bus Join" "Bus Join4" {
            }
            [
                position = 9216, 7648
                hide_name = True
            ]

            component "core/C function" DROOP_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Constant definitions
const float VZERO = 220;
const float WZERO = 376.9911;
const float DELTA_V = 30;
const float DELTA_W = 18.8495559215;
const float TWOPI = 6.2831;
const float TS_10KHZ = 0.0001;
const float WC = 62.8318530718;
float POWER_ROC = 5;

// Structs redefinition
struct ImprovedDroop
{
    // general
    float sampling_time;

    // variables to implement first order low pass filter
    float cutoff_frequency;
    float phi1;
    float phi2;
    float phi3;
    // for active power
    float p_kminus1;
    float pf_kminus1;
    // for reactive power
    float q_kminus1;
    float qf_kminus1;

    // classical droop variables
    float p_max;
    float q_max;
    float p0;
    float q0;
    float v0;
    float w0;
    float m;
    float n;

    // improved droop variables
    float ki;
    float kv;
    float kq;

    // integrator variables
    float phi_integral;
    // for voltage integration
    float vin_kminus1;
    float vout_kminus1;
    // for frequency integration
    float w_kminus1;
    float theta_kminus1;
};

// Structs declaration
struct ImprovedDroop droop;

// Droop Controller variables
float v = 0;
float p = 0;
float q = 0;
float p_ref = 0;
float q_ref = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_improved_droop.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_improved_droop.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\improved_droop.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\improved_droop.h"
                init_fnc = "/*Begin code section*/
// Droop constants
POWER_ROC = 5;
// Droop variables
v = 0;
p = 0;
q = 0;
p_ref = 0;
q_ref = 0;
// Controllers initialization
initDroop(&droop, TS_10KHZ, VZERO, WZERO, 15000, 15000, DELTA_V, DELTA_W, WC, 5, 5);
/*End code section*/"
                input_terminals = "real IN_VC_AB0;real IN_I0_AB0;real IN_S0;real IN_DROOP_PARAM;"
                input_terminals_dimensions = "2;2;2;2"
                input_terminals_feedthrough = "True;True;True;True"
                input_terminals_show_labels = "False;False;False;False"
                output_fnc = "/*Begin code section*/
/***INPUT DESCRIPTION ***/

// IN_VC_AB0[0] =  v_{c_{\alpha}}
// IN_VC_AB0[1] =  v_{c_{\beta}}

// IN_I0_AB0[0] =  i_{0_{\alpha}}
// IN_I0_AB0[1] =  i_{0_{\beta}}

// IN_S0[0] = p_{0}
// IN_S0[1] = q_{0}

//IN_MRAC_PARAM[0] = gamma
//IN_MRAC_PARAM[1] = 1.0 / rho_{m}
//IN_MRAC_PARAM[2] = theta_{m}

// IN_MICROGRID_STATUS: represents if the MG is in connected mode or island mode

// IN_ENABLE: this converter status

/*** CONTROL LAW ***/

// Set Droop parameters according to SCADA inputs
setKi(&droop, IN_DROOP_PARAM[0]);
setKv(&droop, IN_DROOP_PARAM[1]);
// Active power ramp
if(IN_S0[0]  > p_ref) p_ref += POWER_ROC;
if(IN_S0[0]  < p_ref) p_ref -= POWER_ROC;
// Reactive power ramp
if(IN_S0[1] > q_ref) q_ref += POWER_ROC;
if(IN_S0[1] < q_ref) q_ref -= POWER_ROC;
// Set new power reference
setP0(&droop, p_ref);
setQ0(&droop, q_ref);
// Droop controller execution
executeDroop(&droop, IN_VC_AB0[0], IN_VC_AB0[1], IN_I0_AB0[0], IN_I0_AB0[1], &v, &p, &q);
// Handle Output
OUT_V = v;
OUT_SF[0] = p;
OUT_SF[1] = q;
OUT_S0[0] = p_ref;
OUT_S0[1] = q_ref;
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_SF;real OUT_S0;"
                output_terminals_dimensions = "1;2;2"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "False;False;False"
            }
            [
                position = 9928, 7784
                hide_name = True
                size = 48, 248
            ]

            component "core/Advanced Low-Pass Filter" LPF {
                N = "2"
                apb = "3"
                execution_rate = "TS_10KHZ"
                fc = "300"
                fc_combo = "External"
                type_combo = "Butterworth"
            }
            [
                position = 9928, 7992
                hide_name = True
                size = 48, 48
            ]

            component "core/Rate Transition" RT61 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9856, 7984
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" "Rate Transition4" {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10232, 7592
                hide_name = True
                size = 32, 32
            ]

            component "core/Bus Join" "Bus Join5" {
                inputs = "3"
            }
            [
                position = 9128, 7864
                hide_name = True
            ]

            component "core/Probe" SF {
            }
            [
                position = 10728, 7760
            ]

            component "core/Probe" V_ZV {
            }
            [
                position = 10728, 7928
            ]

            component "core/Probe" THETA {
            }
            [
                position = 10728, 8168
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" YM {
            }
            [
                position = 10728, 8112
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" VC0_AB0 {
            }
            [
                position = 10728, 8056
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" MOD {
            }
            [
                position = 10728, 8224
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" S0 {
            }
            [
                position = 10728, 7816
            ]

            component "core/Probe" E_TR {
            }
            [
                position = 10728, 8536
                rotation = down
                scale = -1, -1
            ]

            component "core/Sum" Sum1 {
                signs = "+-"
            }
            [
                position = 10624, 8536
                hide_name = True
            ]

            component "core/C function" RMS_YM {
                arb_defs = "/*Begin code section*/
float x = 0;
/*End code section*/"
                init_fnc = "/*Begin code section*/
x = 0;
/*End code section*/"
                input_terminals = "real IN;"
                input_terminals_dimensions = "2"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "False"
                output_fnc = "/*Begin code section*/
x = (1.0/sqrt(2.0)) * sqrt(IN[0]*IN[0] + IN[1]*IN[1]);

OUT = x;
/*End code section*/"
                output_terminals = "real OUT;"
                output_terminals_dimensions = "1"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10664, 8368
                size = 48, 48
            ]

            component "core/C function" SOGI_YM {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_20KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.7, 0.3);
/*End code section*/"
                input_terminals = "real IN_VC0;"
                input_terminals_dimensions = "1"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "False"
                output_fnc = "/*Begin code section*/
/***INPUT DESCRIPTION ***/

// IN_VC0: voltage reference from primary control

/*** CONTROL LAW ***/

// Compute SOGI
executeSOGI(&v_sogi, IN_VC0, &v_alpha, &v_beta, &v_freq);
// Handle output
OUT_VC0_AB0[0] = v_alpha;
OUT_VC0_AB0[1] = v_beta;
/*End code section*/"
                output_terminals = "real OUT_VC0_AB0;"
                output_terminals_dimensions = "2"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10592, 8368
                size = 48, 48
            ]

            component "core/Probe" YM_RMS {
            }
            [
                position = 10728, 8368
                rotation = down
                scale = -1, -1
            ]

            component "core/C function" RMS_VC {
                arb_defs = "/*Begin code section*/
float x = 0;
/*End code section*/"
                init_fnc = "/*Begin code section*/
x = 0;
/*End code section*/"
                input_terminals = "real IN;"
                input_terminals_dimensions = "2"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "False"
                output_fnc = "/*Begin code section*/
x = (1.0/sqrt(2.0)) * sqrt(IN[0]*IN[0] + IN[1]*IN[1]);

OUT = x;
/*End code section*/"
                output_terminals = "real OUT;"
                output_terminals_dimensions = "1"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10664, 8448
                size = 48, 48
            ]

            component "core/C function" SOGI_VC {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_20KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.7, 0.3);
/*End code section*/"
                input_terminals = "real IN_VC0;"
                input_terminals_dimensions = "1"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "False"
                output_fnc = "/*Begin code section*/
/***INPUT DESCRIPTION ***/

// IN_VC0: voltage reference from primary control

/*** CONTROL LAW ***/

// Compute SOGI
executeSOGI(&v_sogi, IN_VC0, &v_alpha, &v_beta, &v_freq);
// Handle output
OUT_VC0_AB0[0] = v_alpha;
OUT_VC0_AB0[1] = v_beta;
/*End code section*/"
                output_terminals = "real OUT_VC0_AB0;"
                output_terminals_dimensions = "2"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10592, 8448
                size = 48, 48
            ]

            component "core/Probe" VC_RMS {
            }
            [
                position = 10728, 8448
                rotation = down
                scale = -1, -1
            ]

            port L {
                position = right:auto
                kind = pe
            }
            [
                position = 10320, 7088
                scale = -1, 1
            ]

            port N {
                position = right:auto
                kind = pe
            }
            [
                position = 10320, 7280
                scale = -1, 1
            ]

            port "Info in" {
                position = left:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 8912, 7688
                hide_name = True
            ]

            tag Goto1 {
                value = "I0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9976, 7008
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag Goto13 {
                value = "VC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9976, 7232
                hide_name = True
                size = 60, 20
            ]

            tag Goto10 {
                value = "IF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9760, 7008
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From95 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 7528
                hide_name = True
                size = 60, 20
            ]

            tag From96 {
                value = "I0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 7576
                hide_name = True
                size = 60, 20
            ]

            tag Goto107 {
                value = "VC_AB0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10024, 7528
                hide_name = True
                size = 60, 20
            ]

            tag Goto150 {
                value = "MOD"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10400, 7856
                hide_name = True
                size = 60, 20
            ]

            tag From188 {
                value = "VC_AB0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10152, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Goto153 {
                value = "VC0_AB0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10400, 7720
                hide_name = True
                size = 60, 20
            ]

            tag From193 {
                value = "VC0_AB0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10152, 7864
                hide_name = True
                size = 60, 20
            ]

            tag From1958 {
                value = "MRAC_PARAM"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10152, 8024
                hide_name = True
                size = 60, 20
            ]

            tag From1967 {
                value = "MOD"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 7552
                hide_name = True
                size = 60, 20
            ]

            tag Goto159 {
                value = "GATE"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10712, 7552
                hide_name = True
                size = 60, 20
            ]

            tag From1968 {
                value = "GATE"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9424, 7008
                rotation = right
                hide_name = True
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto146 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10024, 7680
                hide_name = True
                size = 60, 20
            ]

            tag Goto143 {
                value = "V_ZV"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10024, 8136
                hide_name = True
                size = 60, 20
            ]

            tag From161 {
                value = "I0_F"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 8120
                hide_name = True
                size = 60, 20
            ]

            tag From192 {
                value = "VC0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10152, 7720
                hide_name = True
                size = 60, 20
            ]

            tag From1977 {
                value = "STATES"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10152, 7912
                hide_name = True
                size = 60, 20
            ]

            tag From1979 {
                value = "V_ZV"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10152, 7560
                hide_name = True
                size = 60, 20
            ]

            tag From1980 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10152, 7528
                hide_name = True
                size = 60, 20
            ]

            tag Goto160 {
                value = "VC0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10400, 7560
                hide_name = True
                size = 60, 20
            ]

            tag Goto161 {
                value = "MRAC_PARAM"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9624, 7648
                hide_name = True
                size = 60, 20
            ]

            tag Goto162 {
                value = "DROOP_PARAM"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9624, 7904
                hide_name = True
                size = 60, 20
            ]

            tag Goto163 {
                value = "ZV_PARAM"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9624, 8240
                hide_name = True
                size = 60, 20
            ]

            tag Goto164 {
                value = "W_CP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9624, 8128
                hide_name = True
                size = 60, 20
            ]

            tag From1985 {
                value = "ZV_PARAM"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 8152
                hide_name = True
                size = 60, 20
            ]

            tag Goto165 {
                value = "I0_AB0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10024, 7576
                hide_name = True
                size = 60, 20
            ]

            tag From169 {
                value = "VC_AB0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 7688
                hide_name = True
                size = 60, 20
            ]

            tag From170 {
                value = "I0_AB0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 7752
                hide_name = True
                size = 60, 20
            ]

            tag From174 {
                value = "S0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 7816
                hide_name = True
                size = 60, 20
            ]

            tag From1983 {
                value = "DROOP_PARAM"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 7880
                hide_name = True
                size = 60, 20
            ]

            tag Goto166 {
                value = "S0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9304, 7648
                hide_name = True
                size = 60, 20
            ]

            tag Goto167 {
                value = "SF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10024, 7784
                hide_name = True
                size = 60, 20
            ]

            tag Goto168 {
                value = "SREF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10024, 7888
                hide_name = True
                size = 60, 20
            ]

            tag Goto142 {
                value = "I0_F"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10024, 7992
                hide_name = True
                size = 60, 20
            ]

            tag From143 {
                value = "I0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 7984
                hide_name = True
                size = 60, 20
            ]

            tag From1984 {
                value = "W_CP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 8024
                hide_name = True
                size = 60, 20
            ]

            tag From1986 {
                value = "I0_AB0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10152, 7592
                hide_name = True
                size = 60, 20
            ]

            tag From1987 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9016, 7864
                hide_name = True
                size = 60, 20
            ]

            tag From1988 {
                value = "IF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9016, 7832
                hide_name = True
                size = 60, 20
            ]

            tag From1989 {
                value = "I0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9016, 7896
                hide_name = True
                size = 60, 20
            ]

            tag Goto169 {
                value = "STATES"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9216, 7864
                hide_name = True
                size = 60, 20
            ]

            tag From1990 {
                value = "SF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 7760
                hide_name = True
                size = 60, 20
            ]

            tag From1992 {
                value = "V_ZV"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 7928
                hide_name = True
                size = 60, 20
            ]

            tag Goto170 {
                value = "YM"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10400, 7944
                hide_name = True
                size = 60, 20
            ]

            tag Goto171 {
                value = "THETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10400, 8032
                hide_name = True
                size = 60, 20
            ]

            tag From1993 {
                value = "YM"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8112
                hide_name = True
                size = 60, 20
            ]

            tag From1994 {
                value = "THETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8168
                hide_name = True
                size = 60, 20
            ]

            tag From1995 {
                value = "VC0_AB0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8056
                hide_name = True
                size = 60, 20
            ]

            tag From1996 {
                value = "MOD"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8224
                hide_name = True
                size = 60, 20
            ]

            tag From1997 {
                value = "SREF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 7816
                hide_name = True
                size = 60, 20
            ]

            tag From1998 {
                value = "YM"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8560
                hide_name = True
                size = 60, 20
            ]

            tag From1999 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8528
                hide_name = True
                size = 60, 20
            ]

            tag From2000 {
                value = "YM"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8368
                hide_name = True
                size = 60, 20
            ]

            tag From2001 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8448
                hide_name = True
                size = 60, 20
            ]

            junction Junction87 pe
            [
                position = 9832, 7088
            ]

            junction Junction88 pe
            [
                position = 9896, 7088
            ]

            junction Junction97 pe
            [
                position = 9832, 7280
            ]

            junction Junction104 pe
            [
                position = 9896, 7280
            ]

            junction Junction105 pe
            [
                position = 10168, 7280
            ]

            junction Junction81 sp
            [
                position = 9072, 7600
            ]

            comment Comment28 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:36pt; font-weight:696;">POWER SYSTEM</span></p></body></html> ENDCOMMENT 
            [
                position = 9584, 6864
            ]

            comment Comment16 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">SOGI-QSG + FLL </p></body></html> ENDCOMMENT 
            [
                position = 9832, 7464
            ]

            comment Comment23 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">OUT[0] = P0</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">OUT[1] = Q0</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">OUT[2] = SHORT CIRCUIT</span> </p></body></html> ENDCOMMENT 
            [
                position = 9040, 7504
            ]

            comment Comment24 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">HANDLE INFO INPUT</p></body></html> ENDCOMMENT 
            [
                position = 9032, 7464
            ]

            comment Comment36 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">MRAC CONTROLLER </p></body></html> ENDCOMMENT 
            [
                position = 10200, 7784
            ]

            comment Comment38 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">SOGI-QSG + FLL </p></body></html> ENDCOMMENT 
            [
                position = 10216, 7640
            ]

            comment Comment39 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">MRAC PARAMETERS</p></body></html> ENDCOMMENT 
            [
                position = 9440, 7464
            ]

            comment Comment40 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">HARDWARE PWM</p></body></html> ENDCOMMENT 
            [
                position = 10536, 7464
            ]

            comment Comment34 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER</p></body></html> ENDCOMMENT 
            [
                position = 9824, 7616
            ]

            comment Comment30 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">LOW PASS FILTER</p></body></html> ENDCOMMENT 
            [
                position = 9840, 7928
            ]

            comment Comment32 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VIRTUAL IMPEDANCE</p></body></html> ENDCOMMENT 
            [
                position = 9832, 8056
            ]

            comment Comment42 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">MODULATION</span></p></body></html> ENDCOMMENT 
            [
                position = 10480, 7376
            ]

            comment Comment43 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VOLTAGE REFERENCE</p></body></html> ENDCOMMENT 
            [
                position = 10184, 7464
            ]

            comment Comment44 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">SCADA INPUTS</span></p></body></html> ENDCOMMENT 
            [
                position = 9384, 7376
            ]

            comment Comment45 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">MRAC_PARAM[0] = gamma</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">MRAC_PARAM[1] = 1.0 / rho_{m}</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">MRAC_PARAM[2] = theta_{m}  </span> </p></body></html> ENDCOMMENT 
            [
                position = 9424, 7504
            ]

            comment Comment46 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP PARAMETERS </p></body></html> ENDCOMMENT 
            [
                position = 9440, 7760
            ]

            comment Comment47 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">DROOP_PARAM[0] = k_{i}</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">DROOP</span><span style=" font-size:9pt;">_PARAM[1] = </span><span style=" font-size:9pt;">k_{v}</span></p></body></html> ENDCOMMENT 
            [
                position = 9448, 7800
            ]

            comment Comment48 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Z_{V} PARAMETERS  </p></body></html> ENDCOMMENT 
            [
                position = 9448, 7976
            ]

            comment Comment49 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">ZV_PARAM[0] = omega_{cp)</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">ZV_PARAM[1] = L_{v}</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">ZV_PARAM[2] = R</span><span style=" font-size:9pt;">_{v}</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">ZV_PARAM[3] = </span><span style=" font-size:9pt;">omega_{p)</span></p></body></html> ENDCOMMENT 
            [
                position = 9448, 8016
            ]

            comment Comment50 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">PRIMARY CONTROL</span></p></body></html> ENDCOMMENT 
            [
                position = 9720, 7376
            ]

            comment Comment51 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">INNER LOOP</span> </p></body></html> ENDCOMMENT 
            [
                position = 10152, 7376
            ]

            comment Comment52 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">AUXILIARY</span></p></body></html> ENDCOMMENT 
            [
                position = 9008, 7744
            ]

            comment Comment53 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">MGCC COMMANDS</span></p></body></html> ENDCOMMENT 
            [
                position = 8952, 7376
            ]

            comment Comment54 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">PROBES</span></p></body></html> ENDCOMMENT 
            [
                position = 10536, 7624
            ]

            comment Comment55 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER</p></body></html> ENDCOMMENT 
            [
                position = 10536, 7696
            ]

            comment Comment56 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VIRTUAL IMPEDANCE</p></body></html> ENDCOMMENT 
            [
                position = 10536, 7864
            ]

            comment Comment57 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">MRAC CONTROLLER </p></body></html> ENDCOMMENT 
            [
                position = 10544, 7976
            ]

            comment Comment58 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">ARTICLE</p></body></html> ENDCOMMENT 
            [
                position = 10584, 8288
            ]

            connect Rd.p_node Cf.n_node as Connection553
            connect VC.out Goto13 as Connection499
            connect V_DC.p_node Rbus.n_node as Connection569
            connect IF.out Goto10 as Connection713
            connect I0.out Goto1 as Connection721
            connect IF.n_node Junction87 as Connection726
            connect Junction87 Cf.p_node as Connection727
            [
                breakpoints = 9832, 7088
            ]
            connect VC.p_node Junction88 as Connection729
            connect Junction88 Junction87 as Connection730
            connect I0.p_node Junction88 as Connection731
            connect "GRID FORMING.neg_out" V_DC.n_node as Connection757
            connect Rbus.p_node "GRID FORMING.pos_out" as Connection758
            connect Lf.p_node "GRID FORMING.a_in" as Connection788
            connect Rd.n_node Junction97 as Connection789
            connect "GRID FORMING.b_in" Junction97 as Connection791
            connect Goto107 SOGI_QSG.OUT_VC_AB0 as Connection6532
            connect Lf.n_node Rf.p_node as Connection6768
            connect IF.p_node Rf.n_node as Connection6769
            connect I0.n_node Meter.in as Connection6811
            connect Junction97 Junction104 as Connection6812
            [
                breakpoints = 9832, 7280; 9832, 7280; 9832, 7280; 9832, 7280; 9832, 7280; 9832, 7280; 9832, 7280
            ]
            connect Junction104 VC.n_node as Connection6813
            [
                breakpoints = 9896, 7280; 9896, 7280; 9896, 7280; 9896, 7280; 9896, 7280
            ]
            connect Meter.N Junction105 as Connection6814
            connect Junction104 Junction105 as Connection6816
            connect Meter.out "Core Coupling 2.a_in" as Connection6832
            connect "Core Coupling 2.a_out" L as Connection6833
            connect Junction105 "Core Coupling 2.b_in" as Connection6834
            connect "Core Coupling 2.b_out" N as Connection6835
            connect Product1.in Junction81 as Connection684
            connect Junction81 Product2.in as Connection685
            [
                breakpoints = 9072, 7600; 9072, 7672
            ]
            connect Constant9.out Junction81 as Connection686
            [
                breakpoints = 8960, 7600; 9072, 7600
            ]
            connect From95 SOGI_QSG.IN_VC as Connection7185
            connect From96 SOGI_QSG.IN_I0 as Connection7186
            connect From193 VOLTAGE_CONTROLLER.IN_VC0_AB0 as Connection7190
            connect "Bus Selector1.in" "Info in" as Connection7203
            connect From1967 Modulation.M as Connection7219
            connect Goto159 Modulation.G as Connection7220
            connect From1968 "GRID FORMING.s_ctrl" as Connection7221
            connect From161 VIRTUAL_IMPEDANCE.IN_I0 as Connection6905
            connect From1977 VOLTAGE_CONTROLLER.IN_X as Connection7253
            connect From1980 TESTE.IN_V_DROOP as Connection7276
            connect From1979 TESTE.IN_V_VIRTUAL as Connection7277
            connect Goto160 TESTE.OUT_V0 as Connection7280
            connect "Rate Transition1.out" SOGI_QSG1.IN_VC0 as Connection7292
            connect "Rate Transition1.in" From192 as Connection7293
            connect "Bus Join1.out" Goto161 as Connection7307
            connect GAMMA.out "Bus Join1.in" as Connection7308
            [
                breakpoints = 9464, 7592; 9464, 7632
            ]
            connect GAIN.out "Bus Join1.in1" as Connection7309
            connect From1958 VOLTAGE_CONTROLLER.IN_MRAC_PARAM as Connection7311
            connect "Bus Join2.in" KV.out as Connection7312
            [
                breakpoints = 9464, 7896; 9464, 7880
            ]
            connect Goto162 "Bus Join2.out" as Connection7313
            connect "Bus Join2.in1" KI.out as Connection7314
            [
                breakpoints = 9464, 7912; 9464, 7936
            ]
            connect PHASE_SHIFT.out "Bus Join1.in2" as Connection7321
            [
                breakpoints = 9464, 7704; 9464, 7704; 9464, 7664
            ]
            connect Goto164 FC.out as Connection7326
            connect "Bus Join3.out" Goto163 as Connection7327
            connect RV.out "Bus Join3.in1" as Connection7328
            connect "Bus Join3.in" LV.out as Connection7329
            [
                breakpoints = 9464, 8224; 9464, 8184
            ]
            connect "Bus Join3.in2" W0.out as Connection7330
            [
                breakpoints = 9464, 8256; 9464, 8296
            ]
            connect From1985 VIRTUAL_IMPEDANCE.IN_ZV_PARAM as Connection7332
            connect Goto165 SOGI_QSG.OUT_I0_AB0 as Connection7333
            connect From174 RT80.in as Connection6975
            connect From169 "Rate Transition2.in" as Connection7233
            connect From170 "Rate Transition3.in" as Connection7235
            connect Product1.out "Bus Join4.in" as Connection7334
            [
                breakpoints = 9168, 7608; 9168, 7640
            ]
            connect "Bus Join4.in1" Product2.out as Connection7335
            [
                breakpoints = 9168, 7656; 9168, 7680
            ]
            connect Goto166 "Bus Join4.out" as Connection7336
            connect "Rate Transition2.out" DROOP_CONTROLLER.IN_VC_AB0 as Connection7338
            connect "Rate Transition3.out" DROOP_CONTROLLER.IN_I0_AB0 as Connection7339
            connect RT80.out DROOP_CONTROLLER.IN_S0 as Connection7340
            connect From1983 DROOP_CONTROLLER.IN_DROOP_PARAM as Connection7341
            connect Goto146 DROOP_CONTROLLER.OUT_V as Connection7344
            connect From188 VOLTAGE_CONTROLLER.IN_D_AB0 as Connection7345
            connect Goto168 DROOP_CONTROLLER.OUT_S0 as Connection7346
            connect Goto167 DROOP_CONTROLLER.OUT_SF as Connection7347
            connect Goto143 VIRTUAL_IMPEDANCE.OUT_VL_DROP as Connection7348
            connect RT61.in From143 as Connection6896
            connect RT61.out LPF.in as Connection7350
            connect From1984 LPF.fc_input as Connection7351
            connect Goto142 LPF.out as Connection7352
            connect Goto150 VOLTAGE_CONTROLLER.OUT_UV as Connection7358
            connect From1986 "Rate Transition4.in" as Connection7362
            connect "Rate Transition4.out" TESTE.IN_I0_AB0 as Connection7363
            connect Goto153 SOGI_QSG1.OUT_VC0_AB0 as Connection7364
            connect From1989 "Bus Join5.in2" as Connection7365
            [
                breakpoints = 9048, 7896; 9072, 7896; 9072, 7880
            ]
            connect From1987 "Bus Join5.in1" as Connection7366
            connect From1988 "Bus Join5.in" as Connection7367
            [
                breakpoints = 9072, 7832; 9072, 7848
            ]
            connect Goto169 "Bus Join5.out" as Connection7368
            connect From1990 SF.in as Connection7369
            connect From1992 V_ZV.in as Connection7371
            connect Goto171 VOLTAGE_CONTROLLER.OUT_THETA as Connection7372
            connect Goto170 VOLTAGE_CONTROLLER.OUT_YM as Connection7373
            connect From1993 YM.in as Connection7374
            connect From1994 THETA.in as Connection7375
            connect From1995 VC0_AB0.in as Connection7376
            connect From1996 MOD.in as Connection7377
            connect From1997 S0.in as Connection7381
            connect "Bus Selector1.out1" Product2.in1 as Connection7382
            connect "Bus Selector1.out" Product1.in1 as Connection7383
            [
                breakpoints = 9056, 7672; 9056, 7616
            ]
            connect From1999 Sum1.in as Connection7384
            connect From1998 Sum1.in1 as Connection7385
            [
                breakpoints = 10568, 8560; 10568, 8544
            ]
            connect Sum1.out E_TR.in as Connection7386
            connect From2000 SOGI_YM.IN_VC0 as Connection7387
            connect SOGI_YM.OUT_VC0_AB0 RMS_YM.IN as Connection7388
            connect YM_RMS.in RMS_YM.OUT as Connection7389
            connect From2001 SOGI_VC.IN_VC0 as Connection7390
            connect SOGI_VC.OUT_VC0_AB0 RMS_VC.IN as Connection7391
            connect VC_RMS.in RMS_VC.OUT as Connection7392

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Press \"Ctrl+Enter\" to view the subsystem.</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images/inverter.svg")
                ENDCODE
            }
        }
        [
            position = 8224, 8032
            hide_name = True
            size = 72, 120
        ]

        component Subsystem VSC_BACKUP_LQR {
            layout = dynamic
            component "core/Resistor" R2 {
                resistance = "VSC1_RD"
            }
            [
                position = 10232, 7200
                rotation = right
                hide_name = True
            ]

            component "core/Voltage Measurement" VC {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10296, 7200
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" IL2 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10376, 7056
                size = 64, 32
            ]

            component "core/Inductor" L6 {
                inductance = "VSC1_LF"
                signal_access = "Inherit"
            }
            [
                position = 9960, 7056
                hide_name = True
            ]

            component "core/Voltage Source" Vdc {
                init_const_value = "VSC1_VDC"
            }
            [
                position = 9688, 7176
                rotation = right
            ]

            component "core/Capacitor" C2 {
                capacitance = "VSC1_C"
                signal_access = "Inherit"
            }
            [
                position = 10232, 7112
                rotation = right
                hide_name = True
            ]

            component "core/Current Measurement" IL1 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10160, 7056
                size = 64, 32
            ]

            component "core/Resistor" R3 {
                resistance = "1e-3"
            }
            [
                position = 9688, 7096
                rotation = right
                hide_name = True
            ]

            component "core/Single-phase Meter" Meter {
                enable_out = "False"
                execution_rate = "TS_20KHZ"
                fgrid = "60.0"
                n_cycles = "1"
            }
            [
                position = 10568, 7056
                size = 80, 80
            ]

            component "core/Probe" COM {
            }
            [
                position = 9992, 6944
                rotation = down
                scale = -1, 1
            ]

            component "core/Bus Join" "Bus Join1" {
                inputs = "3"
            }
            [
                position = 9904, 6944
            ]

            component "core/Single Phase Inverter" "GRID FORMING" {
                carr_ph_offset = "[0.0, 0.0]"
                carrier_freq = "10e3"
                ctrl_src = "Internal modulator"
                execution_rate = "TS_01MHZ"
                fvd_def_method = "LUT"
                load_mode = "on either"
                signal_access = "Inherit"
            }
            [
                position = 9824, 7152
                size = 127, 256
            ]

            component "core/C function" SOGI_QSG {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;

// Current SOGI
struct SOGIqsg i_sogi;
float i_alpha = 0;
float i_beta = 0;
float i_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.6, 0.2);

// Current SOGI Variables
i_alpha = 0;
i_beta = 0;
i_freq = 60;
// Current SOGI Initialization
SOGIInit(&i_sogi, i_freq, 0.6, 0.2);
/*End code section*/"
                input_terminals = "real IN_VGRID;real IN_IL2;"
                input_terminals_dimensions = "1;1"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
//Execução da Rotina do SOGI para a Tensão
executeSOGI(&v_sogi, IN_VGRID, &v_alpha, &v_beta, &v_freq);
//Execução da Rotina do SOGI para a Corrente
executeSOGI(&i_sogi, IN_IL2, &i_alpha, &i_beta, &i_freq);
//Atribuição dos valores as saídas do bloco
OUT_V = v_alpha;
OUT_V_QUAD = v_beta;
OUT_I = i_alpha;
OUT_I_QUAD = i_beta;
OUT_OMEGA = v_freq;
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_V_QUAD;real OUT_I;real OUT_I_QUAD;real OUT_OMEGA;"
                output_terminals_dimensions = "1;1;1;1;1"
                output_terminals_feedthrough = "True;True;True;True;True"
                output_terminals_show_labels = "False;False;False;False;False"
            }
            [
                position = 9296, 7656
                size = 120, 312
            ]

            component "core/Rate Transition" RT42 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9176, 7792
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT43 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9176, 7520
                hide_name = True
                size = 32, 32
            ]

            component "core/Resistor" R4 {
                resistance = "VSC1_RF"
            }
            [
                position = 10056, 7056
                hide_name = True
            ]

            component "core/Single Phase Core Coupling" "Core Coupling 2" {
                snb_type_i = "R1-C1"
            }
            [
                position = 10664, 7152
                hide_name = True
                size = 12, 256
            ]

            component "core/Bus Split" "Bus Split1" {
                outputs = "6"
            }
            [
                position = 8632, 7672
                hide_name = True
            ]

            component "core/Product" Product1 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 8760, 7528
            ]

            component "core/Product" Product2 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 8760, 7600
            ]

            component "core/Constant" Constant9 {
                execution_rate = "TS_20KHZ"
                value = "VSC1_S"
            }
            [
                position = 8560, 7520
                hide_name = True
            ]

            component "core/Probe" IL2_F {
            }
            [
                position = 10480, 7592
                rotation = left
                scale = -1, -1
            ]

            component "core/C function" VIRTUAL_IMPEDANCE {
                add_src_path = "..\src"
                add_src_path_full = "C:\projetos\adaptive_single_phase_microgrid\src"
                arb_defs = "/*Begin code section*/
// Virtual Impedance Struct definition
struct VirtualImpedance
{
  // general
  float sampling_time;
  float inductance;
  float zeta;
  float omega_pole;
  // recurrence equation gains
  float phi1;
  float phi2;
  float phi3;
  float phi4;
  // previous interest variables
  float current_kminus1;
  float current_kminus2;
  float voltage_kminus1;
  float voltage_kminus2;
};

// Virtual Impedance Constants
const float TS = 0.0001;
const float INDUCTANCE = 1.25e-3;
const float ZETA = 1.0;
const float POLE = 9424.77796077;

// Struct declaration
struct VirtualImpedance vz;

// Virtual Impedance  Variables
float output = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_virtual_impedance.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_virtual_impedance.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\virtual_impedance.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\virtual_impedance.h"
                init_fnc = "/*Begin code section*/
// Struct initialization
initVirtualImpedance(&vz, TS, INDUCTANCE, ZETA, POLE);
// Virtual Impedance Variables
output = 0;
/*End code section*/"
                input_terminals = "real IN_IL2_PC;real IN_VIRTUAL_INDUCTANCE;"
                input_terminals_dimensions = "inherit;inherit"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
// Set inductance according to SCADA input
setInductance(&vz, 1e-3*IN_VIRTUAL_INDUCTANCE);
// Virtual Impedance execution
executeVirtualImpedance(&vz, IN_IL2_PC, &output);
// Handle Output
OUT_VL_DROP = output;
/*End code section*/"
                output_terminals = "real OUT_VL_DROP;"
                output_terminals_dimensions = "inherit"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10424, 7720
                hide_name = True
                size = 48, 48
            ]

            component "core/Probe" VL_DROP {
            }
            [
                position = 10480, 7784
                rotation = left
                scale = -1, -1
            ]

            component "core/SCADA Input" VZ {
                def_value = "1.25"
                execution_rate = "TS_10KHZ"
                max = "3"
                min = "0"
                signal_access = "Inherit"
                unit = "mH"
            }
            [
                position = 10096, 7768
            ]

            component "core/Advanced Low-Pass Filter" LPF {
                N = "2"
                apb = "3"
                execution_rate = "TS_10KHZ"
                fc = "300"
                fc_combo = "External"
                type_combo = "Butterworth"
            }
            [
                position = 10424, 7528
                size = 48, 48
            ]

            component "core/Rate Transition" RT61 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10240, 7520
                hide_name = True
                size = 32, 32
            ]

            component "core/SCADA Input" FC {
                def_value = "300"
                execution_rate = "TS_10KHZ"
                max = "1000"
                min = "120"
                signal_access = "Inherit"
                unit = "Hz"
            }
            [
                position = 10096, 7576
            ]

            component "core/C function" DROOP_CONTROLLER2 {
                arb_defs = "/*Begin code section*/
// Constant definitions
const float VZERO = 220;
const float WZERO = 376.9911;
const float DELTA_V = 33;
const float DELTA_W = 18.8495559215;
const float TWOPI = 6.2831;
const float TS_10KHZ = 0.0001;
const float WC = 75.3982236862;
const int ISLANDED = 1;
const int TIED = 0;

// Structs redefinition
struct ImprovedDroop
{
    // general
    float sampling_time;

    // variables to implement first order low pass filter
    float cutoff_frequency;
    float phi1;
    float phi2;
    float phi3;
    // for active power
    float p_kminus1;
    float pf_kminus1;
    // for reactive power
    float q_kminus1;
    float qf_kminus1;

    // classical droop variables
    float p_max;
    float q_max;
    float p0;
    float q0;
    float v0;
    float w0;
    float m;
    float n;

    // improved droop variables
    float ki;
    float kv;
    float kq;
    int is_islanded;

    // integrator variables
    float phi_integral;
    // for voltage integration
    float vin_kminus1;
    float vout_kminus1;
    // for frequency integration
    float w_kminus1;
    float theta_kminus1;
};

// Structs declaration
struct ImprovedDroop droop;

// Droop Controller variables
float v = 0;
float p = 0;
float q = 0;
float p_ref = 0;
float q_ref = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_improved_droop.dll"
                dll_file_path_full = "C:\projetos\single_phase_microgrid\output\VHIL\lib_improved_droop.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\improved_droop.h"
                h_file_path_full = "C:\projetos\single_phase_microgrid\src\improved_droop.h"
                init_fnc = "/*Begin code section*/
// Droop variables
v = 0;
p = 0;
q = 0;
p_ref = 0;
q_ref = 0;
// Controllers initialization
initDroop(&droop, TS_10KHZ, VZERO, WZERO, 15000, 15000, DELTA_V, DELTA_W, WC, 1, 20);
/*End code section*/"
                input_terminals = "real IN_V_DIR;real IN_V_QUAD;real IN_I_DIR;real IN_I_QUAD;real IN_P0;real IN_Q0;real IN_KV;real IN_KI;real IN_MICROGRID_STATUS;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False;False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    if(IN_MICROGRID_STATUS == 1){
        // Set status to tied
        setStatus(&droop, TIED);
        
        // Active power ramp
        if(IN_P0 > p_ref) p_ref += 5;
        if(IN_P0 < p_ref) p_ref -= 5;
            
        // Reactive power ramp
        if(IN_Q0 > q_ref) q_ref += 5;
        if(IN_Q0 < q_ref) q_ref -= 5;
            
        // Set new power reference
        setP0(&droop, p_ref);
        setQ0(&droop, q_ref);
        
    }else{
        // Set status to islanded
        setStatus(&droop, TIED);
        
        // Set power reference to zero
        setP0(&droop, 0);
        setQ0(&droop, 0);
    }
    
    // Set Ki
    setKi(&droop, IN_KI);
    
    // Set Kv
    setKv(&droop, IN_KV);
    
    // Droop controller execution
    executeDroop(&droop, IN_V_DIR, IN_V_QUAD, IN_I_DIR, IN_I_QUAD, &v, &p, &q);
    
    // Output values
    OUT_V = v;
    OUT_PF = p;
    OUT_QF = q;
    OUT_REF_P = p_ref;
    OUT_REF_Q = q_ref;
}else{
    // Output values
    OUT_V = 0;
    OUT_PF = 0;
    OUT_QF = 0;
    OUT_REF_P = 0;
    OUT_REF_Q = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_PF;real OUT_QF;real OUT_REF_P;real OUT_REF_Q;"
                output_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True;True;True"
                output_terminals_show_labels = "False;False;False;False;False"
            }
            [
                position = 9824, 7880
                hide_name = True
                size = 120, 768
            ]

            component "core/Rate Transition" RT80 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9712, 7840
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT81 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9712, 7920
                hide_name = True
                size = 32, 32
            ]

            component "core/Probe" QF {
                signal_access = "Inherit"
                signal_type = "reactive power"
            }
            [
                position = 9968, 7880
                rotation = down
                scale = -1, 1
            ]

            component "core/SCADA Input" KV {
                unit = ""
            }
            [
                position = 9568, 8000
            ]

            component "core/Rate Transition" RT83 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9712, 8160
                hide_name = True
                size = 32, 32
            ]

            component "core/SCADA Input" KI {
                unit = ""
            }
            [
                position = 9568, 8080
            ]

            component "core/Probe" PF {
                signal_access = "Inherit"
                signal_type = "active power"
            }
            [
                position = 9968, 7704
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" V {
                signal_access = "Inherit"
                signal_type = "reactive power"
            }
            [
                position = 9968, 7592
                rotation = down
                scale = -1, 1
            ]

            component "core/Termination" Termination1 {
            }
            [
                position = 8840, 7768
                hide_name = True
            ]

            component "core/Probe" REF_P {
            }
            [
                position = 9968, 8056
            ]

            component "core/Probe" REF_Q {
            }
            [
                position = 9968, 8232
            ]

            component "core/Rate Transition" RT85 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9712, 8240
                hide_name = True
                size = 32, 32
            ]

            component "core/C function" INNER_LOOP_CONTROL {
                arb_defs = "/*Begin code section*/
// Constants
float SS_V_GAINS[] = {0, 0, 0, 0, 0};
float SS_I_GAINS[] = {0, 0, 0};
float UV_BOUNDARY = 0;
float UI_BOUNDARY = 0;
float A = 0;
float OMEGA0 = 0;
float TS_20KHZ = 0;

// Voltage Control Variables
float v_ref = 0;
float uv = 0;
float uv_bounded = 0;
float xc_1_kminus1 = 0;
float xc_2_kminus1 = 0;
float xc_1 = 0;
float xc_2 = 0;
float err = 0;

// Voltage Control Variables
float ui = 0;
float ui_bounded = 0;
/*End code section*/"
                execution_rate = "TS_20KHZ"
                init_fnc = "/*Begin code section*/
// Constants (HIL does not accept \"const float\" declaration so this must be done)
// Voltage state feedback
SS_V_GAINS[0] = +5.788539443061580e-02; // I_{Lf}
SS_V_GAINS[1] = +9.536137191436686e-02; // V_{C}
SS_V_GAINS[2] = +0; // U
SS_V_GAINS[3] = +3.322544725589444e-02; // XC_1
SS_V_GAINS[4] = -3.396630149284008e-02; // XC_2
// Current state feedback
SS_I_GAINS[0] = +1.658998519800925e+01; //+4.4753; // I_{Lf}
SS_I_GAINS[1] = -9.465035985879468e-02; //-0.9946; // V_{C}
SS_I_GAINS[2] = 0; //+0.9946; // U

// Output limitation
UV_BOUNDARY = 120;
UI_BOUNDARY = 500;
// Ressonant Control
A = 0.1;
OMEGA0 = 376.991118431;
TS_20KHZ = 0.00005;

// Voltage Control Variables
v_ref = 0;
uv = 0;
uv_bounded = 0;
xc_1_kminus1 = 0;
xc_2_kminus1 = 0;
xc_1 = 0;
xc_2 = 0;
err = 0;

// Voltage Control Variables
ui = 0;
ui_bounded = 0;
/*End code section*/"
                input_terminals = "real IN_V_DROOP;real IN_V_VIRTUAL;real IN_IL1;real IN_VC;real IN_KR;real IN_ENABLE;"
                input_terminals_dimensions = "1;1;1;1;1;1"
                input_terminals_feedthrough = "True;True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1)
{
    //// VOLTAGE CONTROL LOOP ////
    
    // Calculate voltage reference
    v_ref = IN_V_DROOP - IN_V_VIRTUAL;
    
    // Calculate voltage loop control action
    uv = - (SS_V_GAINS[0] * IN_IL1) - (SS_V_GAINS[1] * IN_VC)  - (SS_V_GAINS[2] * ui) - (SS_V_GAINS[3] * xc_1) - (SS_V_GAINS[4] * xc_2);
    
    // Execute output limitation function
    uv_bounded = uv;
    if( (uv*uv)/sqrt(uv*uv) >= UV_BOUNDARY)
        uv_bounded = UV_BOUNDARY * uv / sqrt(uv*uv);
    
    // Calculate error
    err = v_ref - IN_VC;
    
    //// CURRENT CONTROL LOOP ////
    
    // Calculate current loop control action
    ui = (IN_KR * uv_bounded) - (SS_I_GAINS[0] * IN_IL1) - (SS_I_GAINS[1] * IN_VC) - (SS_I_GAINS[2] * ui);
    
    // Execute output limitation function
    ui_bounded = ui;
    if( (ui*ui)/sqrt(ui*ui) >= UI_BOUNDARY)
        ui_bounded = UI_BOUNDARY * ui / sqrt(ui*ui);
    
    // Update virtual XC_1 and XC_2 ressonant controller states
    xc_1_kminus1 = xc_1;
    xc_2_kminus1 = xc_2;
    xc_1 = 0.0 * xc_1 + 1 * xc_2_kminus1;
    xc_2 = -exp(-2*A*TS_20KHZ) * xc_1_kminus1 + 2*exp(-A*TS_20KHZ) * cos(OMEGA0*TS_20KHZ) * xc_2_kminus1 + err;
    
    // C Function Output
    OUT_PWM_A = +ui_bounded/UI_BOUNDARY;
    OUT_PWM_B = -ui_bounded/UI_BOUNDARY;
    OUT_IL1_REF = uv_bounded;
}else
{
    // C Function Output
    OUT_PWM_A = 0;
    OUT_PWM_B = 0;
}
/*End code section*/"
                output_terminals = "real OUT_PWM_A;real OUT_PWM_B;real OUT_IL1_REF;"
                output_terminals_dimensions = "inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "False;False;False"
            }
            [
                position = 10968, 7736
                size = 120, 416
            ]

            component "core/SCADA Input" KR {
                def_value = "8"
                execution_rate = "TS_20KHZ"
                max = "50"
                min = "0.1"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 10712, 7848
            ]

            component "core/Rate Transition" RT92 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 10856, 7560
                hide_name = True
                size = 32, 32
            ]

            component "core/Probe" REF_IL1 {
            }
            [
                position = 11184, 7920
                rotation = down
                scale = -1, -1
            ]

            component "core/Rate Transition" RT93 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 10856, 7624
                hide_name = True
                size = 32, 32
            ]

            port L {
                position = right:auto
                kind = pe
            }
            [
                position = 10720, 7056
                scale = -1, 1
            ]

            port N {
                position = right:auto
                kind = pe
            }
            [
                position = 10720, 7248
                scale = -1, 1
            ]

            port "Info in" {
                position = left:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 8560, 7672
                hide_name = True
            ]

            tag From11 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9712, 6896
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "IL2"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10376, 6984
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From8 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9712, 6944
                hide_name = True
                size = 60, 20
            ]

            tag Goto13 {
                value = "VC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10376, 7200
                hide_name = True
                size = 60, 20
            ]

            tag Goto10 {
                value = "IL1"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10160, 6984
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From95 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9064, 7520
                hide_name = True
                size = 108, 20
            ]

            tag From96 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9064, 7792
                hide_name = True
                size = 108, 20
            ]

            tag Goto107 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7528
                hide_name = True
                size = 108, 20
            ]

            tag Goto108 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7592
                hide_name = True
                size = 108, 20
            ]

            tag Goto109 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7656
                hide_name = True
                size = 108, 20
            ]

            tag Goto110 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7720
                hide_name = True
                size = 108, 20
            ]

            tag Goto111 {
                value = "OMEGA_VSC1"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7784
                hide_name = True
                size = 108, 20
            ]

            tag Goto14 {
                value = "P0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8864, 7528
                hide_name = True
                size = 84, 20
            ]

            tag Goto15 {
                value = "Q0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8864, 7600
                hide_name = True
                size = 84, 20
            ]

            tag Goto18 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8864, 7664
                hide_name = True
                size = 84, 20
            ]

            tag Goto132 {
                value = "VSC1_enable"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8864, 7696
                hide_name = True
                size = 84, 20
            ]

            tag Goto142 {
                value = "IL2_F"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10568, 7528
                hide_name = True
                size = 108, 20
            ]

            tag Goto143 {
                value = "VL_DROP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10568, 7720
                hide_name = True
                size = 108, 20
            ]

            tag From161 {
                value = "IL2_F"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10136, 7712
                hide_name = True
                size = 108, 20
            ]

            tag From143 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10136, 7520
                hide_name = True
                size = 108, 20
            ]

            tag Goto146 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9976, 7520
                hide_name = True
                size = 108, 20
            ]

            tag From169 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7520
                hide_name = True
                size = 108, 20
            ]

            tag From170 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7600
                hide_name = True
                size = 108, 20
            ]

            tag From171 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7680
                hide_name = True
                size = 108, 20
            ]

            tag From172 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7760
                hide_name = True
                size = 108, 20
            ]

            tag From173 {
                value = "Q0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9584, 7920
                hide_name = True
                size = 60, 20
            ]

            tag From174 {
                value = "P0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9584, 7840
                hide_name = True
                size = 60, 20
            ]

            tag From175 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9584, 8160
                hide_name = True
                size = 60, 20
            ]

            tag From183 {
                value = "VSC1_enable"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9712, 6984
                hide_name = True
                size = 60, 20
            ]

            tag Goto149 {
                value = "VSC2_enable"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8864, 7728
                hide_name = True
                size = 84, 20
            ]

            tag From179 {
                value = "VSC1_enable"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9584, 8240
                hide_name = True
                size = 60, 20
            ]

            tag From1961 {
                value = "IL1"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 7704
                hide_name = True
                size = 108, 20
            ]

            tag From1962 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 7768
                hide_name = True
                size = 108, 20
            ]

            tag From1963 {
                value = "VSC1_enable"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 7912
                hide_name = True
                size = 108, 20
            ]

            tag Goto159 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11144, 7552
                hide_name = True
                size = 108, 20
            ]

            tag Goto160 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11144, 7736
                hide_name = True
                size = 108, 20
            ]

            tag From1964 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 7560
                hide_name = True
                size = 108, 20
            ]

            tag From1965 {
                value = "VL_DROP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 7624
                hide_name = True
                size = 108, 20
            ]

            junction Junction87 pe
            [
                position = 10232, 7056
            ]

            junction Junction88 pe
            [
                position = 10296, 7056
            ]

            junction Junction95 sp
            [
                position = 9824, 6944
            ]

            junction Junction96 sp
            [
                position = 9840, 6960
            ]

            junction Junction97 pe
            [
                position = 10232, 7248
            ]

            junction Junction104 pe
            [
                position = 10296, 7248
            ]

            junction Junction105 pe
            [
                position = 10568, 7248
            ]

            junction Junction81 sp
            [
                position = 8712, 7520
            ]

            junction Junction111 sp
            [
                position = 10480, 7720
            ]

            junction Junction113 sp
            [
                position = 9904, 7520
            ]

            junction Junction115 sp
            [
                position = 10480, 7528
            ]

            junction Junction116 sp
            [
                position = 9808, 6984
            ]

            comment Comment27 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">CONTROL </span></p></body></html> ENDCOMMENT 
            [
                position = 9952, 7368
            ]

            comment Comment28 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">POWER SYSTEM</span> </p></body></html> ENDCOMMENT 
            [
                position = 10016, 6800
            ]

            comment Comment16 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">PHASE LOCKED LOOP</p></body></html> ENDCOMMENT 
            [
                position = 9200, 7456
            ]

            comment Comment23 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[0] = P0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[1] = Q0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[2] = STS_STATUS   </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[3] = VSC1_ENABLE</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[4] = VSC2_ENABLE </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[5] = SHORT CIRCUIT </p></body></html> ENDCOMMENT 
            [
                position = 8608, 7824
            ]

            comment Comment24 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">HANDLE INFO INPUT</p></body></html> ENDCOMMENT 
            [
                position = 8640, 7456
            ]

            comment Comment30 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">LOW PASS FILTER</p></body></html> ENDCOMMENT 
            [
                position = 10352, 7456
            ]

            comment Comment32 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VIRTUAL IMPEDANCE</p></body></html> ENDCOMMENT 
            [
                position = 10336, 7640
            ]

            comment Comment34 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 9728, 7456
            ]

            comment Comment35 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">INNER LOOPS</p></body></html> ENDCOMMENT 
            [
                position = 10888, 7456
            ]

            connect R2.p_node C2.n_node as Connection553
            connect VC.out Goto13 as Connection499
            connect Vdc.p_node R3.n_node as Connection569
            connect IL1.out Goto10 as Connection713
            connect IL2.out Goto1 as Connection721
            connect IL1.n_node Junction87 as Connection726
            connect Junction87 C2.p_node as Connection727
            [
                breakpoints = 10232, 7056
            ]
            connect VC.p_node Junction88 as Connection729
            connect Junction88 Junction87 as Connection730
            connect IL2.p_node Junction88 as Connection731
            connect "Bus Join1.out" COM.in as Connection749
            connect "GRID FORMING.neg_out" Vdc.n_node as Connection757
            connect R3.p_node "GRID FORMING.pos_out" as Connection758
            connect From8 Junction95 as Connection773
            [
                breakpoints = 9816, 6944; 9816, 6944
            ]
            connect Junction95 "Bus Join1.in1" as Connection775
            connect From11 Junction96 as Connection776
            [
                breakpoints = 9832, 6896; 9840, 6896
            ]
            connect "Bus Join1.in2" Junction96 as Connection778
            connect L6.p_node "GRID FORMING.a_in" as Connection788
            connect R2.n_node Junction97 as Connection789
            connect "GRID FORMING.b_in" Junction97 as Connection791
            connect Junction95 "GRID FORMING.InA" as Connection794
            connect Junction96 "GRID FORMING.InB" as Connection795
            connect Goto107 SOGI_QSG.OUT_V as Connection6532
            connect Goto108 SOGI_QSG.OUT_V_QUAD as Connection6533
            connect Goto109 SOGI_QSG.OUT_I as Connection6534
            connect SOGI_QSG.OUT_I_QUAD Goto110 as Connection6535
            connect Goto111 SOGI_QSG.OUT_OMEGA as Connection6536
            connect RT42.out SOGI_QSG.IN_IL2 as Connection6764
            connect RT42.in From96 as Connection6765
            connect From95 RT43.in as Connection6766
            connect RT43.out SOGI_QSG.IN_VGRID as Connection6767
            connect L6.n_node R4.p_node as Connection6768
            connect IL1.p_node R4.n_node as Connection6769
            connect IL2.n_node Meter.in as Connection6811
            connect Junction97 Junction104 as Connection6812
            [
                breakpoints = 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248
            ]
            connect Junction104 VC.n_node as Connection6813
            [
                breakpoints = 10296, 7248; 10296, 7248; 10296, 7248; 10296, 7248; 10296, 7248
            ]
            connect Meter.N Junction105 as Connection6814
            connect Junction104 Junction105 as Connection6816
            connect Meter.out "Core Coupling 2.a_in" as Connection6832
            connect "Core Coupling 2.a_out" L as Connection6833
            connect Junction105 "Core Coupling 2.b_in" as Connection6834
            connect "Core Coupling 2.b_out" N as Connection6835
            connect Product1.in Junction81 as Connection684
            connect Junction81 Product2.in as Connection685
            [
                breakpoints = 8712, 7520; 8712, 7592
            ]
            connect Constant9.out Junction81 as Connection686
            [
                breakpoints = 8600, 7520; 8712, 7520
            ]
            connect "Bus Split1.out1" Product2.in1 as Connection6840
            [
                breakpoints = 8712, 7640; 8712, 7608
            ]
            connect "Bus Split1.out" Product1.in1 as Connection6841
            [
                breakpoints = 8696, 7624; 8696, 7536
            ]
            connect "Info in" "Bus Split1.in" as Connection6843
            connect VIRTUAL_IMPEDANCE.OUT_VL_DROP Junction111 as Connection6899
            connect Junction111 Goto143 as Connection6900
            connect VL_DROP.in Junction111 as Connection6901
            connect From161 VIRTUAL_IMPEDANCE.IN_IL2_PC as Connection6905
            connect VZ.out VIRTUAL_IMPEDANCE.IN_VIRTUAL_INDUCTANCE as Connection6906
            [
                breakpoints = 10296, 7768; 10296, 7728
            ]
            connect RT61.out LPF.in as Connection6895
            connect RT61.in From143 as Connection6896
            connect FC.out LPF.fc_input as Connection6912
            [
                breakpoints = 10288, 7576; 10288, 7536
            ]
            connect RT83.out DROOP_CONTROLLER2.IN_MICROGRID_STATUS as Connection6964
            connect RT83.in From175 as Connection6965
            connect RT81.out DROOP_CONTROLLER2.IN_Q0 as Connection6972
            connect RT81.in From173 as Connection6973
            connect RT80.out DROOP_CONTROLLER2.IN_P0 as Connection6974
            connect From174 RT80.in as Connection6975
            connect Goto146 Junction113 as Connection6982
            connect Junction113 DROOP_CONTROLLER2.OUT_V as Connection6983
            connect V.in Junction113 as Connection6984
            connect From169 DROOP_CONTROLLER2.IN_V_DIR as Connection6989
            connect From170 DROOP_CONTROLLER2.IN_V_QUAD as Connection6990
            connect From171 DROOP_CONTROLLER2.IN_I_DIR as Connection6991
            connect From172 DROOP_CONTROLLER2.IN_I_QUAD as Connection6992
            connect KV.out DROOP_CONTROLLER2.IN_KV as Connection6993
            connect KI.out DROOP_CONTROLLER2.IN_KI as Connection6994
            connect QF.in DROOP_CONTROLLER2.OUT_QF as Connection6996
            connect PF.in DROOP_CONTROLLER2.OUT_PF as Connection6997
            connect IL2_F.in Junction115 as Connection7011
            connect Junction115 LPF.out as Connection7012
            [
                breakpoints = 10480, 7528; 10480, 7528
            ]
            connect Goto142 Junction115 as Connection7013
            connect Product1.out Goto14 as Connection7040
            connect "GRID FORMING.En" Junction116 as Connection7036
            [
                breakpoints = 9808, 6992; 9808, 6992
            ]
            connect Junction116 "Bus Join1.in" as Connection7037
            connect Termination1.in "Bus Split1.out5" as Connection7041
            [
                breakpoints = 8680, 7768; 8680, 7712
            ]
            connect REF_IL1.in INNER_LOOP_CONTROL.OUT_IL1_REF as Connection7129
            connect From183 Junction116 as Connection7038
            connect Product2.out Goto15 as Connection7042
            connect REF_P.in DROOP_CONTROLLER2.OUT_REF_P as Connection7024
            connect REF_Q.in DROOP_CONTROLLER2.OUT_REF_Q as Connection7025
            connect "Bus Split1.out2" Goto18 as Connection7026
            connect Goto132 "Bus Split1.out3" as Connection7027
            [
                breakpoints = 8712, 7696; 8712, 7680
            ]
            connect Goto149 "Bus Split1.out4" as Connection7028
            [
                breakpoints = 8696, 7728; 8696, 7696
            ]
            connect From179 RT85.in as Connection7029
            connect RT85.out DROOP_CONTROLLER2.IN_ENABLE as Connection7030
            connect KR.out INNER_LOOP_CONTROL.IN_KR as Connection7112
            connect From1963 INNER_LOOP_CONTROL.IN_ENABLE as Connection7113
            connect INNER_LOOP_CONTROL.OUT_PWM_A Goto159 as Connection7120
            connect INNER_LOOP_CONTROL.OUT_PWM_B Goto160 as Connection7121
            connect From1961 INNER_LOOP_CONTROL.IN_IL1 as Connection7122
            connect From1962 INNER_LOOP_CONTROL.IN_VC as Connection7123
            connect RT92.out INNER_LOOP_CONTROL.IN_V_DROOP as Connection7125
            connect RT92.in From1964 as Connection7126
            connect From1965 RT93.in as Connection7127
            connect RT93.out INNER_LOOP_CONTROL.IN_V_VIRTUAL as Connection7128

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Press \"Ctrl+Enter\" to view the subsystem.</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images/inverter.svg")
                ENDCODE
            }
        }
        [
            position = 9296, 8032
            hide_name = True
            size = 72, 120
        ]

        component Subsystem VSC_BACKUP_MRAC {
            layout = dynamic
            component "core/Resistor" R2 {
                resistance = "VSC1_RD"
            }
            [
                position = 10232, 7200
                rotation = right
                hide_name = True
            ]

            component "core/Voltage Measurement" VC {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10296, 7200
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" IL2 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10376, 7056
                size = 64, 32
            ]

            component "core/Inductor" L6 {
                inductance = "VSC1_LF"
                signal_access = "Inherit"
            }
            [
                position = 9960, 7056
                hide_name = True
            ]

            component "core/Voltage Source" Vdc {
                init_const_value = "VSC1_VDC"
            }
            [
                position = 9688, 7176
                rotation = right
            ]

            component "core/Capacitor" C2 {
                capacitance = "VSC1_C"
                signal_access = "Inherit"
            }
            [
                position = 10232, 7112
                rotation = right
                hide_name = True
            ]

            component "core/Current Measurement" IL1 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10160, 7056
                size = 64, 32
            ]

            component "core/Resistor" R3 {
                resistance = "1e-3"
            }
            [
                position = 9688, 7096
                rotation = right
                hide_name = True
            ]

            component "core/Single-phase Meter" Meter {
                enable_out = "False"
                execution_rate = "TS_20KHZ"
                fgrid = "60.0"
                n_cycles = "1"
            }
            [
                position = 10568, 7056
                size = 80, 80
            ]

            component "core/Probe" COM {
            }
            [
                position = 9992, 6944
                rotation = down
                scale = -1, 1
            ]

            component "core/Bus Join" "Bus Join1" {
                inputs = "3"
            }
            [
                position = 9904, 6944
            ]

            component "core/Single Phase Inverter" "GRID FORMING" {
                carr_ph_offset = "[0.0, 0.0]"
                carrier_freq = "10e3"
                ctrl_src = "Internal modulator"
                execution_rate = "TS_01MHZ"
                fvd_def_method = "LUT"
                load_mode = "on either"
                signal_access = "Inherit"
            }
            [
                position = 9824, 7152
                size = 127, 256
            ]

            component "core/C function" SOGI_QSG {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;

// Current SOGI
struct SOGIqsg i_sogi;
float i_alpha = 0;
float i_beta = 0;
float i_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.6, 0.2);

// Current SOGI Variables
i_alpha = 0;
i_beta = 0;
i_freq = 60;
// Current SOGI Initialization
SOGIInit(&i_sogi, i_freq, 0.6, 0.2);
/*End code section*/"
                input_terminals = "real IN_VGRID;real IN_IL2;"
                input_terminals_dimensions = "1;1"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
//Execução da Rotina do SOGI para a Tensão
executeSOGI(&v_sogi, IN_VGRID, &v_alpha, &v_beta, &v_freq);
//Execução da Rotina do SOGI para a Corrente
executeSOGI(&i_sogi, IN_IL2, &i_alpha, &i_beta, &i_freq);
//Atribuição dos valores as saídas do bloco
OUT_V = v_alpha;
OUT_V_QUAD = v_beta;
OUT_I = i_alpha;
OUT_I_QUAD = i_beta;
OUT_OMEGA = v_freq;
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_V_QUAD;real OUT_I;real OUT_I_QUAD;real OUT_OMEGA;"
                output_terminals_dimensions = "1;1;1;1;1"
                output_terminals_feedthrough = "True;True;True;True;True"
                output_terminals_show_labels = "False;False;False;False;False"
            }
            [
                position = 9296, 7656
                size = 120, 312
            ]

            component "core/Rate Transition" RT42 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9176, 7792
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT43 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9176, 7520
                hide_name = True
                size = 32, 32
            ]

            component "core/Resistor" R4 {
                resistance = "VSC1_RF"
            }
            [
                position = 10056, 7056
                hide_name = True
            ]

            component "core/Single Phase Core Coupling" "Core Coupling 2" {
                snb_type_i = "R1-C1"
            }
            [
                position = 10664, 7152
                hide_name = True
                size = 12, 256
            ]

            component "core/Bus Split" "Bus Split1" {
                outputs = "6"
            }
            [
                position = 8632, 7672
                hide_name = True
            ]

            component "core/Product" Product1 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 8760, 7528
            ]

            component "core/Product" Product2 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 8760, 7600
            ]

            component "core/Constant" Constant9 {
                execution_rate = "TS_20KHZ"
                value = "VSC1_S"
            }
            [
                position = 8560, 7520
                hide_name = True
            ]

            component "core/C function" DROOP_CONTROLLER2 {
                arb_defs = "/*Begin code section*/
// Constant definitions
const float VZERO = 220;
const float WZERO = 376.9911;
const float DELTA_V = 33;
const float DELTA_W = 18.8495559215;
const float TWOPI = 6.2831;
const float TS_10KHZ = 0.0001;
const float WC = 75.3982236862;
const int ISLANDED = 1;
const int TIED = 0;

// Structs redefinition
struct ImprovedDroop
{
    // general
    float sampling_time;

    // variables to implement first order low pass filter
    float cutoff_frequency;
    float phi1;
    float phi2;
    float phi3;
    // for active power
    float p_kminus1;
    float pf_kminus1;
    // for reactive power
    float q_kminus1;
    float qf_kminus1;

    // classical droop variables
    float p_max;
    float q_max;
    float p0;
    float q0;
    float v0;
    float w0;
    float m;
    float n;

    // improved droop variables
    float ki;
    float kv;
    float kq;
    int is_islanded;

    // integrator variables
    float phi_integral;
    // for voltage integration
    float vin_kminus1;
    float vout_kminus1;
    // for frequency integration
    float w_kminus1;
    float theta_kminus1;
};

// Structs declaration
struct ImprovedDroop droop;

// Droop Controller variables
float v = 0;
float p = 0;
float q = 0;
float p_ref = 0;
float q_ref = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_improved_droop.dll"
                dll_file_path_full = "C:\projetos\single_phase_microgrid\output\VHIL\lib_improved_droop.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\improved_droop.h"
                h_file_path_full = "C:\projetos\single_phase_microgrid\src\improved_droop.h"
                init_fnc = "/*Begin code section*/
// Droop variables
v = 0;
p = 0;
q = 0;
p_ref = 0;
q_ref = 0;
// Controllers initialization
initDroop(&droop, TS_10KHZ, VZERO, WZERO, 15000, 15000, DELTA_V, DELTA_W, WC, 1, 20);
/*End code section*/"
                input_terminals = "real IN_V_DIR;real IN_V_QUAD;real IN_I_DIR;real IN_I_QUAD;real IN_P0;real IN_Q0;real IN_KV;real IN_KI;real IN_MICROGRID_STATUS;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False;False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    if(IN_MICROGRID_STATUS == 1){
        // Set status to tied
        setStatus(&droop, TIED);
        
        // Active power ramp
        if(IN_P0 > p_ref) p_ref += 5;
        if(IN_P0 < p_ref) p_ref -= 5;
            
        // Reactive power ramp
        if(IN_Q0 > q_ref) q_ref += 5;
        if(IN_Q0 < q_ref) q_ref -= 5;
            
        // Set new power reference
        setP0(&droop, p_ref);
        setQ0(&droop, q_ref);
        
    }else{
        // Set status to islanded
        setStatus(&droop, TIED);
        
        // Set power reference to zero
        setP0(&droop, 0);
        setQ0(&droop, 0);
    }
    
    // Set Ki
    setKi(&droop, IN_KI);
    
    // Set Kv
    setKv(&droop, IN_KV);
    
    // Droop controller execution
    executeDroop(&droop, IN_V_DIR, IN_V_QUAD, IN_I_DIR, IN_I_QUAD, &v, &p, &q);
    
    // Output values
    OUT_V = v;
    OUT_PF = p;
    OUT_QF = q;
    OUT_REF_P = p_ref;
    OUT_REF_Q = q_ref;
}else{
    // Output values
    OUT_V = 0;
    OUT_PF = 0;
    OUT_QF = 0;
    OUT_REF_P = 0;
    OUT_REF_Q = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_PF;real OUT_QF;real OUT_REF_P;real OUT_REF_Q;"
                output_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True;True;True"
                output_terminals_show_labels = "False;False;False;False;False"
            }
            [
                position = 9824, 7880
                hide_name = True
                size = 120, 768
            ]

            component "core/Rate Transition" RT80 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9712, 7840
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT81 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9712, 7920
                hide_name = True
                size = 32, 32
            ]

            component "core/Probe" QF {
                signal_access = "Inherit"
                signal_type = "reactive power"
            }
            [
                position = 9968, 7880
                rotation = down
                scale = -1, 1
            ]

            component "core/SCADA Input" KV {
                unit = ""
            }
            [
                position = 9568, 8000
            ]

            component "core/Rate Transition" RT83 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9712, 8160
                hide_name = True
                size = 32, 32
            ]

            component "core/SCADA Input" KI {
                unit = ""
            }
            [
                position = 9568, 8080
            ]

            component "core/Probe" PF {
                signal_access = "Inherit"
                signal_type = "active power"
            }
            [
                position = 9968, 7704
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" V {
                signal_access = "Inherit"
                signal_type = "reactive power"
            }
            [
                position = 9968, 7592
                rotation = down
                scale = -1, 1
            ]

            component "core/Termination" Termination1 {
            }
            [
                position = 8840, 7768
                hide_name = True
            ]

            component "core/Probe" REF_P {
            }
            [
                position = 9968, 8056
            ]

            component "core/Probe" REF_Q {
            }
            [
                position = 9968, 8232
            ]

            component "core/Rate Transition" RT85 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9712, 8240
                hide_name = True
                size = 32, 32
            ]

            component "core/C function" INNER_LOOP_CONTROL {
                arb_defs = "/*Begin code section*/
// Constants
float SS_V_GAINS[] = {0, 0, 0, 0, 0};
float SS_I_GAINS[] = {0, 0, 0};
float UV_BOUNDARY = 0;
float UI_BOUNDARY = 0;
float A = 0;
float OMEGA0 = 0;
float TS_20KHZ = 0;

// Voltage Control Variables
float v_ref = 0;
float uv = 0;
float uv_bounded = 0;
float xc_1_kminus1 = 0;
float xc_2_kminus1 = 0;
float xc_1 = 0;
float xc_2 = 0;
float err = 0;

// Voltage Control Variables
float ui = 0;
float ui_bounded = 0;
/*End code section*/"
                execution_rate = "TS_20KHZ"
                init_fnc = "/*Begin code section*/
// Constants (HIL does not accept \"const float\" declaration so this must be done)
// Voltage state feedback
SS_V_GAINS[0] = +5.788539443061580e-02; // I_{Lf}
SS_V_GAINS[1] = +9.536137191436686e-02; // V_{C}
SS_V_GAINS[2] = +0; // U
SS_V_GAINS[3] = +3.322544725589444e-02; // XC_1
SS_V_GAINS[4] = -3.396630149284008e-02; // XC_2
// Current state feedback
SS_I_GAINS[0] = +1.658998519800925e+01; //+4.4753; // I_{Lf}
SS_I_GAINS[1] = -9.465035985879468e-02; //-0.9946; // V_{C}
SS_I_GAINS[2] = 0; //+0.9946; // U

// Output limitation
UV_BOUNDARY = 120;
UI_BOUNDARY = 500;
// Ressonant Control
A = 0.1;
OMEGA0 = 376.991118431;
TS_20KHZ = 0.00005;

// Voltage Control Variables
v_ref = 0;
uv = 0;
uv_bounded = 0;
xc_1_kminus1 = 0;
xc_2_kminus1 = 0;
xc_1 = 0;
xc_2 = 0;
err = 0;

// Voltage Control Variables
ui = 0;
ui_bounded = 0;
/*End code section*/"
                input_terminals = "real IN_IL1_REF;real IN_IL1;real IN_VC;real IN_KR;real IN_ENABLE;"
                input_terminals_dimensions = "1;1;1;1;1"
                input_terminals_feedthrough = "True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1)
{   
    // Calculate current loop control action
    ui = (IN_KR * IN_IL1_REF) - (SS_I_GAINS[0] * IN_IL1) - (SS_I_GAINS[1] * IN_VC) - (SS_I_GAINS[2] * ui);
    
    // Execute output limitation function
    ui_bounded = ui;
    if( (ui*ui)/sqrt(ui*ui) >= UI_BOUNDARY)
        ui_bounded = UI_BOUNDARY * ui / sqrt(ui*ui);
    
    // C Function Output
    OUT_PWM_A = +ui_bounded/UI_BOUNDARY;
    OUT_PWM_B = -ui_bounded/UI_BOUNDARY;
}else
{
    // C Function Output
    OUT_PWM_A = 0;
    OUT_PWM_B = 0;
}
/*End code section*/"
                output_terminals = "real OUT_PWM_A;real OUT_PWM_B;"
                output_terminals_dimensions = "inherit;inherit"
                output_terminals_feedthrough = "True;True"
                output_terminals_show_labels = "False;False"
            }
            [
                position = 11792, 7728
                size = 120, 416
            ]

            component "core/SCADA Input" KR {
                def_value = "8"
                execution_rate = "TS_20KHZ"
                max = "50"
                min = "0.1"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 11536, 7816
            ]

            component "core/Rate Transition" RT92 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 11680, 7552
                hide_name = True
                size = 32, 32
            ]

            component "core/Probe" IL2_F {
            }
            [
                position = 10488, 7592
                rotation = left
                scale = -1, -1
            ]

            component "core/C function" VIRTUAL_IMPEDANCE {
                add_src_path = "..\src"
                add_src_path_full = "C:\projetos\adaptive_single_phase_microgrid\src"
                arb_defs = "/*Begin code section*/
// Virtual Impedance Struct definition
struct VirtualImpedance
{
  // general
  float sampling_time;
  float inductance;
  float zeta;
  float omega_pole;
  // recurrence equation gains
  float phi1;
  float phi2;
  float phi3;
  float phi4;
  // previous interest variables
  float current_kminus1;
  float current_kminus2;
  float voltage_kminus1;
  float voltage_kminus2;
};

// Virtual Impedance Constants
const float TS = 0.0001;
const float INDUCTANCE = 1.25e-3;
const float ZETA = 1.0;
const float POLE = 9424.77796077;

// Struct declaration
struct VirtualImpedance vz;

// Virtual Impedance  Variables
float output = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_virtual_impedance.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_virtual_impedance.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\virtual_impedance.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\virtual_impedance.h"
                init_fnc = "/*Begin code section*/
// Struct initialization
initVirtualImpedance(&vz, TS, INDUCTANCE, ZETA, POLE);
// Virtual Impedance Variables
output = 0;
/*End code section*/"
                input_terminals = "real IN_IL2_PC;real IN_VIRTUAL_INDUCTANCE;"
                input_terminals_dimensions = "inherit;inherit"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
// Set inductance according to SCADA input
setInductance(&vz, 1e-3*IN_VIRTUAL_INDUCTANCE);
// Virtual Impedance execution
executeVirtualImpedance(&vz, IN_IL2_PC, &output);
// Handle Output
OUT_VL_DROP = output;
/*End code section*/"
                output_terminals = "real OUT_VL_DROP;"
                output_terminals_dimensions = "inherit"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10432, 7720
                hide_name = True
                size = 48, 48
            ]

            component "core/Probe" VL_DROP {
            }
            [
                position = 10488, 7784
                rotation = left
                scale = -1, -1
            ]

            component "core/SCADA Input" VZ {
                def_value = "1.25"
                execution_rate = "TS_10KHZ"
                max = "3"
                min = "0"
                signal_access = "Inherit"
                unit = "mH"
            }
            [
                position = 10104, 7768
            ]

            component "core/Advanced Low-Pass Filter" LPF {
                N = "2"
                apb = "3"
                execution_rate = "TS_10KHZ"
                fc = "300"
                fc_combo = "External"
                type_combo = "Butterworth"
            }
            [
                position = 10432, 7528
                size = 48, 48
            ]

            component "core/Rate Transition" RT61 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10248, 7520
                hide_name = True
                size = 32, 32
            ]

            component "core/SCADA Input" FC {
                def_value = "300"
                execution_rate = "TS_10KHZ"
                max = "1000"
                min = "120"
                signal_access = "Inherit"
                unit = "Hz"
            }
            [
                position = 10104, 7576
            ]

            component "core/C function" VOLTAGE_CONTROLLER1 {
                arb_defs = "/*Begin code section*/
// Ressonant Controller Struct redeclaration
struct MRAC {
  // general
  float sampling_time;
  float gamma;
  float r_kminus1;
  float y_kminus1;
  float u_kminus1;
  float e_kminus1;
  float sin_kminus1;
  float cos_kminus1;
  float output_boundary;

  // reference model
  float settling_time;
  // recurrence equation coefficients
  float beta1_w;
  float beta0_w;
  float alpha0_w;
  // recurrence equation variables
  float yw_kminus1;

  // zeta matrix
  float zeta_x1_kminus1;
  float zeta_y_kminus1;
  float zeta_r_kminus1;
  // zeta augmented matrix for disturbance rejection
  float zeta_sin_kminus1;
  float zeta_cos_kminus1;

  // theta controller parameters solution variables
  float theta_x1_kminus1;
  float theta_y_kminus1;
  float theta_r_kminus1;
  float theta_sin_kminus1;
  float theta_cos_kminus1;
  // optimizing a repetitive product
  float ts_times_gamma;

  // phase and gain reference model correction
  float gain_correction;
  float phase_shift;

  // normalization signal
  float one_by_m2_kminus1;
};

// MRAC variables
struct MRAC mrac;
float u = 0;
float ref = 0;
float cr = 0;
float yw = 0;

// Constants declaration
float TS_10KHZ = 0;
float GAMMA = 0;
float SETTLING_TIME = 0;
float OUTPUT_BOUNDARY = 0;


// Thetas
float theta0 = 0;
float theta1 = 0;
float theta2 = 0;
float theta3 = 0;
float theta4 = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_mrac.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_mrac.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\mrac.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\mrac.h"
                init_fnc = "/*Begin code section*/
// Auxiliary variables
TS_10KHZ = 0.0001;
GAMMA = 50;
SETTLING_TIME = 0.5e-3;
OUTPUT_BOUNDARY = 500;

// MRAC variables
u = 0;
ref = 0;
cr = 0;
yw = 0;

// Thetas
theta0 = 0;
theta1 = 0;
theta2 = 0;
theta3 = 0;
theta4 = 0;

// MRAC initialization
initMRAC(&mrac, TS_10KHZ, GAMMA, SETTLING_TIME, 1.0, 0);
setBoundary(&mrac, OUTPUT_BOUNDARY);
/*End code section*/"
                input_terminals = "real IN_REF_ALPHA;real IN_REF_BETA;real IN_VC;real IN_IL2;real IN_V_ALPHA;real IN_V_BETA;inherit IN_GAMA;inherit IN_SETTLING_TIME;inherit IN_GAIN;inherit IN_PHASE_SHIFT;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True;True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False;False;False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // MRAC controller execution
    executeMRAC(&mrac, IN_REF_ALPHA, IN_REF_BETA, IN_VC, IN_IL2, IN_V_ALPHA, IN_V_BETA, &u, &cr, &yw);
    // Set Controller Parameters
    setGamma(&mrac, IN_GAMA);
    setSettlingTime(&mrac, IN_SETTLING_TIME);
    setGain(&mrac, IN_GAIN);
    setPhaseShift(&mrac, IN_PHASE_SHIFT);
    // Get thetas
    getMRACgains(&mrac, &theta0, &theta1, &theta2, &theta3, &theta4);
    // Output values
    OUT_V_CTRL = u;
    OUT_YW = yw;
    OUT_THETA[0] = theta0;
    OUT_THETA[1] = theta1;
    OUT_THETA[2] = theta2;
    OUT_THETA[3] = theta3;
    OUT_THETA[4] = theta4;
}else{
    // Output values
    OUT_V_CTRL = 0;
    OUT_YW = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V_CTRL;real OUT_YW;real OUT_THETA;"
                output_terminals_dimensions = "inherit;inherit;5"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "False;False;False"
            }
            [
                position = 10968, 7808
                size = 120, 576
            ]

            component "core/Rate Transition" RT88 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10856, 7664
                hide_name = True
                size = 32, 32
            ]

            component "core/Probe" REF_IL2 {
            }
            [
                position = 11168, 7608
                rotation = down
                scale = -1, -1
            ]

            component "core/Rate Transition" RT89 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10856, 8048
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT91 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10856, 7712
                hide_name = True
                size = 32, 32
            ]

            component "core/Sum" Sum1 {
                signs = "+-"
            }
            [
                position = 10432, 7896
            ]

            component "core/Probe" REF_VC {
            }
            [
                position = 10496, 7960
                rotation = left
                scale = -1, -1
            ]

            component "core/C function" SOGI_QSG1 {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.8, 10);
/*End code section*/"
                input_terminals = "real IN_VGRID;"
                input_terminals_dimensions = "1"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "False"
                output_fnc = "/*Begin code section*/
//Execução da Rotina do SOGI para a Tensão
executeSOGI(&v_sogi, IN_VGRID, &v_alpha, &v_beta, &v_freq);
//Atribuição dos valores as saídas do bloco
OUT_V = v_alpha;
OUT_V_QUAD = v_beta;
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_V_QUAD;"
                output_terminals_dimensions = "1;1"
                output_terminals_feedthrough = "True;True"
                output_terminals_show_labels = "False;False"
            }
            [
                position = 10424, 8088
                hide_name = True
                size = 88, 88
            ]

            component "core/SCADA Input" GAMMA {
                def_value = "200"
                execution_rate = "TS_10KHZ"
                max = "1000"
                min = "1"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 10104, 8240
            ]

            component "core/SCADA Input" SETTLING_TIME {
                def_value = "0.00833333333"
                execution_rate = "TS_10KHZ"
                max = "0.1"
                min = "0"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 10104, 8296
            ]

            component "core/SCADA Input" GAIN {
                def_value = "1"
                execution_rate = "TS_10KHZ"
                max = "3"
                min = "0.1"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 10104, 8352
            ]

            component "core/SCADA Input" PHASE_SHIFT {
                execution_rate = "TS_10KHZ"
                max = "1.57079632679"
                min = "-1.57079632679"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 10104, 8408
            ]

            component "core/Probe" THETA {
            }
            [
                position = 11168, 8072
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" REF_VC_AL {
            }
            [
                position = 10624, 8016
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" REF_VC_BE {
            }
            [
                position = 10624, 8168
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" REF_YW {
            }
            [
                position = 11168, 7808
                rotation = down
                scale = -1, -1
            ]

            component "core/C function" VOLTAGE_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Ressonant Controller Struct redeclaration
struct ResonantController {
  // sampling time
  float sampling_time;
  float output_boundary;
  // characteristic transfer function coefficients
  float kp;
  float zero_dumping;
  float pole_dumping;
  float omega0;
  // recurrence equation gains
  float aux_4ts2;
  float aux_4ts;
  float k1;
  float k2;
  float k3;
  float k4;
  float k5;
  // past control variables
  float err_kminus1;
  float err_kminus2;
  float u_kminus1;
  float u_kminus2;
};

// ResonantController variables (3*60Hz)
struct ResonantController rc3;
float u3 = 0;
float err3 = 0;

// ResonantController variables (5*60Hz)
struct ResonantController rc5;
float u5 = 0;
float err5 = 0;

// ResonantController variables (7*60Hz)
struct ResonantController rc7;
float u7 = 0;
float err7 = 0;

// Constants declaration
float TWOPI = 0;
float omega0 = 0;
float TS_10KHZ = 0;
float SQRT2 = 0;
float U_BOUNDARY = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_resonant_control.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_resonant_control.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\resonant_control.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\resonant_control.h"
                init_fnc = "/*Begin code section*/
// Auxiliary variables
TWOPI = 6.2831;
omega0 = TWOPI * 60;
TS_10KHZ = 0.0001;
SQRT2 = 1.41421356237;
U_BOUNDARY = 120;

// ResonantController variables (3*60 Hz)
u3 = 0;
err3 = 0;

// ResonantController variables (5*60 Hz)
u5 = 0;
err5 = 0;

// ResonantController variables (7*60 Hz)
u7 = 0;
err7 = 0;

// ResonantController initialization
resonantInit(&rc3, 0.01, 0.5, 0.01, 3*omega0, TS_10KHZ);
resonantInit(&rc5, 0.01, 0.5, 0.01, 5*omega0, TS_10KHZ);
resonantInit(&rc7, 0.01, 0.5, 0.01, 7*omega0, TS_10KHZ);

// Set output limitation
setOutputBoundary(&rc3, U_BOUNDARY);
setOutputBoundary(&rc5, U_BOUNDARY);
setOutputBoundary(&rc7, U_BOUNDARY);
/*End code section*/"
                input_terminals = "real IN_V_REF;real IN_VC;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True"
                input_terminals_show_labels = "False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // Resonant controller execution
    executeResonant(&rc3, IN_V_REF, IN_VC, &u3, &err3);
    executeResonant(&rc5, IN_V_REF, IN_VC, &u5, &err5);
    executeResonant(&rc7, IN_V_REF, IN_VC, &u7, &err7);
    // Output values
    OUT_V_CTRL = u3 + u5 +u7;
}else{
    // Output values
    OUT_V_CTRL = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V_CTRL;"
                output_terminals_dimensions = "inherit"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10968, 8432
                size = 120, 440
            ]

            component "core/Rate Transition" RT19 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10856, 8432
                hide_name = True
                size = 32, 32
            ]

            component "core/Constant" Constant13 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10712, 8632
                hide_name = True
            ]

            component "core/Probe" REF_MPR {
            }
            [
                position = 11160, 8504
                rotation = down
                scale = -1, -1
            ]

            component "core/Sum" Sum2 {
            }
            [
                position = 11528, 7552
            ]

            port L {
                position = right:auto
                kind = pe
            }
            [
                position = 10720, 7056
                scale = -1, 1
            ]

            port N {
                position = right:auto
                kind = pe
            }
            [
                position = 10720, 7248
                scale = -1, 1
            ]

            port "Info in" {
                position = left:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 8560, 7672
                hide_name = True
            ]

            tag From11 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9712, 6896
                hide_name = True
                size = 60, 20
            ]

            tag Goto1 {
                value = "IL2"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10376, 6984
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From8 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9712, 6944
                hide_name = True
                size = 60, 20
            ]

            tag Goto13 {
                value = "VC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10376, 7200
                hide_name = True
                size = 60, 20
            ]

            tag Goto10 {
                value = "IL1"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10160, 6984
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From95 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9064, 7520
                hide_name = True
                size = 108, 20
            ]

            tag From96 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9064, 7792
                hide_name = True
                size = 108, 20
            ]

            tag Goto107 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7528
                hide_name = True
                size = 108, 20
            ]

            tag Goto108 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7592
                hide_name = True
                size = 108, 20
            ]

            tag Goto109 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7656
                hide_name = True
                size = 108, 20
            ]

            tag Goto110 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7720
                hide_name = True
                size = 108, 20
            ]

            tag Goto111 {
                value = "OMEGA_VSC1"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7784
                hide_name = True
                size = 108, 20
            ]

            tag Goto14 {
                value = "P0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8864, 7528
                hide_name = True
                size = 84, 20
            ]

            tag Goto15 {
                value = "Q0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8864, 7600
                hide_name = True
                size = 84, 20
            ]

            tag Goto18 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8864, 7664
                hide_name = True
                size = 84, 20
            ]

            tag Goto132 {
                value = "VSC1_enable"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8864, 7696
                hide_name = True
                size = 84, 20
            ]

            tag Goto146 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9976, 7520
                hide_name = True
                size = 108, 20
            ]

            tag From169 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7520
                hide_name = True
                size = 108, 20
            ]

            tag From170 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7600
                hide_name = True
                size = 108, 20
            ]

            tag From171 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7680
                hide_name = True
                size = 108, 20
            ]

            tag From172 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7760
                hide_name = True
                size = 108, 20
            ]

            tag From173 {
                value = "Q0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9584, 7920
                hide_name = True
                size = 60, 20
            ]

            tag From174 {
                value = "P0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9584, 7840
                hide_name = True
                size = 60, 20
            ]

            tag From175 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9584, 8160
                hide_name = True
                size = 60, 20
            ]

            tag From183 {
                value = "VSC1_enable"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9712, 6984
                hide_name = True
                size = 60, 20
            ]

            tag Goto149 {
                value = "VSC2_enable"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8864, 7728
                hide_name = True
                size = 84, 20
            ]

            tag From179 {
                value = "VSC1_enable"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9584, 8240
                hide_name = True
                size = 60, 20
            ]

            tag From1961 {
                value = "IL1"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11576, 7640
                hide_name = True
                size = 108, 20
            ]

            tag From1962 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11576, 7728
                hide_name = True
                size = 108, 20
            ]

            tag From1963 {
                value = "VSC1_enable"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11576, 7904
                hide_name = True
                size = 108, 20
            ]

            tag Goto159 {
                value = "PWM_A"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11968, 7536
                hide_name = True
                size = 108, 20
            ]

            tag Goto160 {
                value = "PWM_B"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11968, 7920
                hide_name = True
                size = 108, 20
            ]

            tag From1964 {
                value = "UV"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11352, 7544
                hide_name = True
                size = 108, 20
            ]

            tag Goto142 {
                value = "IL2_F"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10576, 7528
                hide_name = True
                size = 108, 20
            ]

            tag Goto143 {
                value = "VL_DROP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10576, 7720
                hide_name = True
                size = 108, 20
            ]

            tag From161 {
                value = "IL2_F"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10144, 7712
                hide_name = True
                size = 108, 20
            ]

            tag From143 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10144, 7520
                hide_name = True
                size = 108, 20
            ]

            tag Goto150 {
                value = "UV"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11128, 7544
                hide_name = True
                size = 108, 20
            ]

            tag From185 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 7664
                hide_name = True
                size = 108, 20
            ]

            tag From187 {
                value = "VSC1_enable"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 8048
                hide_name = True
                size = 108, 20
            ]

            tag From188 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 7760
                hide_name = True
                size = 108, 20
            ]

            tag From189 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 7808
                hide_name = True
                size = 108, 20
            ]

            tag From191 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 7712
                hide_name = True
                size = 108, 20
            ]

            tag From186 {
                value = "VL_DROP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10144, 7936
                hide_name = True
                size = 108, 20
            ]

            tag From184 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10144, 7888
                hide_name = True
                size = 108, 20
            ]

            tag Goto152 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10584, 7896
                hide_name = True
                size = 108, 20
            ]

            tag From192 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10144, 8088
                hide_name = True
                size = 108, 20
            ]

            tag Goto153 {
                value = "V_REF_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10584, 8064
                hide_name = True
                size = 108, 20
            ]

            tag Goto154 {
                value = "V_REF_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10584, 8112
                hide_name = True
                size = 108, 20
            ]

            tag From193 {
                value = "V_REF_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 7568
                hide_name = True
                size = 108, 20
            ]

            tag From194 {
                value = "V_REF_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 7616
                hide_name = True
                size = 108, 20
            ]

            tag From1955 {
                value = "GAMMA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 7856
                hide_name = True
                size = 108, 20
            ]

            tag Goto155 {
                value = "GAMMA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10584, 8240
                hide_name = True
                size = 108, 20
            ]

            tag Goto156 {
                value = "SETTLING_TIME"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10584, 8296
                hide_name = True
                size = 108, 20
            ]

            tag Goto157 {
                value = "GAIN"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10584, 8352
                hide_name = True
                size = 108, 20
            ]

            tag Goto158 {
                value = "PHASE_SHIFT"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10584, 8408
                hide_name = True
                size = 108, 20
            ]

            tag From1956 {
                value = "SETTLING_TIME"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 7904
                hide_name = True
                size = 108, 20
            ]

            tag From1957 {
                value = "GAIN"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 7952
                hide_name = True
                size = 108, 20
            ]

            tag From1958 {
                value = "PHASE_SHIFT"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 8000
                hide_name = True
                size = 108, 20
            ]

            tag Goto117 {
                value = "UV_MPR"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11120, 8432
                hide_name = True
                size = 108, 20
            ]

            tag From141 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 8232
                hide_name = True
                size = 108, 20
            ]

            tag From108 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10752, 8432
                hide_name = True
                size = 108, 20
            ]

            tag From1965 {
                value = "UV_MPR"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11352, 7584
                hide_name = True
                size = 108, 20
            ]

            junction Junction87 pe
            [
                position = 10232, 7056
            ]

            junction Junction88 pe
            [
                position = 10296, 7056
            ]

            junction Junction95 sp
            [
                position = 9824, 6944
            ]

            junction Junction96 sp
            [
                position = 9840, 6960
            ]

            junction Junction97 pe
            [
                position = 10232, 7248
            ]

            junction Junction104 pe
            [
                position = 10296, 7248
            ]

            junction Junction105 pe
            [
                position = 10568, 7248
            ]

            junction Junction81 sp
            [
                position = 8712, 7520
            ]

            junction Junction113 sp
            [
                position = 9904, 7520
            ]

            junction Junction116 sp
            [
                position = 9808, 6984
            ]

            junction Junction111 sp
            [
                position = 10488, 7720
            ]

            junction Junction115 sp
            [
                position = 10488, 7528
            ]

            junction Junction117 sp
            [
                position = 11056, 7544
            ]

            junction Junction120 sp
            [
                position = 10496, 7896
            ]

            junction Junction121 sp
            [
                position = 10504, 8112
            ]

            junction Junction122 sp
            [
                position = 10504, 8064
            ]

            junction Junction101 sp
            [
                position = 11048, 8432
            ]

            comment Comment27 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">CONTROL </span></p></body></html> ENDCOMMENT 
            [
                position = 9952, 7368
            ]

            comment Comment28 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">POWER SYSTEM</span> </p></body></html> ENDCOMMENT 
            [
                position = 10016, 6800
            ]

            comment Comment16 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">PHASE LOCKED LOOP</p></body></html> ENDCOMMENT 
            [
                position = 9200, 7456
            ]

            comment Comment23 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[0] = P0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[1] = Q0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[2] = STS_STATUS   </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[3] = VSC1_ENABLE</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[4] = VSC2_ENABLE </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[5] = SHORT CIRCUIT </p></body></html> ENDCOMMENT 
            [
                position = 8608, 7824
            ]

            comment Comment24 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">HANDLE INFO INPUT</p></body></html> ENDCOMMENT 
            [
                position = 8640, 7456
            ]

            comment Comment34 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 9728, 7456
            ]

            comment Comment35 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">CURRENT CONTROLLER</p></body></html> ENDCOMMENT 
            [
                position = 11728, 7456
            ]

            comment Comment30 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">LOW PASS FILTER</p></body></html> ENDCOMMENT 
            [
                position = 10360, 7456
            ]

            comment Comment32 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VIRTUAL IMPEDANCE</p></body></html> ENDCOMMENT 
            [
                position = 10344, 7640
            ]

            comment Comment36 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VOLTAGE CONTROLLER </p></body></html> ENDCOMMENT 
            [
                position = 10872, 7456
            ]

            comment Comment37 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VOLTAGE REFERENCE</p></body></html> ENDCOMMENT 
            [
                position = 10344, 7824
            ]

            comment Comment38 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">SOGI QSG</p></body></html> ENDCOMMENT 
            [
                position = 10376, 8000
            ]

            comment Comment39 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">MRAC PARAMETERS</p></body></html> ENDCOMMENT 
            [
                position = 10328, 8184
            ]

            comment Comment19 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VOLTAGE CONTROLLER </p></body></html> ENDCOMMENT 
            [
                position = 10872, 8168
            ]

            connect R2.p_node C2.n_node as Connection553
            connect VC.out Goto13 as Connection499
            connect Vdc.p_node R3.n_node as Connection569
            connect IL1.out Goto10 as Connection713
            connect IL2.out Goto1 as Connection721
            connect IL1.n_node Junction87 as Connection726
            connect Junction87 C2.p_node as Connection727
            [
                breakpoints = 10232, 7056
            ]
            connect VC.p_node Junction88 as Connection729
            connect Junction88 Junction87 as Connection730
            connect IL2.p_node Junction88 as Connection731
            connect "Bus Join1.out" COM.in as Connection749
            connect "GRID FORMING.neg_out" Vdc.n_node as Connection757
            connect R3.p_node "GRID FORMING.pos_out" as Connection758
            connect From8 Junction95 as Connection773
            [
                breakpoints = 9816, 6944; 9816, 6944
            ]
            connect Junction95 "Bus Join1.in1" as Connection775
            connect From11 Junction96 as Connection776
            [
                breakpoints = 9832, 6896; 9840, 6896
            ]
            connect "Bus Join1.in2" Junction96 as Connection778
            connect L6.p_node "GRID FORMING.a_in" as Connection788
            connect R2.n_node Junction97 as Connection789
            connect "GRID FORMING.b_in" Junction97 as Connection791
            connect Junction95 "GRID FORMING.InA" as Connection794
            connect Junction96 "GRID FORMING.InB" as Connection795
            connect Goto107 SOGI_QSG.OUT_V as Connection6532
            connect Goto108 SOGI_QSG.OUT_V_QUAD as Connection6533
            connect Goto109 SOGI_QSG.OUT_I as Connection6534
            connect SOGI_QSG.OUT_I_QUAD Goto110 as Connection6535
            connect Goto111 SOGI_QSG.OUT_OMEGA as Connection6536
            connect RT42.out SOGI_QSG.IN_IL2 as Connection6764
            connect RT42.in From96 as Connection6765
            connect From95 RT43.in as Connection6766
            connect RT43.out SOGI_QSG.IN_VGRID as Connection6767
            connect L6.n_node R4.p_node as Connection6768
            connect IL1.p_node R4.n_node as Connection6769
            connect IL2.n_node Meter.in as Connection6811
            connect Junction97 Junction104 as Connection6812
            [
                breakpoints = 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248
            ]
            connect Junction104 VC.n_node as Connection6813
            [
                breakpoints = 10296, 7248; 10296, 7248; 10296, 7248; 10296, 7248; 10296, 7248
            ]
            connect Meter.N Junction105 as Connection6814
            connect Junction104 Junction105 as Connection6816
            connect Meter.out "Core Coupling 2.a_in" as Connection6832
            connect "Core Coupling 2.a_out" L as Connection6833
            connect Junction105 "Core Coupling 2.b_in" as Connection6834
            connect "Core Coupling 2.b_out" N as Connection6835
            connect Product1.in Junction81 as Connection684
            connect Junction81 Product2.in as Connection685
            [
                breakpoints = 8712, 7520; 8712, 7592
            ]
            connect Constant9.out Junction81 as Connection686
            [
                breakpoints = 8600, 7520; 8712, 7520
            ]
            connect "Bus Split1.out1" Product2.in1 as Connection6840
            [
                breakpoints = 8712, 7640; 8712, 7608
            ]
            connect "Bus Split1.out" Product1.in1 as Connection6841
            [
                breakpoints = 8696, 7624; 8696, 7536
            ]
            connect "Info in" "Bus Split1.in" as Connection6843
            connect RT83.out DROOP_CONTROLLER2.IN_MICROGRID_STATUS as Connection6964
            connect RT83.in From175 as Connection6965
            connect RT81.out DROOP_CONTROLLER2.IN_Q0 as Connection6972
            connect RT81.in From173 as Connection6973
            connect RT80.out DROOP_CONTROLLER2.IN_P0 as Connection6974
            connect From174 RT80.in as Connection6975
            connect Goto146 Junction113 as Connection6982
            connect Junction113 DROOP_CONTROLLER2.OUT_V as Connection6983
            connect V.in Junction113 as Connection6984
            connect From169 DROOP_CONTROLLER2.IN_V_DIR as Connection6989
            connect From170 DROOP_CONTROLLER2.IN_V_QUAD as Connection6990
            connect From171 DROOP_CONTROLLER2.IN_I_DIR as Connection6991
            connect From172 DROOP_CONTROLLER2.IN_I_QUAD as Connection6992
            connect KV.out DROOP_CONTROLLER2.IN_KV as Connection6993
            connect KI.out DROOP_CONTROLLER2.IN_KI as Connection6994
            connect QF.in DROOP_CONTROLLER2.OUT_QF as Connection6996
            connect PF.in DROOP_CONTROLLER2.OUT_PF as Connection6997
            connect Product1.out Goto14 as Connection7040
            connect "GRID FORMING.En" Junction116 as Connection7036
            [
                breakpoints = 9808, 6992; 9808, 6992
            ]
            connect Junction116 "Bus Join1.in" as Connection7037
            connect Termination1.in "Bus Split1.out5" as Connection7041
            [
                breakpoints = 8680, 7768; 8680, 7712
            ]
            connect From183 Junction116 as Connection7038
            connect Product2.out Goto15 as Connection7042
            connect REF_P.in DROOP_CONTROLLER2.OUT_REF_P as Connection7024
            connect REF_Q.in DROOP_CONTROLLER2.OUT_REF_Q as Connection7025
            connect "Bus Split1.out2" Goto18 as Connection7026
            connect Goto132 "Bus Split1.out3" as Connection7027
            [
                breakpoints = 8712, 7696; 8712, 7680
            ]
            connect Goto149 "Bus Split1.out4" as Connection7028
            [
                breakpoints = 8696, 7728; 8696, 7696
            ]
            connect From179 RT85.in as Connection7029
            connect RT85.out DROOP_CONTROLLER2.IN_ENABLE as Connection7030
            connect KR.out INNER_LOOP_CONTROL.IN_KR as Connection7112
            connect From1963 INNER_LOOP_CONTROL.IN_ENABLE as Connection7113
            connect INNER_LOOP_CONTROL.OUT_PWM_A Goto159 as Connection7120
            connect INNER_LOOP_CONTROL.OUT_PWM_B Goto160 as Connection7121
            connect From1961 INNER_LOOP_CONTROL.IN_IL1 as Connection7122
            connect From1962 INNER_LOOP_CONTROL.IN_VC as Connection7123
            connect VIRTUAL_IMPEDANCE.OUT_VL_DROP Junction111 as Connection6899
            connect Junction111 Goto143 as Connection6900
            connect VL_DROP.in Junction111 as Connection6901
            connect From161 VIRTUAL_IMPEDANCE.IN_IL2_PC as Connection6905
            connect VZ.out VIRTUAL_IMPEDANCE.IN_VIRTUAL_INDUCTANCE as Connection6906
            [
                breakpoints = 10304, 7768; 10304, 7728
            ]
            connect RT61.out LPF.in as Connection6895
            connect RT61.in From143 as Connection6896
            connect FC.out LPF.fc_input as Connection6912
            [
                breakpoints = 10296, 7576; 10296, 7536
            ]
            connect IL2_F.in Junction115 as Connection7011
            connect Junction115 LPF.out as Connection7012
            [
                breakpoints = 10488, 7528; 10488, 7528
            ]
            connect Goto142 Junction115 as Connection7013
            connect RT88.out VOLTAGE_CONTROLLER1.IN_VC as Connection7043
            connect Goto150 Junction117 as Connection7044
            connect Junction117 VOLTAGE_CONTROLLER1.OUT_V_CTRL as Connection7045
            connect REF_IL2.in Junction117 as Connection7046
            connect From185 RT88.in as Connection7047
            connect From187 RT89.in as Connection7053
            connect RT89.out VOLTAGE_CONTROLLER1.IN_ENABLE as Connection7054
            connect From191 RT91.in as Connection7056
            connect RT91.out VOLTAGE_CONTROLLER1.IN_IL2 as Connection7057
            connect From188 VOLTAGE_CONTROLLER1.IN_V_ALPHA as Connection7059
            connect From189 VOLTAGE_CONTROLLER1.IN_V_BETA as Connection7060
            connect REF_VC.in Junction120 as Connection7067
            connect Sum1.out Junction120 as Connection7069
            connect Goto152 Junction120 as Connection7070
            [
                breakpoints = 10496, 7896
            ]
            connect THETA.in VOLTAGE_CONTROLLER1.OUT_THETA as Connection7107
            connect From193 VOLTAGE_CONTROLLER1.IN_REF_ALPHA as Connection7080
            connect From194 VOLTAGE_CONTROLLER1.IN_REF_BETA as Connection7081
            connect From192 SOGI_QSG1.IN_VGRID as Connection7088
            connect From184 Sum1.in as Connection7089
            connect From186 Sum1.in1 as Connection7090
            [
                breakpoints = 10312, 7936; 10312, 7904
            ]
            connect Goto154 Junction121 as Connection7091
            connect Junction121 SOGI_QSG1.OUT_V_QUAD as Connection7092
            connect REF_VC_BE.in Junction121 as Connection7093
            connect Goto153 Junction122 as Connection7094
            connect Junction122 SOGI_QSG1.OUT_V as Connection7095
            connect REF_VC_AL.in Junction122 as Connection7096
            connect Goto155 GAMMA.out as Connection7098
            connect Goto156 SETTLING_TIME.out as Connection7099
            connect Goto157 GAIN.out as Connection7100
            connect Goto158 PHASE_SHIFT.out as Connection7101
            connect From1955 VOLTAGE_CONTROLLER1.IN_GAMA as Connection7102
            connect From1956 VOLTAGE_CONTROLLER1.IN_SETTLING_TIME as Connection7103
            connect From1957 VOLTAGE_CONTROLLER1.IN_GAIN as Connection7104
            connect From1958 VOLTAGE_CONTROLLER1.IN_PHASE_SHIFT as Connection7105
            connect REF_YW.in VOLTAGE_CONTROLLER1.OUT_YW as Connection7106
            connect RT92.out INNER_LOOP_CONTROL.IN_IL1_REF as Connection7127
            connect RT19.out VOLTAGE_CONTROLLER.IN_VC as Connection6551
            connect Goto117 Junction101 as Connection6785
            connect Junction101 VOLTAGE_CONTROLLER.OUT_V_CTRL as Connection6786
            connect REF_MPR.in Junction101 as Connection6787
            connect Constant13.out VOLTAGE_CONTROLLER.IN_ENABLE as Connection6798
            connect From108 RT19.in as Connection6807
            connect From141 VOLTAGE_CONTROLLER.IN_V_REF as Connection6985
            connect Sum2.out RT92.in as Connection7128
            connect From1964 Sum2.in as Connection7129
            connect From1965 Sum2.in1 as Connection7130
            [
                breakpoints = 11448, 7584; 11448, 7560
            ]

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Press \"Ctrl+Enter\" to view the subsystem.</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images/inverter.svg")
                ENDCODE
            }
        }
        [
            position = 9416, 8032
            hide_name = True
            size = 72, 120
        ]

        component Subsystem VSC_BACKUP_FUNCTIONAL {
            layout = dynamic
            component "core/Resistor" R2 {
                resistance = "VSC1_RD"
            }
            [
                position = 10232, 7200
                rotation = right
                hide_name = True
            ]

            component "core/Voltage Measurement" VC {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10296, 7200
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" IL2 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10376, 7056
                size = 64, 32
            ]

            component "core/Inductor" L6 {
                inductance = "VSC1_LF"
                signal_access = "Inherit"
            }
            [
                position = 9960, 7056
                hide_name = True
            ]

            component "core/Voltage Source" Vdc {
                init_const_value = "VSC1_VDC"
            }
            [
                position = 9688, 7176
                rotation = right
            ]

            component "core/Capacitor" C2 {
                capacitance = "VSC1_C"
                signal_access = "Inherit"
            }
            [
                position = 10232, 7112
                rotation = right
                hide_name = True
            ]

            component "core/Current Measurement" IL1 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 10160, 7056
                size = 64, 32
            ]

            component "core/Resistor" R3 {
                resistance = "1e-6"
            }
            [
                position = 9688, 7096
                rotation = right
                hide_name = True
            ]

            component "core/Single-phase Meter" Meter {
                enable_out = "False"
                execution_rate = "TS_20KHZ"
                fgrid = "60.0"
                n_cycles = "1"
            }
            [
                position = 10568, 7056
                size = 80, 80
            ]

            component "core/Single Phase Inverter" "GRID FORMING" {
                carr_ph_offset = "[0.0, 0.0]"
                carrier_freq = "20e3"
                ctrl_src = "Model"
                execution_rate = "TS_01MHZ"
                fvd_def_method = "LUT"
                load_mode = "on either"
                signal_access = "Inherit"
            }
            [
                position = 9824, 7152
                size = 127, 256
            ]

            component "core/C function" SOGI_QSG {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;

// Current SOGI
struct SOGIqsg i_sogi;
float i_alpha = 0;
float i_beta = 0;
float i_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_20KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.6, 0.2);

// Current SOGI Variables
i_alpha = 0;
i_beta = 0;
i_freq = 60;
// Current SOGI Initialization
SOGIInit(&i_sogi, i_freq, 0.6, 0.2);
/*End code section*/"
                input_terminals = "real IN_VGRID;real IN_IL2;"
                input_terminals_dimensions = "1;1"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
//Execução da Rotina do SOGI para a Tensão
executeSOGI(&v_sogi, IN_VGRID, &v_alpha, &v_beta, &v_freq);
//Execução da Rotina do SOGI para a Corrente
executeSOGI(&i_sogi, IN_IL2, &i_alpha, &i_beta, &i_freq);
//Atribuição dos valores as saídas do bloco
OUT_V = v_alpha;
OUT_V_QUAD = v_beta;
OUT_I = i_alpha;
OUT_I_QUAD = i_beta;
OUT_OMEGA = v_freq;
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_V_QUAD;real OUT_I;real OUT_I_QUAD;real OUT_OMEGA;"
                output_terminals_dimensions = "1;1;1;1;1"
                output_terminals_feedthrough = "True;True;True;True;True"
                output_terminals_show_labels = "False;False;False;False;False"
            }
            [
                position = 9296, 7656
                size = 120, 312
            ]

            component "core/Resistor" R4 {
                resistance = "VSC1_RF"
            }
            [
                position = 10056, 7056
                hide_name = True
            ]

            component "core/Single Phase Core Coupling" "Core Coupling 2" {
                snb_type_i = "R1-C1"
            }
            [
                position = 10664, 7152
                hide_name = True
                size = 12, 256
            ]

            component "core/Product" Product1 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 8760, 7528
            ]

            component "core/Product" Product2 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 8760, 7600
            ]

            component "core/Constant" Constant9 {
                execution_rate = "TS_20KHZ"
                value = "VSC1_S"
            }
            [
                position = 8560, 7520
                hide_name = True
            ]

            component "core/Termination" Termination1 {
            }
            [
                position = 8840, 7768
                hide_name = True
            ]

            component "core/C function" VOLTAGE_CONTROLLER1 {
                arb_defs = "/*Begin code section*/
// Ressonant Controller Struct redeclaration
struct MRAC {
    // general
    float sampling_time;
    float gamma;
    float ts_times_gamma;

    // reference model W_{m}(z)
    float pole_0;
    float pole_1;
    float pole_2;
    // phase and gain correction for W_{m}(z)
    float rho;
    float phi;
    // recurrence equation gains
    float alpha0;
    float alpha1;
    float alpha2;
    float alpha3;
    float beta1;
    float beta2;
    float beta3;

    // augmented error
    float a_err_kminus1;

    // recurrence equation variables for y_{m} ==> Y(z)/R(z) = W_{m}(z)
    float ym_kminus1;
    float ym_kminus2;
    float ym_kminus3;

    // recurrence equation variables for v ==> V(z)/U_{bounded}(z) = W_{m}(z)
    float v_kminus1;
    float v_kminus2;
    float v_kminus3;
    float ub_kminus1;
    float ub_kminus2;
    float ub_kminus3;
    float ub_kminus4;

    // output boundary
    float u_boundary;

    // X[k-1]
    float x1_kminus1;
    float x2_kminus1;
    float x3_kminus1;
    float r_kminus1;
    float ds_kminus1;
    float dc_kminus1;
    // X[k-2]
    float x1_kminus2;
    float x2_kminus2;
    float x3_kminus2;
    float r_kminus2;
    float ds_kminus2;
    float dc_kminus2;
    // X[k-3]
    float x1_kminus3;
    float x2_kminus3;
    float x3_kminus3;
    float r_kminus3;
    float ds_kminus3;
    float dc_kminus3;

    // zeta[k]
    float zeta_x1;
    float zeta_x2;
    float zeta_x3;
    float zeta_u;
    float zeta_r;
    float zeta_ds;
    float zeta_dc;
    // zeta[k-1]
    float zeta_x1_kminus1;
    float zeta_x2_kminus1;
    float zeta_x3_kminus1;
    float zeta_u_kminus1;
    float zeta_r_kminus1;
    float zeta_ds_kminus1;
    float zeta_dc_kminus1;
    // zeta[k-2]
    float zeta_x1_kminus2;
    float zeta_x2_kminus2;
    float zeta_x3_kminus2;
    float zeta_u_kminus2;
    float zeta_r_kminus2;
    float zeta_ds_kminus2;
    float zeta_dc_kminus2;
    // zeta[k-3]
    float zeta_x1_kminus3;
    float zeta_x2_kminus3;
    float zeta_x3_kminus3;
    float zeta_u_kminus3;
    float zeta_r_kminus3;
    float zeta_ds_kminus3;
    float zeta_dc_kminus3;

    // theta[k]
    float theta_x1;
    float theta_x2;
    float theta_x3;
    float theta_u;
    float theta_r;
    float theta_ds;
    float theta_dc;
    // zeta[k-1]
    float theta_x1_kminus1;
    float theta_x2_kminus1;
    float theta_x3_kminus1;
    float theta_u_kminus1;
    float theta_r_kminus1;
    float theta_ds_kminus1;
    float theta_dc_kminus1;

    // normalization signal
    float inv_m2_kminus1;

    // teste
    float csi;
};

// MRAC variables
struct MRAC mrac;
float u = 0;
float rc = 0;
float ym = 0;

// Constants declaration
float TS_20KHZ = 0;
float OUTPUT_BOUNDARY = 0;

// Thetas
float theta0 = 0;
float theta1 = 0;
float theta2 = 0;
float theta3 = 0;
float theta4 = 0;
float theta5 = 0;

// W_{m} gains
float ALPHA0 = 0;
float ALPHA1 = 0;
float ALPHA2 = 0;
float ALPHA3 = 0;
float BETA1 = 0;
float BETA2 = 0;
float BETA3 = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_mrac.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_mrac.dll"
                execution_rate = "TS_20KHZ"
                h_file_path = "..\src\mrac.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\mrac.h"
                init_fnc = "/*Begin code section*/
// Auxiliary variables
TS_20KHZ = 0.00005;
OUTPUT_BOUNDARY = 10000;

// MRAC variables
u = 0;
rc = 0;
ym = 0;

// Thetas
theta0 = 0;
theta1 = 0;
theta2 = 0;
theta3 = 0;
theta4 = 0;
theta5 = 0;

// W_{m} gains
ALPHA0 = +0.000000000000000e+00;
ALPHA1 = +0.000000000000000e+00;
ALPHA2 = +0.000000000000000e+00;
ALPHA3 = +4.218750000000000e-01;
BETA1 = -7.500000000000000e-01;
BETA2 = +1.875000000000000e-01;
BETA3 = -1.562500000000000e-02;

// MRAC initialization
initMRAC(&mrac, TS_20KHZ);
setBoundary(&mrac, OUTPUT_BOUNDARY);
setGamma(&mrac, 100);
setWmCoeffs(&mrac, ALPHA0, ALPHA1, ALPHA2, ALPHA3, BETA1, BETA2, BETA3);
/*End code section*/"
                input_terminals = "real IN_REF_ALPHA;real IN_REF_BETA;real IN_IL1;real IN_VC;real IN_IL2;real IN_D_SIN;real IN_D_COS;real IN_GAMA;real IN_GAIN;real IN_PHASE_SHIFT;real IN_ENABLE;"
                input_terminals_dimensions = "1;1;1;1;1;1;1;1;1;1;1"
                input_terminals_feedthrough = "True;True;True;True;True;True;True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False;False;False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // MRAC controller execution
    computeMRAC(&mrac, IN_REF_ALPHA, IN_REF_BETA, IN_IL1, IN_VC, IN_IL2, IN_D_SIN, IN_D_COS, &u, &rc, &ym);
    // Set Controller Parameters
    setGamma(&mrac, IN_GAMA);
    setGain(&mrac, IN_GAIN);
    setPhaseShift(&mrac, IN_PHASE_SHIFT);
    // Get thetas
    getTheta(&mrac, &theta0, &theta1, &theta2, &theta3, &theta4, &theta5);
    // Output values
    OUT_UV = u;
    OUT_YM = ym;
    OUT_AUX = rc;
    OUT_THETA[0] = theta0;
    OUT_THETA[1] = theta1;
    OUT_THETA[2] = theta2;
    OUT_THETA[3] = theta3;
    OUT_THETA[4] = theta4;
    OUT_THETA[5] = theta5;
}else{
    // Output values
    OUT_UV = 0;
    OUT_YM = 0;
    OUT_AUX = 0;
}
/*End code section*/"
                output_terminals = "real OUT_UV;real OUT_YM;real OUT_AUX;real OUT_THETA;"
                output_terminals_dimensions = "1;1;1;6"
                output_terminals_feedthrough = "True;True;True;True"
                output_terminals_show_labels = "False;False;False;False"
            }
            [
                position = 11000, 7816
                size = 120, 576
            ]

            component "core/Probe" REF_VC {
            }
            [
                position = 10336, 8176
                rotation = left
                scale = -1, -1
            ]

            component "core/C function" SOGI_QSG1 {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_20KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.7, 0.3);
/*End code section*/"
                input_terminals = "real IN_VGRID;"
                input_terminals_dimensions = "1"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "False"
                output_fnc = "/*Begin code section*/
//Execução da Rotina do SOGI para a Tensão
executeSOGI(&v_sogi, IN_VGRID, &v_alpha, &v_beta, &v_freq);
//Atribuição dos valores as saídas do bloco
OUT_V = v_alpha;
OUT_V_QUAD = v_beta;
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_V_QUAD;"
                output_terminals_dimensions = "1;1"
                output_terminals_feedthrough = "True;True"
                output_terminals_show_labels = "False;False"
            }
            [
                position = 10448, 8096
                hide_name = True
                size = 88, 88
            ]

            component "core/SCADA Input" GAMMA {
                def_value = "200"
                execution_rate = "TS_20KHZ"
                max = "1000"
                min = "1"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 8984, 7968
            ]

            component "core/SCADA Input" SETTLING_TIME {
                def_value = "0.00833333333"
                execution_rate = "TS_20KHZ"
                max = "0.1"
                min = "0"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 8984, 8024
            ]

            component "core/SCADA Input" GAIN {
                def_value = "1"
                execution_rate = "TS_20KHZ"
                max = "3"
                min = "0.1"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 8984, 8080
            ]

            component "core/SCADA Input" PHASE_SHIFT {
                execution_rate = "TS_20KHZ"
                max = "1.57079632679"
                min = "-1.57079632679"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 8984, 8136
            ]

            component "core/Probe" THETA {
            }
            [
                position = 11200, 8080
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" REF_VC_AL {
            }
            [
                position = 10648, 8024
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" REF_VC_BE {
            }
            [
                position = 10648, 8176
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" REF_YW {
            }
            [
                position = 11200, 7728
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" REF_AUX {
            }
            [
                position = 11200, 7904
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" REF_IL1 {
            }
            [
                position = 11200, 7624
                rotation = down
                scale = -1, -1
            ]

            component "core/Bus Selector" "Bus Selector1" {
                signal_indexes = "[0,1,2,3,4,5]"
            }
            [
                position = 8632, 7672
                hide_name = True
            ]

            component Subsystem Modulation {
                layout = dynamic
                component "core/C function" Comparator {
                    arb_defs = "/*Begin code section*/

/*End code section*/"
                    execution_rate = "TS_01MHZ"
                    input_terminals = "real IN_MOD;real IN_CARRIER;"
                    input_terminals_dimensions = "1;1"
                    input_terminals_feedthrough = "True;True"
                    input_terminals_show_labels = "True;True"
                    output_fnc = "/*Begin code section*/
// Modulating  (0º) comparison with Carrier
if (+1.0 * IN_MOD > IN_CARRIER){
    OUT_G_S1 = 1;
    OUT_G_S2 = 0;
}else{
    OUT_G_S1 = 0;
    OUT_G_S2 = 1;
}

// Modulating  (180º) comparison with Carrier
if (-1.0 * IN_MOD > IN_CARRIER){
    OUT_G_S3 = 1;
    OUT_G_S4 = 0;
}else{
    OUT_G_S3 = 0;
    OUT_G_S4 = 1;
}
/*End code section*/"
                    output_terminals = "real OUT_G_S1;real OUT_G_S2;real OUT_G_S3;real OUT_G_S4;"
                    output_terminals_dimensions = "1;1;1;1"
                    output_terminals_feedthrough = "True;True;True;True"
                    output_terminals_show_labels = "False;False;False;False"
                }
                [
                    position = 7888, 8064
                    size = 176, 168
                ]

                component "core/Bus Join" "Bus Join1" {
                    execution_rate = "TS_01MHZ"
                    inputs = "4"
                }
                [
                    position = 8096, 8064
                    hide_name = True
                ]

                component "core/Triangular Wave Source" CARRIER {
                    execution_rate = "TS_01MHZ"
                    frequency = "20000"
                    max_val = "1"
                    min_val = "0"
                }
                [
                    position = 7632, 8128
                ]

                component "core/Gain" Gain1 {
                    gain = "VSC1_VDC"
                }
                [
                    position = 7728, 8128
                ]

                component "core/Rate Transition" "Rate Transition1" {
                    execution_rate = "TS_01MHZ"
                }
                [
                    position = 7728, 8000
                    hide_name = True
                    size = 32, 32
                ]

                port Modulating {
                    position = auto:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7632, 8000
                ]

                port Gate_Signals {
                    position = right:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8200, 8064
                ]

                connect "Bus Join1.out" Gate_Signals as Connection25
                connect CARRIER.out Gain1.in as Connection63
                connect Gain1.out Comparator.IN_CARRIER as Connection64
                connect Comparator.OUT_G_S1 "Bus Join1.in" as Connection66
                [
                    breakpoints = 8032, 8000; 8032, 8040
                ]
                connect Comparator.OUT_G_S2 "Bus Join1.in1" as Connection67
                [
                    breakpoints = 8016, 8048; 8016, 8056
                ]
                connect "Bus Join1.in2" Comparator.OUT_G_S3 as Connection68
                [
                    breakpoints = 8056, 8072; 8016, 8072; 8016, 8080
                ]
                connect Comparator.OUT_G_S4 "Bus Join1.in3" as Connection69
                [
                    breakpoints = 8032, 8128; 8032, 8088
                ]
                connect Modulating "Rate Transition1.in" as Connection70
                connect "Rate Transition1.out" Comparator.IN_MOD as Connection71
            }
            [
                position = 11512, 7576
                hide_name = True
                size = 120, 88
            ]

            component "core/C function" DROOP_CONTROLLER2 {
                arb_defs = "/*Begin code section*/
// Constant definitions
const float VZERO = 220;
const float WZERO = 376.9911;
const float DELTA_V = 33;
const float DELTA_W = 18.8495559215;
const float TWOPI = 6.2831;
const float TS_10KHZ = 0.0001;
const float WC = 75.3982236862;
const int ISLANDED = 1;
const int TIED = 0;

// Structs redefinition
struct ImprovedDroop
{
    // general
    float sampling_time;

    // variables to implement first order low pass filter
    float cutoff_frequency;
    float phi1;
    float phi2;
    float phi3;
    // for active power
    float p_kminus1;
    float pf_kminus1;
    // for reactive power
    float q_kminus1;
    float qf_kminus1;

    // classical droop variables
    float p_max;
    float q_max;
    float p0;
    float q0;
    float v0;
    float w0;
    float m;
    float n;

    // improved droop variables
    float ki;
    float kv;
    float kq;
    int is_islanded;

    // integrator variables
    float phi_integral;
    // for voltage integration
    float vin_kminus1;
    float vout_kminus1;
    // for frequency integration
    float w_kminus1;
    float theta_kminus1;
};

// Structs declaration
struct ImprovedDroop droop;

// Droop Controller variables
float v = 0;
float p = 0;
float q = 0;
float p_ref = 0;
float q_ref = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_improved_droop.dll"
                dll_file_path_full = "C:\projetos\single_phase_microgrid\output\VHIL\lib_improved_droop.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\improved_droop.h"
                h_file_path_full = "C:\projetos\single_phase_microgrid\src\improved_droop.h"
                init_fnc = "/*Begin code section*/
// Droop variables
v = 0;
p = 0;
q = 0;
p_ref = 0;
q_ref = 0;
// Controllers initialization
initDroop(&droop, TS_10KHZ, VZERO, WZERO, 15000, 15000, DELTA_V, DELTA_W, WC, 1, 20);
/*End code section*/"
                input_terminals = "real IN_V_DIR;real IN_V_QUAD;real IN_I_DIR;real IN_I_QUAD;real IN_P0;real IN_Q0;real IN_KV;real IN_KI;real IN_MICROGRID_STATUS;real IN_ENABLE;"
                input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                input_terminals_feedthrough = "True;True;True;True;True;True;True;True;True;True"
                input_terminals_show_labels = "False;False;False;False;False;False;False;False;False;False"
                output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    if(IN_MICROGRID_STATUS == 1){
        // Set status to tied
        setStatus(&droop, TIED);
        
        // Active power ramp
        if(IN_P0 > p_ref) p_ref += 5;
        if(IN_P0 < p_ref) p_ref -= 5;
            
        // Reactive power ramp
        if(IN_Q0 > q_ref) q_ref += 5;
        if(IN_Q0 < q_ref) q_ref -= 5;
            
        // Set new power reference
        setP0(&droop, p_ref);
        setQ0(&droop, q_ref);
        
    }else{
        // Set status to islanded
        setStatus(&droop, TIED);
        
        // Set power reference to zero
        setP0(&droop, 0);
        setQ0(&droop, 0);
    }
    
    // Set Ki
    setKi(&droop, IN_KI);
    
    // Set Kv
    setKv(&droop, IN_KV);
    
    // Droop controller execution
    executeDroop(&droop, IN_V_DIR, IN_V_QUAD, IN_I_DIR, IN_I_QUAD, &v, &p, &q);
    
    // Output values
    OUT_V = v;
    OUT_PF = p;
    OUT_QF = q;
    OUT_REF_P = p_ref;
    OUT_REF_Q = q_ref;
}else{
    // Output values
    OUT_V = 0;
    OUT_PF = 0;
    OUT_QF = 0;
    OUT_REF_P = 0;
    OUT_REF_Q = 0;
}
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_PF;real OUT_QF;real OUT_REF_P;real OUT_REF_Q;"
                output_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit"
                output_terminals_feedthrough = "True;True;True;True;True"
                output_terminals_show_labels = "False;False;False;False;False"
            }
            [
                position = 9848, 7888
                hide_name = True
                size = 120, 768
            ]

            component "core/Rate Transition" RT80 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9736, 7848
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" RT81 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9736, 7928
                hide_name = True
                size = 32, 32
            ]

            component "core/Probe" QF {
                signal_access = "Inherit"
                signal_type = "reactive power"
            }
            [
                position = 9992, 7888
                rotation = down
                scale = -1, 1
            ]

            component "core/SCADA Input" KV {
                unit = ""
            }
            [
                position = 9592, 8008
            ]

            component "core/Rate Transition" RT83 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9736, 8168
                hide_name = True
                size = 32, 32
            ]

            component "core/SCADA Input" KI {
                unit = ""
            }
            [
                position = 9592, 8088
            ]

            component "core/Probe" PF {
                signal_access = "Inherit"
                signal_type = "active power"
            }
            [
                position = 9992, 7712
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" V {
                signal_access = "Inherit"
                signal_type = "reactive power"
            }
            [
                position = 9992, 7600
                rotation = down
                scale = -1, 1
            ]

            component "core/Probe" REF_P {
            }
            [
                position = 9992, 8064
            ]

            component "core/Probe" REF_Q {
            }
            [
                position = 9992, 8240
            ]

            component "core/Rate Transition" RT85 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9736, 8248
                hide_name = True
                size = 32, 32
            ]

            component "core/Probe" IL2_F {
            }
            [
                position = 10512, 7600
                rotation = left
                scale = -1, -1
            ]

            component "core/C function" VIRTUAL_IMPEDANCE {
                add_src_path = "..\src"
                add_src_path_full = "C:\projetos\adaptive_single_phase_microgrid\src"
                arb_defs = "/*Begin code section*/
// Virtual Impedance Struct definition
struct VirtualImpedance
{
  // general
  float sampling_time;
  float inductance;
  float zeta;
  float omega_pole;
  // recurrence equation gains
  float phi1;
  float phi2;
  float phi3;
  float phi4;
  // previous interest variables
  float current_kminus1;
  float current_kminus2;
  float voltage_kminus1;
  float voltage_kminus2;
};

// Virtual Impedance Constants
const float TS = 0.0001;
const float INDUCTANCE = 1.25e-3;
const float ZETA = 1.0;
const float POLE = 9424.77796077;

// Struct declaration
struct VirtualImpedance vz;

// Virtual Impedance  Variables
float output = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_virtual_impedance.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_virtual_impedance.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\virtual_impedance.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\virtual_impedance.h"
                init_fnc = "/*Begin code section*/
// Struct initialization
initVirtualImpedance(&vz, TS, INDUCTANCE, ZETA, POLE);
// Virtual Impedance Variables
output = 0;
/*End code section*/"
                input_terminals = "real IN_IL2_PC;real IN_VIRTUAL_INDUCTANCE;"
                input_terminals_dimensions = "inherit;inherit"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
// Set inductance according to SCADA input
setInductance(&vz, 1e-3*IN_VIRTUAL_INDUCTANCE);
// Virtual Impedance execution
executeVirtualImpedance(&vz, IN_IL2_PC, &output);
// Handle Output
OUT_VL_DROP = output;
/*End code section*/"
                output_terminals = "real OUT_VL_DROP;"
                output_terminals_dimensions = "inherit"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10456, 7728
                hide_name = True
                size = 48, 48
            ]

            component "core/Probe" VL_DROP {
            }
            [
                position = 10512, 7792
                rotation = left
                scale = -1, -1
            ]

            component "core/SCADA Input" VZ {
                def_value = "1.25"
                execution_rate = "TS_10KHZ"
                max = "3"
                min = "0"
                signal_access = "Inherit"
                unit = "mH"
            }
            [
                position = 10128, 7776
            ]

            component "core/Advanced Low-Pass Filter" LPF {
                N = "2"
                apb = "3"
                execution_rate = "TS_10KHZ"
                fc = "300"
                fc_combo = "External"
                type_combo = "Butterworth"
            }
            [
                position = 10456, 7536
                size = 48, 48
            ]

            component "core/Rate Transition" RT61 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10272, 7528
                hide_name = True
                size = 32, 32
            ]

            component "core/SCADA Input" FC {
                def_value = "300"
                execution_rate = "TS_10KHZ"
                max = "1000"
                min = "120"
                signal_access = "Inherit"
                unit = "Hz"
            }
            [
                position = 10128, 7584
            ]

            component "core/Sum" Sum1 {
                signs = "+-"
            }
            [
                position = 10456, 7904
            ]

            component "core/Probe" REF_VC1 {
            }
            [
                position = 10520, 7968
                rotation = left
                scale = -1, -1
            ]

            component "core/Rate Transition" "Rate Transition1" {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 10288, 8096
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" "Rate Transition2" {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9736, 7528
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" "Rate Transition3" {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9736, 7608
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" "Rate Transition4" {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9736, 7688
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" "Rate Transition5" {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9736, 7768
                hide_name = True
                size = 32, 32
            ]

            port L {
                position = right:auto
                kind = pe
            }
            [
                position = 10720, 7056
                scale = -1, 1
            ]

            port N {
                position = right:auto
                kind = pe
            }
            [
                position = 10720, 7248
                scale = -1, 1
            ]

            port "Info in" {
                position = left:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 8560, 7672
                hide_name = True
            ]

            tag Goto1 {
                value = "IL2"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10376, 6976
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag Goto13 {
                value = "VC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10376, 7200
                hide_name = True
                size = 60, 20
            ]

            tag Goto10 {
                value = "IL1"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10160, 6976
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From95 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9064, 7520
                hide_name = True
                size = 108, 20
            ]

            tag From96 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9064, 7792
                hide_name = True
                size = 108, 20
            ]

            tag Goto107 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7528
                hide_name = True
                size = 108, 20
            ]

            tag Goto108 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7592
                hide_name = True
                size = 108, 20
            ]

            tag Goto109 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7656
                hide_name = True
                size = 108, 20
            ]

            tag Goto110 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7720
                hide_name = True
                size = 108, 20
            ]

            tag Goto111 {
                value = "OMEGA_VSC1"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9448, 7784
                hide_name = True
                size = 108, 20
            ]

            tag Goto14 {
                value = "P0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8864, 7528
                hide_name = True
                size = 84, 20
            ]

            tag Goto15 {
                value = "Q0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8864, 7600
                hide_name = True
                size = 84, 20
            ]

            tag Goto18 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8864, 7664
                hide_name = True
                size = 84, 20
            ]

            tag Goto132 {
                value = "VSC1_enable"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8864, 7696
                hide_name = True
                size = 84, 20
            ]

            tag Goto149 {
                value = "VSC2_enable"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8864, 7728
                hide_name = True
                size = 84, 20
            ]

            tag Goto150 {
                value = "MOD"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11184, 7552
                hide_name = True
                size = 60, 20
            ]

            tag From185 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10784, 7720
                hide_name = True
                size = 108, 20
            ]

            tag From187 {
                value = "VSC1_enable"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10784, 8056
                hide_name = True
                size = 108, 20
            ]

            tag From188 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10784, 7816
                hide_name = True
                size = 108, 20
            ]

            tag From189 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10784, 7864
                hide_name = True
                size = 108, 20
            ]

            tag From191 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10784, 7768
                hide_name = True
                size = 108, 20
            ]

            tag Goto153 {
                value = "V_REF_ALPHA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10608, 8072
                hide_name = True
                size = 108, 20
            ]

            tag Goto154 {
                value = "V_REF_BETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10608, 8120
                hide_name = True
                size = 108, 20
            ]

            tag From193 {
                value = "V_REF_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10784, 7576
                hide_name = True
                size = 108, 20
            ]

            tag From194 {
                value = "V_REF_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10784, 7624
                hide_name = True
                size = 108, 20
            ]

            tag From1955 {
                value = "GAMMA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10784, 7912
                hide_name = True
                size = 108, 20
            ]

            tag Goto155 {
                value = "GAMMA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9464, 7968
                hide_name = True
                size = 108, 20
            ]

            tag Goto156 {
                value = "SETTLING_TIME"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9464, 8024
                hide_name = True
                size = 108, 20
            ]

            tag Goto157 {
                value = "GAIN"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9464, 8080
                hide_name = True
                size = 108, 20
            ]

            tag Goto158 {
                value = "PHASE_SHIFT"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9464, 8136
                hide_name = True
                size = 108, 20
            ]

            tag From1957 {
                value = "GAIN"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10784, 7960
                hide_name = True
                size = 108, 20
            ]

            tag From1958 {
                value = "PHASE_SHIFT"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10784, 8008
                hide_name = True
                size = 108, 20
            ]

            tag From1966 {
                value = "IL1"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10784, 7672
                hide_name = True
                size = 108, 20
            ]

            tag From1967 {
                value = "MOD"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 11368, 7576
                hide_name = True
                size = 60, 20
            ]

            tag Goto159 {
                value = "GATE"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 11656, 7576
                hide_name = True
                size = 60, 20
            ]

            tag From1968 {
                value = "GATE"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9824, 6976
                rotation = right
                hide_name = True
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto146 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10000, 7528
                hide_name = True
                size = 108, 20
            ]

            tag From169 {
                value = "V_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9632, 7528
                hide_name = True
                size = 108, 20
            ]

            tag From170 {
                value = "V_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9632, 7608
                hide_name = True
                size = 108, 20
            ]

            tag From171 {
                value = "I_ALPHA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9632, 7688
                hide_name = True
                size = 108, 20
            ]

            tag From172 {
                value = "I_BETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9632, 7768
                hide_name = True
                size = 108, 20
            ]

            tag From173 {
                value = "Q0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7928
                hide_name = True
                size = 60, 20
            ]

            tag From174 {
                value = "P0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 7848
                hide_name = True
                size = 60, 20
            ]

            tag From175 {
                value = "STS_FB"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 8168
                hide_name = True
                size = 60, 20
            ]

            tag From179 {
                value = "VSC1_enable"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9608, 8248
                hide_name = True
                size = 60, 20
            ]

            tag Goto142 {
                value = "IL2_F"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10608, 7536
                hide_name = True
                size = 108, 20
            ]

            tag Goto143 {
                value = "VL_DROP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10608, 7728
                hide_name = True
                size = 108, 20
            ]

            tag From161 {
                value = "IL2_F"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10168, 7720
                hide_name = True
                size = 108, 20
            ]

            tag From143 {
                value = "IL2"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10168, 7528
                hide_name = True
                size = 108, 20
            ]

            tag From186 {
                value = "VL_DROP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10168, 7944
                hide_name = True
                size = 108, 20
            ]

            tag From184 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10168, 7896
                hide_name = True
                size = 108, 20
            ]

            tag Goto152 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10608, 7904
                hide_name = True
                size = 108, 20
            ]

            tag From192 {
                value = "V_REF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10168, 8096
                hide_name = True
                size = 108, 20
            ]

            junction Junction87 pe
            [
                position = 10232, 7056
            ]

            junction Junction88 pe
            [
                position = 10296, 7056
            ]

            junction Junction97 pe
            [
                position = 10232, 7248
            ]

            junction Junction104 pe
            [
                position = 10296, 7248
            ]

            junction Junction105 pe
            [
                position = 10568, 7248
            ]

            junction Junction81 sp
            [
                position = 8712, 7520
            ]

            junction Junction121 sp
            [
                position = 10528, 8120
            ]

            junction Junction122 sp
            [
                position = 10528, 8072
            ]

            junction Junction128 sp
            [
                position = 11104, 7552
            ]

            junction Junction113 sp
            [
                position = 9928, 7528
            ]

            junction Junction111 sp
            [
                position = 10512, 7728
            ]

            junction Junction115 sp
            [
                position = 10512, 7536
            ]

            junction Junction120 sp
            [
                position = 10520, 7904
            ]

            junction Junction129 sp
            [
                position = 10336, 8096
            ]

            comment Comment28 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">POWER SYSTEM</span> </p></body></html> ENDCOMMENT 
            [
                position = 10016, 6840
            ]

            comment Comment16 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">PHASE LOCKED LOOP</p></body></html> ENDCOMMENT 
            [
                position = 9200, 7456
            ]

            comment Comment23 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[0] = P0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[1] = Q0</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[2] = STS_STATUS   </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[3] = VSC1_ENABLE</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[4] = VSC2_ENABLE </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">OUT[5] = SHORT CIRCUIT </p></body></html> ENDCOMMENT 
            [
                position = 8608, 7824
            ]

            comment Comment24 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">HANDLE INFO INPUT</p></body></html> ENDCOMMENT 
            [
                position = 8640, 7456
            ]

            comment Comment36 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VOLTAGE CONTROLLER </p></body></html> ENDCOMMENT 
            [
                position = 10904, 7464
            ]

            comment Comment38 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">SOGI QSG</p></body></html> ENDCOMMENT 
            [
                position = 10400, 8008
            ]

            comment Comment39 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">MRAC PARAMETERS</p></body></html> ENDCOMMENT 
            [
                position = 9208, 7912
            ]

            comment Comment40 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">HARDWARE PWM</p></body></html> ENDCOMMENT 
            [
                position = 11440, 7464
            ]

            comment Comment41 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">CONTROL </span></p></body></html> ENDCOMMENT 
            [
                position = 9976, 7376
            ]

            comment Comment34 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER  </p></body></html> ENDCOMMENT 
            [
                position = 9752, 7464
            ]

            comment Comment30 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">LOW PASS FILTER</p></body></html> ENDCOMMENT 
            [
                position = 10384, 7464
            ]

            comment Comment32 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VIRTUAL IMPEDANCE</p></body></html> ENDCOMMENT 
            [
                position = 10368, 7648
            ]

            comment Comment37 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VOLTAGE REFERENCE</p></body></html> ENDCOMMENT 
            [
                position = 10368, 7832
            ]

            comment Comment42 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">MODULATION</span></p></body></html> ENDCOMMENT 
            [
                position = 11376, 7376
            ]

            connect R2.p_node C2.n_node as Connection553
            connect VC.out Goto13 as Connection499
            connect Vdc.p_node R3.n_node as Connection569
            connect IL1.out Goto10 as Connection713
            connect IL2.out Goto1 as Connection721
            connect IL1.n_node Junction87 as Connection726
            connect Junction87 C2.p_node as Connection727
            [
                breakpoints = 10232, 7056
            ]
            connect VC.p_node Junction88 as Connection729
            connect Junction88 Junction87 as Connection730
            connect IL2.p_node Junction88 as Connection731
            connect "GRID FORMING.neg_out" Vdc.n_node as Connection757
            connect R3.p_node "GRID FORMING.pos_out" as Connection758
            connect L6.p_node "GRID FORMING.a_in" as Connection788
            connect R2.n_node Junction97 as Connection789
            connect "GRID FORMING.b_in" Junction97 as Connection791
            connect Goto107 SOGI_QSG.OUT_V as Connection6532
            connect Goto108 SOGI_QSG.OUT_V_QUAD as Connection6533
            connect Goto109 SOGI_QSG.OUT_I as Connection6534
            connect SOGI_QSG.OUT_I_QUAD Goto110 as Connection6535
            connect Goto111 SOGI_QSG.OUT_OMEGA as Connection6536
            connect L6.n_node R4.p_node as Connection6768
            connect IL1.p_node R4.n_node as Connection6769
            connect IL2.n_node Meter.in as Connection6811
            connect Junction97 Junction104 as Connection6812
            [
                breakpoints = 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248; 10232, 7248
            ]
            connect Junction104 VC.n_node as Connection6813
            [
                breakpoints = 10296, 7248; 10296, 7248; 10296, 7248; 10296, 7248; 10296, 7248
            ]
            connect Meter.N Junction105 as Connection6814
            connect Junction104 Junction105 as Connection6816
            connect Meter.out "Core Coupling 2.a_in" as Connection6832
            connect "Core Coupling 2.a_out" L as Connection6833
            connect Junction105 "Core Coupling 2.b_in" as Connection6834
            connect "Core Coupling 2.b_out" N as Connection6835
            connect Product1.in Junction81 as Connection684
            connect Junction81 Product2.in as Connection685
            [
                breakpoints = 8712, 7520; 8712, 7592
            ]
            connect Constant9.out Junction81 as Connection686
            [
                breakpoints = 8600, 7520; 8712, 7520
            ]
            connect Product1.out Goto14 as Connection7040
            connect Product2.out Goto15 as Connection7042
            connect From188 VOLTAGE_CONTROLLER1.IN_D_SIN as Connection7059
            connect From189 VOLTAGE_CONTROLLER1.IN_D_COS as Connection7060
            connect THETA.in VOLTAGE_CONTROLLER1.OUT_THETA as Connection7107
            connect Goto154 Junction121 as Connection7091
            connect Junction121 SOGI_QSG1.OUT_V_QUAD as Connection7092
            connect REF_VC_BE.in Junction121 as Connection7093
            connect Goto153 Junction122 as Connection7094
            connect Junction122 SOGI_QSG1.OUT_V as Connection7095
            connect REF_VC_AL.in Junction122 as Connection7096
            connect Goto155 GAMMA.out as Connection7098
            connect Goto156 SETTLING_TIME.out as Connection7099
            connect Goto157 GAIN.out as Connection7100
            connect Goto158 PHASE_SHIFT.out as Connection7101
            connect From1955 VOLTAGE_CONTROLLER1.IN_GAMA as Connection7102
            connect From1957 VOLTAGE_CONTROLLER1.IN_GAIN as Connection7104
            connect From1958 VOLTAGE_CONTROLLER1.IN_PHASE_SHIFT as Connection7105
            connect REF_YW.in VOLTAGE_CONTROLLER1.OUT_YM as Connection7106
            connect From1966 VOLTAGE_CONTROLLER1.IN_IL1 as Connection7167
            connect From185 VOLTAGE_CONTROLLER1.IN_VC as Connection7168
            connect From191 VOLTAGE_CONTROLLER1.IN_IL2 as Connection7169
            connect From187 VOLTAGE_CONTROLLER1.IN_ENABLE as Connection7184
            connect From95 SOGI_QSG.IN_VGRID as Connection7185
            connect From96 SOGI_QSG.IN_IL2 as Connection7186
            connect REF_AUX.in VOLTAGE_CONTROLLER1.OUT_AUX as Connection7187
            connect From193 VOLTAGE_CONTROLLER1.IN_REF_ALPHA as Connection7190
            connect From194 VOLTAGE_CONTROLLER1.IN_REF_BETA as Connection7191
            connect "Bus Selector1.out" Product1.in1 as Connection7197
            [
                breakpoints = 8696, 7632; 8696, 7536
            ]
            connect "Bus Selector1.out1" Product2.in1 as Connection7198
            [
                breakpoints = 8712, 7648; 8712, 7608
            ]
            connect "Bus Selector1.out2" Goto18 as Connection7199
            connect "Bus Selector1.out3" Goto132 as Connection7200
            [
                breakpoints = 8712, 7680; 8712, 7696
            ]
            connect "Bus Selector1.out4" Goto149 as Connection7201
            [
                breakpoints = 8696, 7696; 8696, 7728
            ]
            connect "Bus Selector1.out5" Termination1.in as Connection7202
            [
                breakpoints = 8680, 7712; 8680, 7768
            ]
            connect "Bus Selector1.in" "Info in" as Connection7203
            connect VOLTAGE_CONTROLLER1.OUT_UV Junction128 as Connection7216
            connect Junction128 Goto150 as Connection7217
            connect REF_IL1.in Junction128 as Connection7218
            connect From1967 Modulation.Modulating as Connection7219
            connect Goto159 Modulation.Gate_Signals as Connection7220
            connect From1968 "GRID FORMING.s_ctrl" as Connection7221
            connect RT83.out DROOP_CONTROLLER2.IN_MICROGRID_STATUS as Connection6964
            connect RT83.in From175 as Connection6965
            connect RT81.out DROOP_CONTROLLER2.IN_Q0 as Connection6972
            connect RT81.in From173 as Connection6973
            connect RT80.out DROOP_CONTROLLER2.IN_P0 as Connection6974
            connect From174 RT80.in as Connection6975
            connect Goto146 Junction113 as Connection6982
            connect Junction113 DROOP_CONTROLLER2.OUT_V as Connection6983
            connect V.in Junction113 as Connection6984
            connect KV.out DROOP_CONTROLLER2.IN_KV as Connection6993
            connect KI.out DROOP_CONTROLLER2.IN_KI as Connection6994
            connect QF.in DROOP_CONTROLLER2.OUT_QF as Connection6996
            connect PF.in DROOP_CONTROLLER2.OUT_PF as Connection6997
            connect REF_P.in DROOP_CONTROLLER2.OUT_REF_P as Connection7024
            connect REF_Q.in DROOP_CONTROLLER2.OUT_REF_Q as Connection7025
            connect From179 RT85.in as Connection7029
            connect RT85.out DROOP_CONTROLLER2.IN_ENABLE as Connection7030
            connect VIRTUAL_IMPEDANCE.OUT_VL_DROP Junction111 as Connection6899
            connect Junction111 Goto143 as Connection6900
            connect VL_DROP.in Junction111 as Connection6901
            connect From161 VIRTUAL_IMPEDANCE.IN_IL2_PC as Connection6905
            connect VZ.out VIRTUAL_IMPEDANCE.IN_VIRTUAL_INDUCTANCE as Connection6906
            [
                breakpoints = 10328, 7776; 10328, 7736
            ]
            connect RT61.out LPF.in as Connection6895
            connect RT61.in From143 as Connection6896
            connect FC.out LPF.fc_input as Connection6912
            [
                breakpoints = 10320, 7584; 10320, 7544
            ]
            connect IL2_F.in Junction115 as Connection7011
            connect Junction115 LPF.out as Connection7012
            [
                breakpoints = 10512, 7536; 10512, 7536
            ]
            connect Goto142 Junction115 as Connection7013
            connect REF_VC1.in Junction120 as Connection7067
            connect Sum1.out Junction120 as Connection7069
            connect Goto152 Junction120 as Connection7070
            [
                breakpoints = 10520, 7904
            ]
            connect From184 Sum1.in as Connection7089
            connect From186 Sum1.in1 as Connection7090
            [
                breakpoints = 10336, 7944; 10336, 7912
            ]
            connect From192 "Rate Transition1.in" as Connection7228
            connect SOGI_QSG1.IN_VGRID Junction129 as Connection7230
            connect Junction129 REF_VC.in as Connection7231
            [
                breakpoints = 10336, 8096
            ]
            connect "Rate Transition1.out" Junction129 as Connection7232
            connect From169 "Rate Transition2.in" as Connection7233
            connect "Rate Transition2.out" DROOP_CONTROLLER2.IN_V_DIR as Connection7234
            connect From170 "Rate Transition3.in" as Connection7235
            connect "Rate Transition3.out" DROOP_CONTROLLER2.IN_V_QUAD as Connection7236
            connect From171 "Rate Transition4.in" as Connection7237
            connect "Rate Transition4.out" DROOP_CONTROLLER2.IN_I_DIR as Connection7238
            connect From172 "Rate Transition5.in" as Connection7239
            connect "Rate Transition5.out" DROOP_CONTROLLER2.IN_I_QUAD as Connection7240

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Press \"Ctrl+Enter\" to view the subsystem.</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images/inverter.svg")
                ENDCODE
            }
        }
        [
            position = 9536, 8032
            hide_name = True
            size = 72, 120
        ]

        component Subsystem VSC2 {
            layout = dynamic
            component "core/Resistor" Rd {
                resistance = "VSC1_RD"
            }
            [
                position = 9832, 7232
                rotation = right
            ]

            component "core/Voltage Measurement" VC {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 9896, 7232
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" I0 {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 9976, 7088
                size = 64, 32
            ]

            component "core/Inductor" Lf {
                inductance = "VSC1_LF"
                signal_access = "Inherit"
            }
            [
                position = 9560, 7088
            ]

            component "core/Voltage Source" V_DC {
                init_const_value = "VSC1_VDC"
            }
            [
                position = 9288, 7208
                rotation = right
            ]

            component "core/Capacitor" Cf {
                capacitance = "VSC1_C"
                signal_access = "Inherit"
            }
            [
                position = 9832, 7144
                rotation = right
            ]

            component "core/Current Measurement" IF {
                execution_rate = "TS_20KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Inherit"
            }
            [
                position = 9760, 7088
                size = 64, 32
            ]

            component "core/Resistor" Rbus {
                resistance = "1e-6"
            }
            [
                position = 9288, 7128
                rotation = right
            ]

            component "core/Single-phase Meter" Meter {
                enable_out = "False"
                execution_rate = "TS_20KHZ"
                fgrid = "60.0"
                n_cycles = "1"
            }
            [
                position = 10168, 7088
                size = 80, 80
            ]

            component "core/Single Phase Inverter" "GRID FORMING" {
                carr_ph_offset = "[0.0, 0.0]"
                carrier_freq = "20e3"
                ctrl_src = "Model"
                dynamic_ac_voltage = "True"
                execution_rate = "TS_01MHZ"
                fvd_def_method = "LUT"
                load_mode = "on either"
                signal_access = "Inherit"
            }
            [
                position = 9424, 7184
                size = 127, 256
            ]

            component "core/C function" SOGI_QSG {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;

// Current SOGI
struct SOGIqsg i_sogi;
float i_alpha = 0;
float i_beta = 0;
float i_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_20KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.6, 0.2);

// Current SOGI Variables
i_alpha = 0;
i_beta = 0;
i_freq = 60;
// Current SOGI Initialization
SOGIInit(&i_sogi, i_freq, 0.6, 0.2);
/*End code section*/"
                input_terminals = "real IN_VC;real IN_I0;"
                input_terminals_dimensions = "1;1"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
/***INPUT DESCRIPTION ***/

// IN_VC: Voltage over C_{f} capacitor
// IN_I0:  Current over L_{0} inductor

/*** CONTROL LAW ***/

// Compute SOGI + FLL for v_{c}
executeSOGI(&v_sogi, IN_VC, &v_alpha, &v_beta, &v_freq);

// Compute SOGI + FLL for i_{0}
executeSOGI(&i_sogi, IN_I0, &i_alpha, &i_beta, &i_freq);

// Handle Ouput
OUT_VC_AB0[0] = v_alpha;
OUT_VC_AB0[1] = v_beta;
OUT_I0_AB0[0] = i_alpha;
OUT_I0_AB0[1] = i_beta;
/*End code section*/"
                output_terminals = "real OUT_VC_AB0;real OUT_I0_AB0;"
                output_terminals_dimensions = "2;2"
                output_terminals_feedthrough = "True;True"
                output_terminals_show_labels = "False;False"
            }
            [
                position = 9928, 7552
                hide_name = True
                size = 48, 88
            ]

            component "core/Resistor" Rf {
                resistance = "VSC1_RF"
            }
            [
                position = 9656, 7088
            ]

            component "core/Single Phase Core Coupling" "Core Coupling 2" {
                snb_type_i = "R1-C1"
            }
            [
                position = 10264, 7184
                hide_name = True
                size = 12, 256
            ]

            component "core/Product" Product1 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 9120, 7608
                hide_name = True
            ]

            component "core/Product" Product2 {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 9120, 7688
                hide_name = True
            ]

            component "core/Constant" Constant9 {
                execution_rate = "TS_20KHZ"
                value = "VSC1_S"
            }
            [
                position = 8912, 7600
                hide_name = True
            ]

            component "core/C function" VOLTAGE_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Ressonant Controller Struct redeclaration
struct MRAC {
    // general
    float sampling_time;
    float gamma;
    float ts_times_gamma;

    // reference model W_{m}(z)
    float pole_0;
    float pole_1;
    float pole_2;
    // phase and gain correction for W_{m}(z)
    float rho;
    float phi;
    // recurrence equation gains
    float alpha0;
    float alpha1;
    float alpha2;
    float alpha3;
    float beta1;
    float beta2;
    float beta3;

    // augmented error
    float a_err_kminus1;

    // recurrence equation variables for y_{m} ==> Y(z)/R(z) = W_{m}(z)
    float ym_kminus1;
    float ym_kminus2;
    float ym_kminus3;

    // recurrence equation variables for v ==> V(z)/U_{bounded}(z) = W_{m}(z)
    float v_kminus1;
    float v_kminus2;
    float v_kminus3;
    float ub_kminus1;
    float ub_kminus2;
    float ub_kminus3;
    float ub_kminus4;

    // output boundary
    float u_boundary;

    // X[k-1]
    float x1_kminus1;
    float x2_kminus1;
    float x3_kminus1;
    float r_kminus1;
    float ds_kminus1;
    float dc_kminus1;
    // X[k-2]
    float x1_kminus2;
    float x2_kminus2;
    float x3_kminus2;
    float r_kminus2;
    float ds_kminus2;
    float dc_kminus2;
    // X[k-3]
    float x1_kminus3;
    float x2_kminus3;
    float x3_kminus3;
    float r_kminus3;
    float ds_kminus3;
    float dc_kminus3;

    // zeta[k]
    float zeta_x1;
    float zeta_x2;
    float zeta_x3;
    float zeta_u;
    float zeta_r;
    float zeta_ds;
    float zeta_dc;
    // zeta[k-1]
    float zeta_x1_kminus1;
    float zeta_x2_kminus1;
    float zeta_x3_kminus1;
    float zeta_u_kminus1;
    float zeta_r_kminus1;
    float zeta_ds_kminus1;
    float zeta_dc_kminus1;
    // zeta[k-2]
    float zeta_x1_kminus2;
    float zeta_x2_kminus2;
    float zeta_x3_kminus2;
    float zeta_u_kminus2;
    float zeta_r_kminus2;
    float zeta_ds_kminus2;
    float zeta_dc_kminus2;
    // zeta[k-3]
    float zeta_x1_kminus3;
    float zeta_x2_kminus3;
    float zeta_x3_kminus3;
    float zeta_u_kminus3;
    float zeta_r_kminus3;
    float zeta_ds_kminus3;
    float zeta_dc_kminus3;

    // theta[k]
    float theta_x1;
    float theta_x2;
    float theta_x3;
    float theta_u;
    float theta_r;
    float theta_ds;
    float theta_dc;
    // zeta[k-1]
    float theta_x1_kminus1;
    float theta_x2_kminus1;
    float theta_x3_kminus1;
    float theta_u_kminus1;
    float theta_r_kminus1;
    float theta_ds_kminus1;
    float theta_dc_kminus1;

    // normalization signal
    float inv_m2_kminus1;

    // teste
    float csi;
};

// MRAC variables
struct MRAC mrac;
float u = 0;
float ym = 0;

// Constants declaration
float TS_20KHZ = 0;
float OUTPUT_BOUNDARY = 0;

// Thetas
float theta0 = 0;
float theta1 = 0;
float theta2 = 0;
float theta3 = 0;
float theta4 = 0;
float theta5 = 0;
float theta6 = 0;

// W_{m} gains
float ALPHA0 = 0;
float ALPHA1 = 0;
float ALPHA2 = 0;
float ALPHA3 = 0;
float BETA1 = 0;
float BETA2 = 0;
float BETA3 = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_mrac.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_mrac.dll"
                execution_rate = "TS_20KHZ"
                h_file_path = "..\src\mrac.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\mrac.h"
                init_fnc = "/*Begin code section*/
// Auxiliary variables
TS_20KHZ = 0.00005;
OUTPUT_BOUNDARY = 500;

// MRAC variables
u = 0;
ym = 0;

// Thetas
theta0 = 0;
theta1 = 0;
theta2 = 0;
theta3 = 0;
theta4 = 0;
theta5 = 0;
theta6 = 0;

// W_{m} gains
ALPHA0 = +0.000000000000000e+00;
ALPHA1 = +0.000000000000000e+00;
ALPHA2 = +0.000000000000000e+00;
ALPHA3 = +3.429999999999999e-01;
BETA1 = -8.999999999999999e-01;
BETA2 = +2.700000000000000e-01;
BETA3 = -2.700000000000000e-02;

// MRAC initialization
initMRAC(&mrac, TS_20KHZ);
setBoundary(&mrac, OUTPUT_BOUNDARY);
setGamma(&mrac, 100);
setWmCoeffs(&mrac, ALPHA0, ALPHA1, ALPHA2, ALPHA3, BETA1, BETA2, BETA3);
/*End code section*/"
                input_terminals = "real IN_VC0_AB0;real IN_X;real IN_D_AB0;real IN_MRAC_PARAM;"
                input_terminals_dimensions = "2;3;2;3"
                input_terminals_feedthrough = "True;True;True;True"
                input_terminals_show_labels = "False;False;False;False"
                output_fnc = "/*Begin code section*/
/***INPUT DESCRIPTION ***/

// IN_VC0_AB0[0] =  v_{c0_{alpha}}
// IN_VC0_AB0[1] =  v_{c0_{beta}}

// IN_X[0] = i_{f}
// IN_X[1] = v_{c}
// IN_X[2] = i_{0}

// IN_D_AB0[0] = d_{sin}
// IN_D_AB0[1] = d_{cos}

//IN_MRAC_PARAM[0] = gamma
//IN_MRAC_PARAM[1] = 1.0 / rho_{m}
//IN_MRAC_PARAM[2] = theta_{m}

// IN_ENABLE: this converter status

/*** CONTROL LAW ***/

// Set MRAC Parameters according to SCADA inputs
setGamma(&mrac, IN_MRAC_PARAM[0]);
setGain(&mrac, IN_MRAC_PARAM[1]);
setPhaseShift(&mrac, IN_MRAC_PARAM[2]);
// MRAC controller computation
computeMRAC(&mrac, IN_VC0_AB0[0], IN_VC0_AB0[1], IN_X[0], IN_X[1], IN_X[2], IN_D_AB0[0], IN_D_AB0[1], &u, &ym);
// Get thetas
getTheta(&mrac, &theta0, &theta1, &theta2, &theta3, &theta4, &theta5, &theta6);
// Handle output
OUT_UV = u;
OUT_YM = ym;
OUT_THETA[0] = theta0;
OUT_THETA[1] = theta1;
OUT_THETA[2] = theta2;
OUT_THETA[3] = theta3;
OUT_THETA[4] = theta4;
OUT_THETA[5] = theta5;
OUT_THETA[6] = theta6;
/*End code section*/"
                output_terminals = "real OUT_UV;real OUT_YM;real OUT_THETA;"
                output_terminals_dimensions = "1;1;7"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "False;False;False"
            }
            [
                position = 10304, 7944
                hide_name = True
                size = 48, 224
            ]

            component "core/C function" SOGI_QSG1 {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_20KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.7, 0.3);
/*End code section*/"
                input_terminals = "real IN_VC0;"
                input_terminals_dimensions = "1"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "False"
                output_fnc = "/*Begin code section*/
/***INPUT DESCRIPTION ***/

// IN_VC0: voltage reference from primary control

/*** CONTROL LAW ***/

// Compute SOGI
executeSOGI(&v_sogi, IN_VC0, &v_alpha, &v_beta, &v_freq);
// Handle output
OUT_VC0_AB0[0] = v_alpha;
OUT_VC0_AB0[1] = v_beta;
/*End code section*/"
                output_terminals = "real OUT_VC0_AB0;"
                output_terminals_dimensions = "2"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10304, 7720
                hide_name = True
                size = 48, 80
            ]

            component "core/SCADA Input" GAMMA {
                def_value = "200"
                execution_rate = "TS_20KHZ"
                max = "1000"
                min = "1"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 9416, 7592
            ]

            component "core/SCADA Input" GAIN {
                def_value = "1"
                execution_rate = "TS_20KHZ"
                max = "3"
                min = "0.1"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 9416, 7648
            ]

            component "core/SCADA Input" PHASE_SHIFT {
                execution_rate = "TS_20KHZ"
                max = "1.57079632679"
                min = "-1.57079632679"
                signal_access = "Inherit"
                unit = ""
            }
            [
                position = 9416, 7704
            ]

            component "core/Bus Selector" "Bus Selector1" {
                signal_indexes = "[0,1]"
            }
            [
                position = 8992, 7688
                hide_name = True
            ]

            component Subsystem Modulation {
                layout = dynamic
                component "core/C function" Comparator {
                    arb_defs = "/*Begin code section*/

/*End code section*/"
                    execution_rate = "TS_01MHZ"
                    input_terminals = "real IN_MOD;real IN_CARRIER;"
                    input_terminals_dimensions = "1;1"
                    input_terminals_feedthrough = "True;True"
                    input_terminals_show_labels = "True;True"
                    output_fnc = "/*Begin code section*/
// Modulating  (0º) comparison with Carrier
if (+1.0 * IN_MOD > IN_CARRIER){
    OUT_G_S1 = 1;
    OUT_G_S2 = 0;
}else{
    OUT_G_S1 = 0;
    OUT_G_S2 = 1;
}

// Modulating  (180º) comparison with Carrier
if (-1.0 * IN_MOD > IN_CARRIER){
    OUT_G_S3 = 1;
    OUT_G_S4 = 0;
}else{
    OUT_G_S3 = 0;
    OUT_G_S4 = 1;
}
/*End code section*/"
                    output_terminals = "real OUT_G_S1;real OUT_G_S2;real OUT_G_S3;real OUT_G_S4;"
                    output_terminals_dimensions = "1;1;1;1"
                    output_terminals_feedthrough = "True;True;True;True"
                    output_terminals_show_labels = "False;False;False;False"
                }
                [
                    position = 7888, 8064
                    size = 176, 168
                ]

                component "core/Bus Join" "Bus Join1" {
                    execution_rate = "TS_01MHZ"
                    inputs = "4"
                }
                [
                    position = 8096, 8064
                    hide_name = True
                ]

                component "core/Triangular Wave Source" CARRIER {
                    execution_rate = "TS_01MHZ"
                    frequency = "20000"
                    max_val = "1"
                    min_val = "0"
                }
                [
                    position = 7632, 8128
                ]

                component "core/Gain" Gain1 {
                    gain = "VSC1_VDC"
                }
                [
                    position = 7728, 8128
                ]

                component "core/Rate Transition" "Rate Transition1" {
                    execution_rate = "TS_01MHZ"
                }
                [
                    position = 7728, 8000
                    hide_name = True
                    size = 32, 32
                ]

                port M {
                    position = auto:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7632, 8000
                ]

                port G {
                    position = right:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8200, 8064
                ]

                connect "Bus Join1.out" G as Connection25
                connect CARRIER.out Gain1.in as Connection63
                connect Gain1.out Comparator.IN_CARRIER as Connection64
                connect Comparator.OUT_G_S1 "Bus Join1.in" as Connection66
                [
                    breakpoints = 8032, 8000; 8032, 8040
                ]
                connect Comparator.OUT_G_S2 "Bus Join1.in1" as Connection67
                [
                    breakpoints = 8016, 8048; 8016, 8056
                ]
                connect "Bus Join1.in2" Comparator.OUT_G_S3 as Connection68
                [
                    breakpoints = 8056, 8072; 8016, 8072; 8016, 8080
                ]
                connect Comparator.OUT_G_S4 "Bus Join1.in3" as Connection69
                [
                    breakpoints = 8032, 8128; 8032, 8088
                ]
                connect M "Rate Transition1.in" as Connection70
                connect "Rate Transition1.out" Comparator.IN_MOD as Connection71
            }
            [
                position = 10608, 7552
                hide_name = True
                size = 48, 88
            ]

            component "core/C function" VIRTUAL_IMPEDANCE {
                add_src_path = "..\src"
                add_src_path_full = "C:\projetos\adaptive_single_phase_microgrid\src"
                arb_defs = "/*Begin code section*/
// Virtual Impedance Struct definition
struct VirtualImpedance
{
  // general
  float sampling_time;
  float resistance;
  float inductance;
  float zeta;
  float omega_pole;

  // recurrence equation gains
  float alpha0;
  float alpha1;
  float alpha2;
  float beta1;
  float beta2;

  // previous interest variables
  float current_kminus1;
  float current_kminus2;
  float voltage_kminus1;
  float voltage_kminus2;
};

// Virtual Impedance Constants
const float TS = 0.0001;
const float RESISTANCE = 1.0e-4;
const float INDUCTANCE = 1.5e-3;
const float ZETA = 1.0;
const float POLE = 9424.77796077;

// Struct declaration
struct VirtualImpedance vz;

// Virtual Impedance  Variables
float output = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_virtual_impedance.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_virtual_impedance.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\virtual_impedance.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\virtual_impedance.h"
                init_fnc = "/*Begin code section*/
// Struct initialization
initVirtualImpedance(&vz, TS, RESISTANCE, INDUCTANCE, ZETA, POLE);
// Virtual Impedance Variables
output = 0;
/*End code section*/"
                input_terminals = "real IN_I0;real IN_ZV_PARAM;"
                input_terminals_dimensions = "1;3"
                input_terminals_feedthrough = "True;True"
                input_terminals_show_labels = "False;False"
                output_fnc = "/*Begin code section*/
/***INPUT DESCRIPTION ***/

// IN_I0 = i_{0}

// IN_ZV_PARAM[0] = L_{v}
// IN_ZV_PARAM[1] = R_{v}
// IN_ZV_PARAM[2] = omega_{p}

/*** CONTROL LAW ***/

// Set Z_{V} according to SCADA input
setInductance(&vz, 1e-3*IN_ZV_PARAM[0]);
setResistance(&vz, 1e-3*IN_ZV_PARAM[1]);
setComplexPole(&vz, IN_ZV_PARAM[2]);

// Virtual Impedance computation
executeVirtualImpedance(&vz, IN_I0, &output);

// Handle Output
OUT_VL_DROP = output;
/*End code section*/"
                output_terminals = "real OUT_VL_DROP;"
                output_terminals_dimensions = "1"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 9928, 8136
                hide_name = True
                size = 48, 80
            ]

            component "core/Rate Transition" "Rate Transition1" {
                execution_rate = "TS_20KHZ"
            }
            [
                position = 10232, 7720
                hide_name = True
                size = 32, 32
            ]

            component "core/C function" TESTE {
                arb_defs = "/*Begin code section*/
float i0_rms = 0;
float k_zv = 0;
float v0 = 0;
float v0_bounded = 0;
/*End code section*/"
                execution_rate = "TS_10KHZ"
                init_fnc = "/*Begin code section*/
i0_rms = 0;
k_zv = 0;
v0 = 0;
v0_bounded = 0;
/*End code section*/"
                input_terminals = "real IN_V_DROOP;real IN_V_VIRTUAL;real IN_I0_AB0;"
                input_terminals_dimensions = "1;1;2"
                input_terminals_feedthrough = "True;True;True"
                input_terminals_show_labels = "False;False;False"
                output_fnc = "/*Begin code section*/
/***INPUT DESCRIPTION ***/

// IN_V_DROOP: voltage reference from droop

// IN_V_VIRTUAL: voltage drop across virtual impedance

// IN_I0_AB0[0] = i_{0_{alpha}}
// IN_I0_AB0[1] = i_{0_{beta}}

/*** CONTROL LAW ***/

// Compute RMS Value of i_{0}
i0_rms = (1.0/sqrt(2.0)) * sqrt(IN_I0_AB0[0]*IN_I0_AB0[0] + IN_I0_AB0[1]*IN_I0_AB0[1]);
// Limit i0_rms to 100 A_{rms}
if(i0_rms > 110)
    i0_rms = 110;

// Compute Z_{virtual} gain factor based on I_{0_{rms}}
k_zv = 1 + exp(0.1*(-100 + i0_rms));
k_zv = 1;

// Compute V_{0}
v0 = IN_V_DROOP - k_zv * IN_V_VIRTUAL;

// Execute output limitation function
v0_bounded = v0;
if( (v0*v0)/sqrt(v0*v0) > (220*1.5))
    v0_bounded = (220*1.5) * v0 / sqrt(v0*v0);

// Handle output
OUT_V0 = v0_bounded;
/*End code section*/"
                output_terminals = "real OUT_V0;"
                output_terminals_dimensions = "1"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10304, 7560
                hide_name = True
                size = 48, 112
            ]

            component "core/Bus Join" "Bus Join1" {
                inputs = "3"
            }
            [
                position = 9536, 7648
                hide_name = True
            ]

            component "core/SCADA Input" KV {
                unit = ""
            }
            [
                position = 9416, 7872
            ]

            component "core/SCADA Input" KI {
                unit = ""
            }
            [
                position = 9416, 7936
            ]

            component "core/Bus Join" "Bus Join2" {
            }
            [
                position = 9536, 7904
                hide_name = True
            ]

            component "core/SCADA Input" LV {
                def_value = "1.5"
                execution_rate = "TS_10KHZ"
                max = "10"
                min = "0"
                signal_access = "Inherit"
                unit = "mH"
            }
            [
                position = 9416, 8184
            ]

            component "core/SCADA Input" RV {
                def_value = "0.1"
                execution_rate = "TS_10KHZ"
                max = "10"
                min = "0"
                signal_access = "Inherit"
                unit = "mOhm"
            }
            [
                position = 9416, 8240
            ]

            component "core/SCADA Input" W0 {
                def_value = "5000"
                execution_rate = "TS_10KHZ"
                max = "20000"
                min = "500"
                signal_access = "Inherit"
                unit = "rad/s"
            }
            [
                position = 9416, 8296
            ]

            component "core/SCADA Input" FC {
                def_value = "800"
                execution_rate = "TS_10KHZ"
                max = "1000"
                min = "120"
                signal_access = "Inherit"
                unit = "Hz"
            }
            [
                position = 9416, 8128
            ]

            component "core/Bus Join" "Bus Join3" {
                inputs = "3"
            }
            [
                position = 9536, 8240
                hide_name = True
            ]

            component "core/Rate Transition" RT80 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9856, 7816
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" "Rate Transition2" {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9856, 7688
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" "Rate Transition3" {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9856, 7752
                hide_name = True
                size = 32, 32
            ]

            component "core/Bus Join" "Bus Join4" {
            }
            [
                position = 9216, 7648
                hide_name = True
            ]

            component "core/C function" DROOP_CONTROLLER {
                arb_defs = "/*Begin code section*/
// Constant definitions
const float VZERO = 220;
const float WZERO = 376.9911;
const float DELTA_V = 30;
const float DELTA_W = 18.8495559215;
const float TWOPI = 6.2831;
const float TS_10KHZ = 0.0001;
const float WC = 62.8318530718;
float POWER_ROC = 5;

// Structs redefinition
struct ImprovedDroop
{
    // general
    float sampling_time;

    // variables to implement first order low pass filter
    float cutoff_frequency;
    float phi1;
    float phi2;
    float phi3;
    // for active power
    float p_kminus1;
    float pf_kminus1;
    // for reactive power
    float q_kminus1;
    float qf_kminus1;

    // classical droop variables
    float p_max;
    float q_max;
    float p0;
    float q0;
    float v0;
    float w0;
    float m;
    float n;

    // improved droop variables
    float ki;
    float kv;
    float kq;

    // integrator variables
    float phi_integral;
    // for voltage integration
    float vin_kminus1;
    float vout_kminus1;
    // for frequency integration
    float w_kminus1;
    float theta_kminus1;
};

// Structs declaration
struct ImprovedDroop droop;

// Droop Controller variables
float v = 0;
float p = 0;
float q = 0;
float p_ref = 0;
float q_ref = 0;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_improved_droop.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_improved_droop.dll"
                execution_rate = "TS_10KHZ"
                h_file_path = "..\src\improved_droop.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\improved_droop.h"
                init_fnc = "/*Begin code section*/
// Droop constants
POWER_ROC = 5;
// Droop variables
v = 0;
p = 0;
q = 0;
p_ref = 0;
q_ref = 0;
// Controllers initialization
initDroop(&droop, TS_10KHZ, VZERO, WZERO, 15000, 15000, DELTA_V, DELTA_W, WC, 5, 5);
/*End code section*/"
                input_terminals = "real IN_VC_AB0;real IN_I0_AB0;real IN_S0;real IN_DROOP_PARAM;"
                input_terminals_dimensions = "2;2;2;2"
                input_terminals_feedthrough = "True;True;True;True"
                input_terminals_show_labels = "False;False;False;False"
                output_fnc = "/*Begin code section*/
/***INPUT DESCRIPTION ***/

// IN_VC_AB0[0] =  v_{c_{\alpha}}
// IN_VC_AB0[1] =  v_{c_{\beta}}

// IN_I0_AB0[0] =  i_{0_{\alpha}}
// IN_I0_AB0[1] =  i_{0_{\beta}}

// IN_S0[0] = p_{0}
// IN_S0[1] = q_{0}

//IN_MRAC_PARAM[0] = gamma
//IN_MRAC_PARAM[1] = 1.0 / rho_{m}
//IN_MRAC_PARAM[2] = theta_{m}

// IN_MICROGRID_STATUS: represents if the MG is in connected mode or island mode

// IN_ENABLE: this converter status

/*** CONTROL LAW ***/

// Set Droop parameters according to SCADA inputs
setKi(&droop, IN_DROOP_PARAM[0]);
setKv(&droop, IN_DROOP_PARAM[1]);
// Active power ramp
if(IN_S0[0]  > p_ref) p_ref += POWER_ROC;
if(IN_S0[0]  < p_ref) p_ref -= POWER_ROC;
// Reactive power ramp
if(IN_S0[1] > q_ref) q_ref += POWER_ROC;
if(IN_S0[1] < q_ref) q_ref -= POWER_ROC;
// Set new power reference
setP0(&droop, p_ref);
setQ0(&droop, q_ref);
// Droop controller execution
executeDroop(&droop, IN_VC_AB0[0], IN_VC_AB0[1], IN_I0_AB0[0], IN_I0_AB0[1], &v, &p, &q);
// Handle Output
OUT_V = v;
OUT_SF[0] = p;
OUT_SF[1] = q;
OUT_S0[0] = p_ref;
OUT_S0[1] = q_ref;
/*End code section*/"
                output_terminals = "real OUT_V;real OUT_SF;real OUT_S0;"
                output_terminals_dimensions = "1;2;2"
                output_terminals_feedthrough = "True;True;True"
                output_terminals_show_labels = "False;False;False"
            }
            [
                position = 9928, 7784
                hide_name = True
                size = 48, 248
            ]

            component "core/Advanced Low-Pass Filter" LPF {
                N = "2"
                apb = "3"
                execution_rate = "TS_10KHZ"
                fc = "300"
                fc_combo = "External"
                type_combo = "Butterworth"
            }
            [
                position = 9928, 7992
                hide_name = True
                size = 48, 48
            ]

            component "core/Rate Transition" RT61 {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 9856, 7984
                hide_name = True
                size = 32, 32
            ]

            component "core/Rate Transition" "Rate Transition4" {
                execution_rate = "TS_10KHZ"
            }
            [
                position = 10232, 7592
                hide_name = True
                size = 32, 32
            ]

            component "core/Bus Join" "Bus Join5" {
                inputs = "3"
            }
            [
                position = 9128, 7864
                hide_name = True
            ]

            component "core/Probe" SF {
            }
            [
                position = 10728, 7760
            ]

            component "core/Probe" V_ZV {
            }
            [
                position = 10728, 7928
            ]

            component "core/Probe" THETA {
            }
            [
                position = 10728, 8168
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" YM {
            }
            [
                position = 10728, 8112
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" VC0_AB0 {
            }
            [
                position = 10728, 8056
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" MOD {
            }
            [
                position = 10728, 8224
                rotation = down
                scale = -1, -1
            ]

            component "core/Probe" S0 {
            }
            [
                position = 10728, 7816
            ]

            component "core/Probe" E_TR {
            }
            [
                position = 10728, 8536
                rotation = down
                scale = -1, -1
            ]

            component "core/Sum" Sum1 {
                signs = "+-"
            }
            [
                position = 10624, 8536
                hide_name = True
            ]

            component "core/C function" RMS_YM {
                arb_defs = "/*Begin code section*/
float x = 0;
/*End code section*/"
                init_fnc = "/*Begin code section*/
x = 0;
/*End code section*/"
                input_terminals = "real IN;"
                input_terminals_dimensions = "2"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "False"
                output_fnc = "/*Begin code section*/
x = (1.0/sqrt(2.0)) * sqrt(IN[0]*IN[0] + IN[1]*IN[1]);

OUT = x;
/*End code section*/"
                output_terminals = "real OUT;"
                output_terminals_dimensions = "1"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10664, 8368
                size = 48, 48
            ]

            component "core/C function" SOGI_YM {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_20KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.7, 0.3);
/*End code section*/"
                input_terminals = "real IN_VC0;"
                input_terminals_dimensions = "1"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "False"
                output_fnc = "/*Begin code section*/
/***INPUT DESCRIPTION ***/

// IN_VC0: voltage reference from primary control

/*** CONTROL LAW ***/

// Compute SOGI
executeSOGI(&v_sogi, IN_VC0, &v_alpha, &v_beta, &v_freq);
// Handle output
OUT_VC0_AB0[0] = v_alpha;
OUT_VC0_AB0[1] = v_beta;
/*End code section*/"
                output_terminals = "real OUT_VC0_AB0;"
                output_terminals_dimensions = "2"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10592, 8368
                size = 48, 48
            ]

            component "core/Probe" YM_RMS {
            }
            [
                position = 10728, 8368
                rotation = down
                scale = -1, -1
            ]

            component "core/C function" RMS_VC {
                arb_defs = "/*Begin code section*/
float x = 0;
/*End code section*/"
                init_fnc = "/*Begin code section*/
x = 0;
/*End code section*/"
                input_terminals = "real IN;"
                input_terminals_dimensions = "2"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "False"
                output_fnc = "/*Begin code section*/
x = (1.0/sqrt(2.0)) * sqrt(IN[0]*IN[0] + IN[1]*IN[1]);

OUT = x;
/*End code section*/"
                output_terminals = "real OUT;"
                output_terminals_dimensions = "1"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10664, 8448
                size = 48, 48
            ]

            component "core/C function" SOGI_VC {
                arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;
/*End code section*/"
                dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
                dll_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\output\VHIL\lib_sogi_qsg.dll"
                execution_rate = "TS_20KHZ"
                h_file_path = "..\src\sogi_qsg.h"
                h_file_path_full = "C:\projetos\adaptive_single_phase_microgrid\src\sogi_qsg.h"
                init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.7, 0.3);
/*End code section*/"
                input_terminals = "real IN_VC0;"
                input_terminals_dimensions = "1"
                input_terminals_feedthrough = "True"
                input_terminals_show_labels = "False"
                output_fnc = "/*Begin code section*/
/***INPUT DESCRIPTION ***/

// IN_VC0: voltage reference from primary control

/*** CONTROL LAW ***/

// Compute SOGI
executeSOGI(&v_sogi, IN_VC0, &v_alpha, &v_beta, &v_freq);
// Handle output
OUT_VC0_AB0[0] = v_alpha;
OUT_VC0_AB0[1] = v_beta;
/*End code section*/"
                output_terminals = "real OUT_VC0_AB0;"
                output_terminals_dimensions = "2"
                output_terminals_feedthrough = "True"
                output_terminals_show_labels = "False"
            }
            [
                position = 10592, 8448
                size = 48, 48
            ]

            component "core/Probe" VC_RMS {
            }
            [
                position = 10728, 8448
                rotation = down
                scale = -1, -1
            ]

            port L {
                position = right:auto
                kind = pe
            }
            [
                position = 10320, 7088
                scale = -1, 1
            ]

            port N {
                position = right:auto
                kind = pe
            }
            [
                position = 10320, 7280
                scale = -1, 1
            ]

            port "Info in" {
                position = left:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 8912, 7688
                hide_name = True
            ]

            tag Goto1 {
                value = "I0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9976, 7008
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag Goto13 {
                value = "VC"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9976, 7232
                hide_name = True
                size = 60, 20
            ]

            tag Goto10 {
                value = "IF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9760, 7008
                rotation = left
                hide_name = True
                size = 60, 20
            ]

            tag From95 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 7528
                hide_name = True
                size = 60, 20
            ]

            tag From96 {
                value = "I0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 7576
                hide_name = True
                size = 60, 20
            ]

            tag Goto107 {
                value = "VC_AB0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10024, 7528
                hide_name = True
                size = 60, 20
            ]

            tag Goto150 {
                value = "MOD"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10400, 7856
                hide_name = True
                size = 60, 20
            ]

            tag From188 {
                value = "VC_AB0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10152, 7976
                hide_name = True
                size = 60, 20
            ]

            tag Goto153 {
                value = "VC0_AB0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10400, 7720
                hide_name = True
                size = 60, 20
            ]

            tag From193 {
                value = "VC0_AB0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10152, 7864
                hide_name = True
                size = 60, 20
            ]

            tag From1958 {
                value = "MRAC_PARAM"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10152, 8024
                hide_name = True
                size = 60, 20
            ]

            tag From1967 {
                value = "MOD"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 7552
                hide_name = True
                size = 60, 20
            ]

            tag Goto159 {
                value = "GATE"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10712, 7552
                hide_name = True
                size = 60, 20
            ]

            tag From1968 {
                value = "GATE"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9424, 7008
                rotation = right
                hide_name = True
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto146 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10024, 7680
                hide_name = True
                size = 60, 20
            ]

            tag Goto143 {
                value = "V_ZV"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10024, 8136
                hide_name = True
                size = 60, 20
            ]

            tag From161 {
                value = "I0_F"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 8120
                hide_name = True
                size = 60, 20
            ]

            tag From192 {
                value = "VC0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10152, 7720
                hide_name = True
                size = 60, 20
            ]

            tag From1977 {
                value = "STATES"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10152, 7912
                hide_name = True
                size = 60, 20
            ]

            tag From1979 {
                value = "V_ZV"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10152, 7560
                hide_name = True
                size = 60, 20
            ]

            tag From1980 {
                value = "V_DROOP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10152, 7528
                hide_name = True
                size = 60, 20
            ]

            tag Goto160 {
                value = "VC0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10400, 7560
                hide_name = True
                size = 60, 20
            ]

            tag Goto161 {
                value = "MRAC_PARAM"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9624, 7648
                hide_name = True
                size = 60, 20
            ]

            tag Goto162 {
                value = "DROOP_PARAM"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9624, 7904
                hide_name = True
                size = 60, 20
            ]

            tag Goto163 {
                value = "ZV_PARAM"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9624, 8240
                hide_name = True
                size = 60, 20
            ]

            tag Goto164 {
                value = "W_CP"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9624, 8128
                hide_name = True
                size = 60, 20
            ]

            tag From1985 {
                value = "ZV_PARAM"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 8152
                hide_name = True
                size = 60, 20
            ]

            tag Goto165 {
                value = "I0_AB0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10024, 7576
                hide_name = True
                size = 60, 20
            ]

            tag From169 {
                value = "VC_AB0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 7688
                hide_name = True
                size = 60, 20
            ]

            tag From170 {
                value = "I0_AB0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 7752
                hide_name = True
                size = 60, 20
            ]

            tag From174 {
                value = "S0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 7816
                hide_name = True
                size = 60, 20
            ]

            tag From1983 {
                value = "DROOP_PARAM"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 7880
                hide_name = True
                size = 60, 20
            ]

            tag Goto166 {
                value = "S0"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9304, 7648
                hide_name = True
                size = 60, 20
            ]

            tag Goto167 {
                value = "SF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10024, 7784
                hide_name = True
                size = 60, 20
            ]

            tag Goto168 {
                value = "SREF"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10024, 7888
                hide_name = True
                size = 60, 20
            ]

            tag Goto142 {
                value = "I0_F"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10024, 7992
                hide_name = True
                size = 60, 20
            ]

            tag From143 {
                value = "I0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 7984
                hide_name = True
                size = 60, 20
            ]

            tag From1984 {
                value = "W_CP"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9776, 8024
                hide_name = True
                size = 60, 20
            ]

            tag From1986 {
                value = "I0_AB0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10152, 7592
                hide_name = True
                size = 60, 20
            ]

            tag From1987 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9016, 7864
                hide_name = True
                size = 60, 20
            ]

            tag From1988 {
                value = "IF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9016, 7832
                hide_name = True
                size = 60, 20
            ]

            tag From1989 {
                value = "I0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 9016, 7896
                hide_name = True
                size = 60, 20
            ]

            tag Goto169 {
                value = "STATES"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 9216, 7864
                hide_name = True
                size = 60, 20
            ]

            tag From1990 {
                value = "SF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 7760
                hide_name = True
                size = 60, 20
            ]

            tag From1992 {
                value = "V_ZV"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 7928
                hide_name = True
                size = 60, 20
            ]

            tag Goto170 {
                value = "YM"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10400, 7944
                hide_name = True
                size = 60, 20
            ]

            tag Goto171 {
                value = "THETA"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 10400, 8032
                hide_name = True
                size = 60, 20
            ]

            tag From1993 {
                value = "YM"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8112
                hide_name = True
                size = 60, 20
            ]

            tag From1994 {
                value = "THETA"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8168
                hide_name = True
                size = 60, 20
            ]

            tag From1995 {
                value = "VC0_AB0"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8056
                hide_name = True
                size = 60, 20
            ]

            tag From1996 {
                value = "MOD"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8224
                hide_name = True
                size = 60, 20
            ]

            tag From1997 {
                value = "SREF"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 7816
                hide_name = True
                size = 60, 20
            ]

            tag From1998 {
                value = "YM"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8560
                hide_name = True
                size = 60, 20
            ]

            tag From1999 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8528
                hide_name = True
                size = 60, 20
            ]

            tag From2000 {
                value = "YM"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8368
                hide_name = True
                size = 60, 20
            ]

            tag From2001 {
                value = "VC"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 10512, 8448
                hide_name = True
                size = 60, 20
            ]

            junction Junction87 pe
            [
                position = 9832, 7088
            ]

            junction Junction88 pe
            [
                position = 9896, 7088
            ]

            junction Junction97 pe
            [
                position = 9832, 7280
            ]

            junction Junction104 pe
            [
                position = 9896, 7280
            ]

            junction Junction105 pe
            [
                position = 10168, 7280
            ]

            junction Junction81 sp
            [
                position = 9072, 7600
            ]

            comment Comment28 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:36pt; font-weight:696;">POWER SYSTEM</span></p></body></html> ENDCOMMENT 
            [
                position = 9584, 6864
            ]

            comment Comment16 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">SOGI-QSG + FLL </p></body></html> ENDCOMMENT 
            [
                position = 9832, 7464
            ]

            comment Comment23 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">OUT[0] = P0</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">OUT[1] = Q0</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">OUT[2] = SHORT CIRCUIT</span> </p></body></html> ENDCOMMENT 
            [
                position = 9040, 7504
            ]

            comment Comment24 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">HANDLE INFO INPUT</p></body></html> ENDCOMMENT 
            [
                position = 9032, 7464
            ]

            comment Comment36 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">MRAC CONTROLLER </p></body></html> ENDCOMMENT 
            [
                position = 10200, 7784
            ]

            comment Comment38 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">SOGI-QSG + FLL </p></body></html> ENDCOMMENT 
            [
                position = 10216, 7640
            ]

            comment Comment39 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">MRAC PARAMETERS</p></body></html> ENDCOMMENT 
            [
                position = 9440, 7464
            ]

            comment Comment40 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">HARDWARE PWM</p></body></html> ENDCOMMENT 
            [
                position = 10536, 7464
            ]

            comment Comment34 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER</p></body></html> ENDCOMMENT 
            [
                position = 9824, 7616
            ]

            comment Comment30 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">LOW PASS FILTER</p></body></html> ENDCOMMENT 
            [
                position = 9840, 7928
            ]

            comment Comment32 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VIRTUAL IMPEDANCE</p></body></html> ENDCOMMENT 
            [
                position = 9832, 8056
            ]

            comment Comment42 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">MODULATION</span></p></body></html> ENDCOMMENT 
            [
                position = 10480, 7376
            ]

            comment Comment43 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VOLTAGE REFERENCE</p></body></html> ENDCOMMENT 
            [
                position = 10184, 7464
            ]

            comment Comment44 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">SCADA INPUTS</span></p></body></html> ENDCOMMENT 
            [
                position = 9384, 7376
            ]

            comment Comment45 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">MRAC_PARAM[0] = gamma</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">MRAC_PARAM[1] = 1.0 / rho_{m}</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">MRAC_PARAM[2] = theta_{m}  </span> </p></body></html> ENDCOMMENT 
            [
                position = 9424, 7504
            ]

            comment Comment46 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP PARAMETERS </p></body></html> ENDCOMMENT 
            [
                position = 9440, 7760
            ]

            comment Comment47 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">DROOP_PARAM[0] = k_{i}</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">DROOP</span><span style=" font-size:9pt;">_PARAM[1] = </span><span style=" font-size:9pt;">k_{v}</span></p></body></html> ENDCOMMENT 
            [
                position = 9448, 7800
            ]

            comment Comment48 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Z_{V} PARAMETERS  </p></body></html> ENDCOMMENT 
            [
                position = 9448, 7976
            ]

            comment Comment49 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">ZV_PARAM[0] = omega_{cp)</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">ZV_PARAM[1] = L_{v}</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">ZV_PARAM[2] = R</span><span style=" font-size:9pt;">_{v}</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:9pt;">ZV_PARAM[3] = </span><span style=" font-size:9pt;">omega_{p)</span></p></body></html> ENDCOMMENT 
            [
                position = 9448, 8016
            ]

            comment Comment50 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">PRIMARY CONTROL</span></p></body></html> ENDCOMMENT 
            [
                position = 9720, 7376
            ]

            comment Comment51 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">INNER LOOP</span> </p></body></html> ENDCOMMENT 
            [
                position = 10152, 7376
            ]

            comment Comment52 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">AUXILIARY</span></p></body></html> ENDCOMMENT 
            [
                position = 9008, 7744
            ]

            comment Comment53 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">MGCC COMMANDS</span></p></body></html> ENDCOMMENT 
            [
                position = 8952, 7376
            ]

            comment Comment54 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:24pt; font-weight:696;">PROBES</span></p></body></html> ENDCOMMENT 
            [
                position = 10536, 7624
            ]

            comment Comment55 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER</p></body></html> ENDCOMMENT 
            [
                position = 10536, 7696
            ]

            comment Comment56 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VIRTUAL IMPEDANCE</p></body></html> ENDCOMMENT 
            [
                position = 10536, 7864
            ]

            comment Comment57 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">MRAC CONTROLLER </p></body></html> ENDCOMMENT 
            [
                position = 10544, 7976
            ]

            comment Comment58 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">ARTICLE</p></body></html> ENDCOMMENT 
            [
                position = 10584, 8288
            ]

            connect Rd.p_node Cf.n_node as Connection553
            connect VC.out Goto13 as Connection499
            connect V_DC.p_node Rbus.n_node as Connection569
            connect IF.out Goto10 as Connection713
            connect I0.out Goto1 as Connection721
            connect IF.n_node Junction87 as Connection726
            connect Junction87 Cf.p_node as Connection727
            [
                breakpoints = 9832, 7088
            ]
            connect VC.p_node Junction88 as Connection729
            connect Junction88 Junction87 as Connection730
            connect I0.p_node Junction88 as Connection731
            connect "GRID FORMING.neg_out" V_DC.n_node as Connection757
            connect Rbus.p_node "GRID FORMING.pos_out" as Connection758
            connect Lf.p_node "GRID FORMING.a_in" as Connection788
            connect Rd.n_node Junction97 as Connection789
            connect "GRID FORMING.b_in" Junction97 as Connection791
            connect Goto107 SOGI_QSG.OUT_VC_AB0 as Connection6532
            connect Lf.n_node Rf.p_node as Connection6768
            connect IF.p_node Rf.n_node as Connection6769
            connect I0.n_node Meter.in as Connection6811
            connect Junction97 Junction104 as Connection6812
            [
                breakpoints = 9832, 7280; 9832, 7280; 9832, 7280; 9832, 7280; 9832, 7280; 9832, 7280; 9832, 7280
            ]
            connect Junction104 VC.n_node as Connection6813
            [
                breakpoints = 9896, 7280; 9896, 7280; 9896, 7280; 9896, 7280; 9896, 7280
            ]
            connect Meter.N Junction105 as Connection6814
            connect Junction104 Junction105 as Connection6816
            connect Meter.out "Core Coupling 2.a_in" as Connection6832
            connect "Core Coupling 2.a_out" L as Connection6833
            connect Junction105 "Core Coupling 2.b_in" as Connection6834
            connect "Core Coupling 2.b_out" N as Connection6835
            connect Product1.in Junction81 as Connection684
            connect Junction81 Product2.in as Connection685
            [
                breakpoints = 9072, 7600; 9072, 7672
            ]
            connect Constant9.out Junction81 as Connection686
            [
                breakpoints = 8960, 7600; 9072, 7600
            ]
            connect From95 SOGI_QSG.IN_VC as Connection7185
            connect From96 SOGI_QSG.IN_I0 as Connection7186
            connect From193 VOLTAGE_CONTROLLER.IN_VC0_AB0 as Connection7190
            connect "Bus Selector1.in" "Info in" as Connection7203
            connect From1967 Modulation.M as Connection7219
            connect Goto159 Modulation.G as Connection7220
            connect From1968 "GRID FORMING.s_ctrl" as Connection7221
            connect From161 VIRTUAL_IMPEDANCE.IN_I0 as Connection6905
            connect From1977 VOLTAGE_CONTROLLER.IN_X as Connection7253
            connect From1980 TESTE.IN_V_DROOP as Connection7276
            connect From1979 TESTE.IN_V_VIRTUAL as Connection7277
            connect Goto160 TESTE.OUT_V0 as Connection7280
            connect "Rate Transition1.out" SOGI_QSG1.IN_VC0 as Connection7292
            connect "Rate Transition1.in" From192 as Connection7293
            connect "Bus Join1.out" Goto161 as Connection7307
            connect GAMMA.out "Bus Join1.in" as Connection7308
            [
                breakpoints = 9464, 7592; 9464, 7632
            ]
            connect GAIN.out "Bus Join1.in1" as Connection7309
            connect From1958 VOLTAGE_CONTROLLER.IN_MRAC_PARAM as Connection7311
            connect "Bus Join2.in" KV.out as Connection7312
            [
                breakpoints = 9464, 7896; 9464, 7880
            ]
            connect Goto162 "Bus Join2.out" as Connection7313
            connect "Bus Join2.in1" KI.out as Connection7314
            [
                breakpoints = 9464, 7912; 9464, 7936
            ]
            connect PHASE_SHIFT.out "Bus Join1.in2" as Connection7321
            [
                breakpoints = 9464, 7704; 9464, 7704; 9464, 7664
            ]
            connect Goto164 FC.out as Connection7326
            connect "Bus Join3.out" Goto163 as Connection7327
            connect RV.out "Bus Join3.in1" as Connection7328
            connect "Bus Join3.in" LV.out as Connection7329
            [
                breakpoints = 9464, 8224; 9464, 8184
            ]
            connect "Bus Join3.in2" W0.out as Connection7330
            [
                breakpoints = 9464, 8256; 9464, 8296
            ]
            connect From1985 VIRTUAL_IMPEDANCE.IN_ZV_PARAM as Connection7332
            connect Goto165 SOGI_QSG.OUT_I0_AB0 as Connection7333
            connect From174 RT80.in as Connection6975
            connect From169 "Rate Transition2.in" as Connection7233
            connect From170 "Rate Transition3.in" as Connection7235
            connect Product1.out "Bus Join4.in" as Connection7334
            [
                breakpoints = 9168, 7608; 9168, 7640
            ]
            connect "Bus Join4.in1" Product2.out as Connection7335
            [
                breakpoints = 9168, 7656; 9168, 7680
            ]
            connect Goto166 "Bus Join4.out" as Connection7336
            connect "Rate Transition2.out" DROOP_CONTROLLER.IN_VC_AB0 as Connection7338
            connect "Rate Transition3.out" DROOP_CONTROLLER.IN_I0_AB0 as Connection7339
            connect RT80.out DROOP_CONTROLLER.IN_S0 as Connection7340
            connect From1983 DROOP_CONTROLLER.IN_DROOP_PARAM as Connection7341
            connect Goto146 DROOP_CONTROLLER.OUT_V as Connection7344
            connect From188 VOLTAGE_CONTROLLER.IN_D_AB0 as Connection7345
            connect Goto168 DROOP_CONTROLLER.OUT_S0 as Connection7346
            connect Goto167 DROOP_CONTROLLER.OUT_SF as Connection7347
            connect Goto143 VIRTUAL_IMPEDANCE.OUT_VL_DROP as Connection7348
            connect RT61.in From143 as Connection6896
            connect RT61.out LPF.in as Connection7350
            connect From1984 LPF.fc_input as Connection7351
            connect Goto142 LPF.out as Connection7352
            connect Goto150 VOLTAGE_CONTROLLER.OUT_UV as Connection7358
            connect From1986 "Rate Transition4.in" as Connection7362
            connect "Rate Transition4.out" TESTE.IN_I0_AB0 as Connection7363
            connect Goto153 SOGI_QSG1.OUT_VC0_AB0 as Connection7364
            connect From1989 "Bus Join5.in2" as Connection7365
            [
                breakpoints = 9048, 7896; 9072, 7896; 9072, 7880
            ]
            connect From1987 "Bus Join5.in1" as Connection7366
            connect From1988 "Bus Join5.in" as Connection7367
            [
                breakpoints = 9072, 7832; 9072, 7848
            ]
            connect Goto169 "Bus Join5.out" as Connection7368
            connect From1990 SF.in as Connection7369
            connect From1992 V_ZV.in as Connection7371
            connect Goto171 VOLTAGE_CONTROLLER.OUT_THETA as Connection7372
            connect Goto170 VOLTAGE_CONTROLLER.OUT_YM as Connection7373
            connect From1993 YM.in as Connection7374
            connect From1994 THETA.in as Connection7375
            connect From1995 VC0_AB0.in as Connection7376
            connect From1996 MOD.in as Connection7377
            connect From1997 S0.in as Connection7381
            connect "Bus Selector1.out1" Product2.in1 as Connection7382
            connect "Bus Selector1.out" Product1.in1 as Connection7383
            [
                breakpoints = 9056, 7672; 9056, 7616
            ]
            connect From1999 Sum1.in as Connection7384
            connect From1998 Sum1.in1 as Connection7385
            [
                breakpoints = 10568, 8560; 10568, 8544
            ]
            connect Sum1.out E_TR.in as Connection7386
            connect From2000 SOGI_YM.IN_VC0 as Connection7387
            connect SOGI_YM.OUT_VC0_AB0 RMS_YM.IN as Connection7388
            connect YM_RMS.in RMS_YM.OUT as Connection7389
            connect From2001 SOGI_VC.IN_VC0 as Connection7390
            connect SOGI_VC.OUT_VC0_AB0 RMS_VC.IN as Connection7391
            connect VC_RMS.in RMS_VC.OUT as Connection7392

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Press \"Ctrl+Enter\" to view the subsystem.</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, "images/inverter.svg")
                ENDCODE
            }
        }
        [
            position = 8224, 8216
            hide_name = True
            size = 72, 120
        ]

        junction Junction4 pe
        [
            position = 8488, 8176
        ]

        junction Junction5 sp
        [
            position = 8792, 7952
        ]

        junction Junction7 pe
        [
            position = 8488, 7992
        ]

        junction Junction8 sp
        [
            position = 8168, 8032
        ]

        comment Comment19 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">GRID</p></body></html> ENDCOMMENT 
        [
            position = 9080, 8104
        ]

        comment Comment20 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">MGCC</p></body></html> ENDCOMMENT 
        [
            position = 8760, 8104
        ]

        comment Comment24 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">LOAD</p></body></html> ENDCOMMENT 
        [
            position = 8760, 8288
        ]

        comment Comment25 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VSC2</p></body></html> ENDCOMMENT 
        [
            position = 8192, 8288
        ]

        comment Comment26 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VSC1</p></body></html> ENDCOMMENT 
        [
            position = 8192, 8104
        ]

        comment Comment27 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">SHORT</p></body></html> ENDCOMMENT 
        [
            position = 8760, 8472
        ]

        connect R_grid.n_node L_grid.p_node as Connection32
        connect L_grid.n_node Grid.L as Connection44
        connect MGCC.Nug gnd4.node as Connection46
        connect R_VSC2.n_node L_VSC2.p_node as Connection49
        connect R_VSC1.n_node L_VSC1.p_node as Connection57
        connect Short.N gnd9.node as Connection83
        connect R_sc.n_node L_sc.p_node as Connection89
        connect L_sc.n_node Short.L as Connection90
        connect test_flag_fb.in test_flag.out as Connection111
        connect VSC1.L R_VSC1.p_node as Connection157
        connect VSC1.N gnd8.node as Connection158
        connect gnd3.node Load.N as Connection613
        connect L_load.n_node Load.L as Connection614
        connect R_load.n_node L_load.p_node as Connection683
        connect Junction4 R_load.p_node as Connection689
        [
            breakpoints = 8488, 8176; 8488, 8176; 8488, 8176; 8488, 8176; 8488, 8176
        ]
        connect R_sc.p_node Junction4 as Connection691
        connect "MGCC.Info out" Junction5 as Connection692
        connect Short.Info_in Junction5 as Connection694
        connect MGCC.Lg R_grid.p_node as Connection698
        connect MGCC.Ng Grid.N as Connection699
        connect L_VSC1.n_node Junction7 as Connection701
        connect Junction7 Junction4 as Connection702
        [
            breakpoints = 8488, 7992; 8488, 7992
        ]
        connect MGCC.Lug Junction7 as Connection703
        connect L_VSC2.n_node Junction4 as Connection832
        connect VSC2.L R_VSC2.p_node as Connection1174
        connect VSC2.N gnd7.node as Connection1175
        connect Junction5 Junction8 as Connection1176
        [
            breakpoints = 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8792, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8760, 7952; 8168, 7952
        ]
        connect Junction8 "VSC1.Info in" as Connection1177
        [
            breakpoints
        ]
        connect "VSC2.Info in" Junction8 as Connection1178
    }

    logically_deleted {
        "VSC_BACKUP_LQR"
        "VSC_BACKUP_MRAC"
        "VSC_BACKUP_FUNCTIONAL"
        "Comment25"
    }

    default {
        "core/Bus Join" {
            inputs = "2"
            execution_rate = "inherit"
        }

        "core/Bus Selector" {
            signal_indexes = "[0]"
            execution_rate = "inherit"
        }

        "core/Bus Split" {
            outputs = "2"
            execution_rate = "inherit"
        }

        "core/C function" {
            input_terminals = "real in;"
            input_terminals_show_labels = "False;"
            input_terminals_feedthrough = "True;"
            input_terminals_dimensions = "inherit;"
            output_terminals = "real out;"
            output_terminals_show_labels = "False;"
            output_terminals_feedthrough = "True;"
            output_terminals_dimensions = "inherit;"
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            library_load_type = "Compile-time load"
            dll_file_path = ""
            dll_file_path_full = ""
            arm_a9_file_path = ""
            arm_a9_file_path_full = ""
            arm_a53_file_path = ""
            arm_a53_file_path_full = ""
            h_file_path = ""
            h_file_path_full = ""
            add_src_path = ""
            add_src_path_full = ""
            convert_to_relative_dll = "True"
            convert_to_relative_a = "True"
            convert_to_relative_src = "True"
            arb_defs = ""
            add_macros = ""
            skip_pre_cmpl_check = "False"
            generate_for_hil = "True"
            execution_rate = "inherit"
            _supported_platforms = "[\'generic\']"
            refresh = "refresh"
        }

        "core/Capacitor" {
            signal_access = "inherit"
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        "core/Constant" {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
            _tunable = "False"
        }

        "core/Gain" {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            _tunable = "False"
            execution_rate = "inherit"
        }

        "core/Inductor" {
            signal_access = "inherit"
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        "core/Probe" {
            signal_access = "inherit"
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        "core/Product" {
            signs = "2"
            execution_rate = "inherit"
        }

        "core/Resistor" {
            resistance = "1"
            param_set = ""
        }

        "core/SCADA Input" {
            signal_access = "inherit"
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        "core/Signal switch" {
            criterion = "ctrl > threshold"
            threshold = "0.5"
            execution_rate = "inherit"
        }

        "core/Sum" {
            signs = "2"
            execution_rate = "inherit"
        }

        "core/Termination" {
            execution_rate = "inherit"
        }

        "core/Triangular Wave Source" {
            min_val = "-0.5"
            max_val = "0.5"
            frequency = "50"
            duty_cycle = "0.5"
            phase = "0"
            execution_rate = "100e-6"
            _tunable = "False"
        }

        "core/Voltage Source" {
            sig_input = "False"
            type = "signal generator"
            param_set = "1phase"
            parent_label = ""
            addr = "0"
            spc_nb = "0"
            execution_rate = "100e-6"
            cpd_visible = "True"
            enable_snb = "False"
            snb_type = "R2"
            R2 = "0.0"
            L1 = "0.1"
            override_signal_name = "False"
            signal_name = ""
            init_source_nature = "Constant"
            init_const_value = "0.0"
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        "core/Advanced Low-Pass Filter" {
            type_combo = "Chebyshev1"
            N = "5"
            fc_combo = "Internal"
            fc = "500"
            apb = "fc"
            asb = "40"
            ch_1 = "0"
            ch_2 = "0"
            ch_3 = "0"
            ep = "0"
            es = "0"
            Ke = "0"
            d0e = "0"
            Ne = "0"
            execution_rate = "10e-6"
            bode_plot = "Bode plot"
        }

        "core/Current Measurement" {
            signal_access = "inherit"
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Double Pole Single Throw Contactor" {
            signal_access = "inherit"
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/Rate Transition" {
            init_value = "0.0"
            execution_rate = "100e-6"
            _supported_platforms = "[\'generic\']"
        }

        "core/Signal Controlled Sinusoidal Voltage Source" {
            phase_number = "1"
            execution_rate = "inherit"
        }

        "core/Single Phase Core Coupling" {
            snb_type_i = "none"
            R1 = "100000.0"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "false"
            snb_type_u = "none"
            R2 = "0.1"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "false"
        }

        "core/Single Phase Inverter" {
            signal_access = "inherit"
            ctrl_src = "Digital input per switch"
            op_mode = "Fixed carrier frequency"
            carrier_freq = "10000.0"
            phase_op_mode = "Fixed carrier phase offset"
            carr_ph_offset = "[0.0, 180.0]"
            d_time = "5e-6"
            ref_sig_min_max = "[-1.0, 1.0]"
            load_mode = "on min"
            execution_rate = "inherit"
            Sa_top = "1"
            Sa_top_logic = "active high"
            Sa_bot = "2"
            Sa_bot_logic = "active high"
            Sb_top = "3"
            Sb_top_logic = "active high"
            Sb_bot = "4"
            Sb_bot_logic = "active high"
            Sa_top_I = "False"
            Sa_bot_I = "False"
            Sb_top_I = "False"
            Sb_bot_I = "False"
            losses_estimation = "False"
            fvd_def_method = "Voltage and Resistance"
            Import_igbt_xml = "not selected"
            Import_diode_xml = "not selected"
            Switch_type = "IGBT"
            Vce = "1.3"
            Rce = "0"
            Vd = "1.2"
            Rd = "0"
            i_sw = "[0.0, 6.0, 12.0, 18.0, 24.0]"
            v_sw = "[0.0, 600.0]"
            temp_sw = "[25.0, 50.0, 75.0, 100.0, 125.0]"
            vce_table_out = "[1.3, 1.3, 1.3, 1.3, 1.3]"
            vd_table_out = "[1.2, 1.2, 1.2, 1.2, 1.2]"
            et_on_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*3.8e-3, 0.4*3.8e-3, 0.8*3.8e-3, 0.68*3.8e-3, 0.9*3.8e-3], [0.65*3.8e-3, 0.9*3.8e-3, 1.2*3.8e-3, 1.5*3.8e-3, 1.7*3.8e-3], [0.9*3.8e-3, 1.3*3.8e-3, 1.7*3.8e-3, 1.9*3.8e-3, 2.25*3.8e-3], [1.1*3.8e-3, 1.7*3.8e-3, 2.1*3.8e-3, 2.3*3.8e-3, 2.5*3.8e-3]]"
            et_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.1e-3, 0.4*2.1e-3, 0.8*2.1e-3, 0.68*2.1e-3, 0.9*2.1e-3], [0.65*2.1e-3, 0.9*2.1e-3, 1.2*2.1e-3, 1.5*2.1e-3, 1.7*2.1e-3], [0.9*2.1e-3, 1.3*2.1e-3, 1.7*2.1e-3, 1.9*2.1e-3, 2.25*2.1e-3], [1.1*2.1e-3, 1.7*2.1e-3, 2.1*2.1e-3, 2.3*2.1e-3, 2.5*2.1e-3]]"
            ed_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.2e-3, 0.4*2.2e-3, 0.8*2.2e-3, 0.68*2.2e-3, 0.9*2.2e-3], [0.65*2.2e-3, 0.9*2.2e-3, 1.2*2.2e-3, 1.5*2.2e-3, 1.7*2.2e-3], [0.9*2.2e-3, 1.3*2.2e-3, 1.7*2.2e-3, 1.9*2.2e-3, 2.25*2.2e-3], [1.1*2.2e-3, 1.7*2.2e-3, 2.1*2.2e-3, 2.3*2.2e-3, 2.5*2.2e-3]]"
            temp_estimation = "False"
            thermal_networks_type = "Foster"
            switch_Rth = "[0.159, 0.133, 0.120, 0.038]"
            switch_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            switch_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            diode_Rth = "[0.159, 0.133, 0.120, 0.038]"
            diode_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            diode_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            loss_exec_rate = "100e-6"
            visualize_luts = "Visualize Lookup Tables"
            show_monitoring = "False"
            FSM_select = "converter"
            _control_property = "all high"
            switches_names_at_mask = "[]"
            pwm_enabling = "False"
            pwm_enable_di = "13"
            pwm_enable_inv = "active high"
            dtv_flag_en = "True"
            PESB_Optimization = "True"
            dynamic_ac_voltage = "False"
        }

        "core/Single Pole Single Throw Contactor" {
            signal_access = "inherit"
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
            switching = "any current"
            hide_int_meas = "False"
        }

        "core/Single phase PLL" {
            scheduling_mode = "Enable"
            offset_Hz = "55"
            delta_Hz_max = "10"
            vd_init = "200"
            angle_init = "0"
            k_SOGI = "0.4"
            kp_PLL_LOW = "4.81e3"
            kp_PLL_HIGH = "527"
            ki_PLL_LOW = "1.84e4"
            ki_PLL_HIGH = "2.22e3"
            kd_PLL_LOW = "-5.19"
            kd_PLL_HIGH = "-0.519"
            Tf_kd_PLL = "0.00108"
            fc_LPF_vd = "20"
            fc_LPF_wPLL = "100"
            fc_LPF_fPLL = "10"
            execution_rate = "inherit"
        }

        "core/Single-phase Meter" {
            fgrid = "0"
            n_cycles = "0"
            execution_rate = "100e-6"
            enable_out = "True"
        }

        "core/Single-phase Variable Load" {
            core_type = "Series"
            Vnom_rms = "230"
            fnom = "50"
            Snom = "1e3"
            pf_nom = "0.9"
            include_harmonic = "False"
            harmonic_list = "[1,3,5,7,9]"
            enable_ext_ref = "False"
            enable_outputs = "False"
            execution_rate = "100e-6"
            Z_ind_pu = "0.05"
            pf_snubber = "0.4"
        }

        "core/Voltage Measurement" {
            signal_access = "inherit"
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        # The Schematic API is imported as 'mdl'
        # To get the model file path, use 'mdl.get_model_file_path()'
        # To print information to the console, use info()
        
        # GENERAL
        V_RMS = 220;
        F_GRID = 60;
        OMEGA0 = 376.991118431;
        S_NOMINAL = 30000;
        
        # SAMPLING TIMES
        TS_01KHZ = 0.00100;
        TS_02KHZ = 0.00050;
        TS_05KHZ = 0.00020;
        TS_10KHZ = 0.00010;
        TS_20KHZ = 0.00005;
        TS_200KHZ = 0.000005;
        TS_01MHZ = 0.000001;
        
        # CONST VSC1
        VSC1_VDC = 500;
        VSC1_LF = 1e-3;
        VSC1_RF = 0.1;
        VSC1_C = 44e-6;
        VSC1_RD = 0.5;
        VSC1_S = 15000;
        VSC1_LINE_RESISTANCE = 10e-3;
        VSC1_LINE_INDUCTANCE = 20e-6;
        
        # CONST VSC2
        VSC2_LINE_RESISTANCE = 10e-3;
        VSC2_LINE_INDUCTANCE = 20e-6;
        
        # CONST LOAD
        LOAD_LINE_RESISTANCE = 10e-3;
        LOAD_LINE_INDUCTANCE = 20e-6;
        
        # CONST GRID
        GRID_LINE_RESISTANCE = 10e-3; #0.6420 * 0.2; # por km * %
        GRID_LINE_INDUCTANCE = 20e-6; #222e-6 * 0.2; # por km * %
        
        # CONST SHORT CIRCUIT
        SC_LINE_RESISTANCE = 10e-3;
        SC_LINE_INDUCTANCE = 20e-6;
        R_SC = 0.16133333333;
    ENDCODE
}
