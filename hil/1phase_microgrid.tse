version = 4.2

//
// Saved by sw version: 2024.1
//

model "1phase_microgrid" {
    configuration {
        hil_device = "HIL402"
        hil_configuration_id = 3
        simulation_method = exact
        simulation_time_step = 1e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = False
        reset_analog_outputs_on_sim_stop = True
        reset_analog_outputs_on_sim_stop_mode = Offset values
        reset_digital_outputs_on_sim_stop = True
        vhil_adio_loopback = False
        cpl_stb = True
        enb_dep_sw_detect = False
        code_section = "internal memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0001
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
        user_cpu_part_option = "default"
        matrix_based_reduction = True
        cpl_dynamics_analysis = False
        export_ss_to_pickle = False
        ground_scope_core = True
        dss_num_tol = 1e-15
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_directory = ""
        cce_custom_type_int = ""
        cce_custom_type_uint = ""
        cce_custom_type_real = ""
        tunable_params = "component defined"
        sp_compiler_type = "C compiler"
        sig_stim = "off"
        export_resource_list = ""
        export_dependency_list = ""
        excluded_resource_list = ""
        export_out_file = ""
        export_lock_top_level = True
        export_encrypt_library = True
        export_encrypt_resources = True
        dae_solver = "BDF"
        max_sim_step = 1e-4
        simulation_time = 1.0
        abs_tol = 1e-3
        rel_tol = 1e-3
        init_sim_step = 1e-6
        r_on_sw = 1e-3
        v_on_diode = 0.2
        data_sampling_rate = 0
        feedthrough_validation_error_level = error
    }

    component Subsystem Root {
        component "core/Single Phase Inverter" "VSC2 - GFL" {
            carrier_freq = "20e3"
            ctrl_src = "Internal modulator"
            d_time = "1e-6"
            dynamic_ac_voltage = "True"
            execution_rate = "TS_10KHZ"
            fvd_def_method = "LUT"
            load_mode = "on either"
            ref_sig_min_max = "[-100.0, 100.0]"
            signal_access = "Inherit"
        }
        [
            position = 8496, 8552
            size = 127, 256
        ]

        component "core/Voltage Source" VCC2 {
            init_const_value = "500"
        }
        [
            position = 8296, 8552
            rotation = right
        ]

        component Subsystem "VSC2 Filter" {
            layout = dynamic
            component "core/Inductor" L1 {
            }
            [
                position = 7952, 8120
            ]

            component "core/Resistor" R1 {
                resistance = "0.5"
            }
            [
                position = 8040, 8120
            ]

            component "core/Capacitor" C1 {
                capacitance = "44e-6"
                signal_access = "Inherit"
            }
            [
                position = 8208, 8312
                rotation = right
            ]

            component "core/Resistor" R2 {
                resistance = "0.5"
            }
            [
                position = 8488, 8120
            ]

            component "core/Voltage Measurement" vm_1 {
                execution_rate = "TS_10KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Public"
            }
            [
                position = 8312, 8288
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" am_1 {
                execution_rate = "TS_10KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Public"
            }
            [
                position = 8136, 8120
                size = 64, 32
            ]

            component "core/Inductor" L2 {
            }
            [
                position = 8392, 8120
            ]

            component "core/Current Measurement" am_2 {
                execution_rate = "TS_10KHZ"
                sig_output = "True"
                signal_access = "Public"
            }
            [
                position = 8592, 8120
                size = 64, 32
            ]

            component "core/Resistor" R3 {
                resistance = "0.5"
            }
            [
                position = 8208, 8200
                rotation = right
            ]

            port Vout+ {
                position = right:1
                kind = pe
            }
            [
                position = 8688, 8120
                rotation = down
            ]

            port Vin+ {
                position = left:1
                kind = pe
            }
            [
                position = 7872, 8120
            ]

            port Vin- {
                position = left:2
                kind = pe
                direction =  in
            }
            [
                position = 7872, 8384
            ]

            port i_l1 {
                position = auto:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8208, 8048
            ]

            port v_c {
                position = auto:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8376, 8288
            ]

            port Vout- {
                position = right:2
                kind = pe
            }
            [
                position = 8688, 8384
                rotation = down
            ]

            port i_l2 {
                position = auto:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8624, 8048
            ]

            junction Junction6 pe
            [
                position = 8312, 8384
            ]

            junction Junction7 pe
            [
                position = 8216, 8384
            ]

            junction Junction8 pe
            [
                position = 8312, 8120
            ]

            junction Junction9 pe
            [
                position = 8208, 8120
            ]

            connect R1.p_node L1.n_node as Connection6
            connect L1.p_node Vin+ as Connection53
            connect am_1.out i_l1 as Connection56
            [
                breakpoints = 8136, 8080
            ]
            connect vm_1.out v_c as Connection61
            connect R1.n_node am_1.p_node as Connection27
            connect vm_1.n_node Junction6 as Connection74
            connect Vout- Junction6 as Connection76
            connect Junction6 Junction7 as Connection87
            [
                breakpoints = 8312, 8384; 8312, 8384; 8272, 8384
            ]
            connect Junction7 Vin- as Connection88
            [
                breakpoints = 8216, 8384; 8216, 8384; 8208, 8384; 8216, 8384
            ]
            connect C1.n_node Junction7 as Connection89
            connect am_2.out i_l2 as Connection96
            [
                breakpoints = 8592, 8080
            ]
            connect vm_1.p_node Junction8 as Connection97
            connect L2.p_node Junction8 as Connection99
            connect L2.n_node R2.p_node as Connection100
            connect R2.n_node am_2.p_node as Connection101
            connect am_2.n_node Vout+ as Connection102
            connect Junction8 Junction9 as Connection104
            [
                breakpoints = 8312, 8120; 8312, 8120; 8312, 8120
            ]
            connect Junction9 am_1.n_node as Connection105
            [
                breakpoints = 8216, 8120
            ]
            connect R3.p_node Junction9 as Connection106
            connect R3.n_node C1.p_node as Connection107
        }
        [
            position = 8680, 8552
            size = 120, 224
        ]

        component "core/Resistor" RPV_VSC2 {
            resistance = "1e-9"
        }
        [
            position = 8352, 8456
            rotation = down
        ]

        component "core/Current Measurement" I_GRID {
            execution_rate = "TS_10KHZ"
            feed_forward = "true"
            sig_output = "True"
            signal_access = "Inherit"
        }
        [
            position = 9560, 8472
            rotation = down
            size = 64, 32
        ]

        component Subsystem GRID {
            layout = dynamic
            component "core/Inductor" L1 {
                inductance = "22e-6"
                signal_access = "Inherit"
            }
            [
                position = 8120, 8128
            ]

            component "core/Resistor" R1 {
                resistance = "0.0642"
            }
            [
                position = 8224, 8176
                rotation = right
            ]

            component "core/SCADA Input" Vrms {
                def_value = "220"
                execution_rate = "TS_10KHZ"
                max = "250"
                min = "0"
                signal_access = "Inherit"
                unit = "V"
            }
            [
                position = 8088, 8504
            ]

            component "core/Constant" Constant1 {
                execution_rate = "TS_10KHZ"
                value = "0"
            }
            [
                position = 8088, 8640
            ]

            component "core/Signal Controlled Sinusoidal Voltage Source" Vsp_sin1 {
            }
            [
                position = 8224, 8568
                size = 64, 80
            ]

            component "core/Constant" Constant2 {
                execution_rate = "TS_10KHZ"
                value = "60"
            }
            [
                position = 8088, 8568
            ]

            port L {
                position = left:1
                kind = pe
            }
            [
                position = 8000, 8128
            ]

            port N {
                position = left:2
                kind = pe
            }
            [
                position = 7992, 8800
            ]

            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">220 V single-phase grid</p></body></html> ENDCOMMENT 
            [
                position = 8048, 8840
            ]

            connect L1.p_node L as Connection4237
            connect L1.n_node R1.p_node as Connection4238
            connect Vsp_sin1.Ph Constant1.out as Connection498
            [
                breakpoints = 8176, 8592; 8176, 8640
            ]
            connect Vsp_sin1.Rms Vrms.out as Connection499
            [
                breakpoints = 8176, 8544; 8176, 8512
            ]
            connect Constant2.out Vsp_sin1.f as Connection504
            connect Vsp_sin1.p R1.n_node as Connection4239
            connect Vsp_sin1.n N as Connection4240
        }
        [
            position = 9712, 8576
            size = 112, 248
        ]

        component "core/Voltage Measurement" V_GRID {
            execution_rate = "TS_10KHZ"
            feed_forward = "true"
            sig_output = "True"
            signal_access = "Inherit"
        }
        [
            position = 9512, 8608
            rotation = right
            size = 64, 32
        ]

        component "core/Rate Transition" RT1 {
            execution_rate = "TS_10KHZ"
        }
        [
            position = 8344, 8352
            size = 32, 32
        ]

        component "core/Voltage Measurement" VPOI_VSC2 {
            execution_rate = "TS_10KHZ"
            feed_forward = "true"
            sig_output = "True"
            signal_access = "Inherit"
        }
        [
            position = 9016, 8608
            rotation = right
            size = 64, 32
        ]

        component "core/C function" SOGI_QSG_VSC2 {
            arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;

// Current SOGI
struct SOGIqsg i_sogi;
float i_alpha = 0;
float i_beta = 0;
float i_freq = 60;
/*End code section*/"
            dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
            dll_file_path_full = "C:/projetos/1phase_microgrid/output/VHIL/lib_sogi_qsg.dll"
            execution_rate = "TS_10KHZ"
            h_file_path = "..\src\sogi_qsg.h"
            h_file_path_full = "C:/projetos/1phase_microgrid/src/sogi_qsg.h"
            init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.2, 0.02);

// Current SOGI Variables
i_alpha = 0;
i_beta = 0;
i_freq = 60;
// Currente SOGI Initialization
SOGIInit(&i_sogi, i_freq, 0.6, 0.02);
/*End code section*/"
            input_terminals = "real IN_VGRID;real IN_IL2;"
            input_terminals_dimensions = "1;1"
            input_terminals_feedthrough = "True;True"
            input_terminals_show_labels = "False;False"
            output_fnc = "/*Begin code section*/
//Execução da Rotina do SOGI para a Tensão
executeSOGI(&v_sogi, IN_VGRID, &v_alpha, &v_beta, &v_freq);
//Execução da Rotina do SOGI para a Corrente
executeSOGI(&i_sogi, IN_IL2, &i_alpha, &i_beta, &i_freq);
//Atribuição dos valores as saídas do bloco
OUT_V = v_alpha;
OUT_V_QUAD = v_beta;
OUT_I = i_alpha;
OUT_I_QUAD = i_beta;
OUT_OMEGA = v_freq;
/*End code section*/"
            output_terminals = "real OUT_V;real OUT_V_QUAD;real OUT_I;real OUT_I_QUAD;real OUT_OMEGA;"
            output_terminals_dimensions = "1;1;1;1;1"
            output_terminals_feedthrough = "True;True;True;True;True"
            output_terminals_show_labels = "False;False;False;False;False"
        }
        [
            position = 8264, 9096
            size = 120, 312
        ]

        component "core/C function" RMS_CALCULATOR_VSC2 {
            arb_defs = "/*Begin code section*/
// CircularBuffer redeclaration
struct CircularBuffer{
  float *buff;
  int size;
  int start;
  int end;
  int count;
};

// RMSCalculator redeclaration
 struct RMSCalculator {
  struct CircularBuffer square_buffer;
  int size;
  float sum;
};

// Voltage RMSCalculator declaration
struct RMSCalculator v_rms_calc;
int v_size = 167; 
float v_rms = 0;
/*End code section*/"
            dll_file_path = "..\output\VHIL\lib_rms.dll"
            dll_file_path_full = "C:/projetos/1phase_microgrid/output/VHIL/lib_rms.dll"
            execution_rate = "TS_10KHZ"
            h_file_path = "..\src\rms.h"
            h_file_path_full = "C:/projetos/1phase_microgrid/src/rms.h"
            init_fnc = "/*Begin code section*/
// Voltage RMS Calculator Variable
v_size = 167; 
v_rms = 0;
// Voltage RMS Initialization
RMSCalculatorInit(&v_rms_calc, v_size);
/*End code section*/"
            input_terminals = "real IN_V;"
            input_terminals_dimensions = "inherit"
            input_terminals_feedthrough = "True"
            input_terminals_show_labels = "False"
            output_fnc = "/*Begin code section*/
// Voltage RMS Execution
add2RMSCalculator(&v_rms_calc, IN_V);
calculateRMSvalue(&v_rms_calc, &v_rms);

// Output values
OUT_V_RMS = v_rms;
/*End code section*/"
            output_terminals = "real OUT_V_RMS;"
            output_terminals_dimensions = "inherit"
            output_terminals_feedthrough = "True"
            output_terminals_show_labels = "False"
        }
        [
            position = 8264, 9496
            size = 120, 312
        ]

        component "core/C function" PI_CONTROLLER_VSC2 {
            arb_defs = "/*Begin code section*/
// PowerControl redeclaration
struct PowerControl {
  float p_ref;
  float q_ref;
  float last_p_error;
  float last_i_direct;
  float last_q_error;
  float last_i_quad;
  float last_pf_meas;
  float last_qf_meas;
  float last_p_meas;
  float last_q_meas;
};

// PowerControl variables
struct PowerControl pc;
float p_ref = 0;
float q_ref = 0;
float id = 0;
float iq = 0;
float p = 0;
float q = 0;
/*End code section*/"
            dll_file_path = "..\output\VHIL\lib_power_control.dll"
            dll_file_path_full = "C:/projetos/1phase_microgrid/output/VHIL/lib_power_control.dll"
            execution_rate = "TS_02KHZ"
            h_file_path = "..\src\power_control.h"
            h_file_path_full = "C:/projetos/1phase_microgrid/src/power_control.h"
            init_fnc = "/*Begin code section*/
// PowerControl variables
p_ref = 0;
q_ref = 0;
id = 0;
iq = 0;
p = 0;
q = 0;
// PowerControl initialization
PowerControlInit(&pc, 0, 0);
/*End code section*/"
            input_terminals = "real IN_V_DIR;real IN_V_QUAD;real IN_I_DIR;real IN_I_QUAD;real IN_PREF;real IN_QREF;real IN_ENABLE;"
            input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit"
            input_terminals_feedthrough = "True;True;True;True;True;True;True"
            input_terminals_show_labels = "False;False;False;False;False;False;False"
            output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // Active power ramp
    if(IN_PREF > p_ref) p_ref += 2;
    if(IN_PREF < p_ref) p_ref -= 2;
    // Reactive power ramp
    if(IN_QREF > q_ref) q_ref += 2;
    if(IN_QREF < q_ref) q_ref -= 2;
    // Redefine controller power reference
    setPQ(&pc, p_ref, q_ref);
    // Calculate Active and Reactive Power
    calculatePQ(&pc, IN_V_DIR, IN_V_QUAD, IN_I_DIR, IN_I_QUAD, &p, &q);
    // Execute Power Controller
    executePQControl(&pc, &id, &iq);
    // Output values
    OUT_I_DIR = (1*id)/(1.0);
    OUT_I_QUAD = (1*iq)/(1.0);
    OUT_P = p;
    OUT_Q = q;
}else{
    // Output values
    OUT_I_DIR = 0;
    OUT_I_QUAD = 0;
    OUT_P = 0;
    OUT_Q = 0;
}
/*End code section*/"
            output_terminals = "real OUT_I_DIR;real OUT_I_QUAD;real OUT_P;real OUT_Q;"
            output_terminals_dimensions = "inherit;inherit;inherit;inherit"
            output_terminals_feedthrough = "True;True;True;True"
            output_terminals_show_labels = "False;False;False;False"
        }
        [
            position = 8816, 9504
            size = 120, 440
        ]

        component "core/Rate Transition" RT3 {
            execution_rate = "TS_02KHZ"
        }
        [
            position = 8704, 9376
            size = 32, 32
        ]

        component "core/Rate Transition" RT4 {
            execution_rate = "TS_02KHZ"
        }
        [
            position = 8704, 9440
            size = 32, 32
        ]

        component "core/Rate Transition" RT5 {
            execution_rate = "TS_02KHZ"
        }
        [
            position = 8704, 9504
            size = 32, 32
        ]

        component "core/Rate Transition" RT6 {
            execution_rate = "TS_02KHZ"
        }
        [
            position = 8704, 9568
            size = 32, 32
        ]

        component "core/Rate Transition" RT7 {
            execution_rate = "TS_02KHZ"
        }
        [
            position = 8704, 9632
            size = 32, 32
        ]

        component "core/Rate Transition" RT8 {
            execution_rate = "TS_02KHZ"
        }
        [
            position = 8704, 9696
            size = 32, 32
        ]

        component "core/SCADA Input" SC_QREF_VSC2 {
            execution_rate = "TS_05KHZ"
            max = "5000"
            min = "-5000"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 7744, 9520
        ]

        component "core/SCADA Input" SC_PREF_VSC2 {
            execution_rate = "TS_05KHZ"
            max = "15000"
            min = "0"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 7744, 9456
        ]

        component "core/SCADA Input" SC_ENABLE_VSC2 {
            execution_rate = "TS_05KHZ"
            max = "5000"
            min = "-5000"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 7744, 9584
        ]

        component "core/C function" TRIG_FUNCTION_CALC_VSC2 {
            arb_defs = "/*Begin code section*/
// Normalization variables declaration
float peak_factor = 0;
/*End code section*/"
            execution_rate = "TS_10KHZ"
            init_fnc = "/*Begin code section*/
// Normalization variables
peak_factor = 0;
/*End code section*/"
            input_terminals = "real IN_V;real IN_V_QUAD;real IN_VRMS;"
            input_terminals_dimensions = "inherit;inherit;inherit"
            input_terminals_feedthrough = "True;True;True"
            input_terminals_show_labels = "False;False;False"
            output_fnc = "/*Begin code section*/
// Normalization routine execution
if(IN_VRMS <= 0)
{
    peak_factor = -1;
}else
{
    peak_factor = 1.0 / (IN_VRMS * 1.4142);
}

// Output values
OUT_SIN = (peak_factor * IN_V_QUAD);
OUT_COS = (peak_factor * IN_V);
/*End code section*/"
            output_terminals = "real OUT_SIN;real OUT_COS;"
            output_terminals_dimensions = "inherit;inherit"
            output_terminals_feedthrough = "True;True"
            output_terminals_show_labels = "False;False"
        }
        [
            position = 8264, 9904
            size = 120, 312
        ]

        component "core/C function" RESONANT_CONTROLLER_VSC2 {
            arb_defs = "/*Begin code section*/
// Ressonant Controller Struct redeclaration
struct ResonantController {
  float sampling_time;
  float kp;
  float zero_dumping;
  float pole_dumping;
  float omega0;
  float aux_4ts;
  float aux_a;
  float k1;
  float k2;
  float k3;
  float k4;
  float k5;
  float err_kminus1;
  float err_kminus2;
  float u_kminus1;
  float u_kminus2;
};

// ResonantController variables (1*60Hz)
struct ResonantController rc0;
float u0 = 0;
float ref0 = 0;
float err0 = 0;
// ResonantController variables (3*60Hz)
struct ResonantController rc3;
float u3 = 0;
float err3 = 0;
// ResonantController variables (5*60Hz)
struct ResonantController rc5;
float u5 = 0;
float err5 = 0;
// ResonantController variables (7*60Hz)
struct ResonantController rc7;
float u7 = 0;
float err7 = 0;
// ResonantController variables (9*60Hz)
struct ResonantController rc9;
float u9 = 0;
float err9 = 0;

// Constants declaration
float TWOPI = 0;
float omega0 = 0;
/*End code section*/"
            dll_file_path = "..\output\VHIL\lib_resonant_control.dll"
            dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_resonant_control.dll"
            execution_rate = "TS_10KHZ"
            h_file_path = "..\src\resonant_control.h"
            h_file_path_full = "C:\projetos\1phase_microgrid\src\resonant_control.h"
            init_fnc = "/*Begin code section*/
// Auxiliary variables
TWOPI = 6.2831;
omega0 = TWOPI * 60;

// ResonantController variables (60 Hz)
u0 = 0;
ref0 = 0;
err0 = 0;
// ResonantController variables (3*60 Hz)
u3 = 0;
err3 = 0;
// ResonantController variables (5*60 Hz)
u5 = 0;
err5 = 0;
// ResonantController variables (7*60 Hz)
u7 = 0;
err7 = 0;
// ResonantController variables (9*60 Hz)
u9 = 0;
err9 = 0;

// ResonantController initialization
resonantInit(&rc0, 0.11, 2.12, 0.000001, 1*omega0, 0.0001);
resonantInit(&rc3, 0.06, 2.12, 0.000001, 3*omega0, 0.0001);
resonantInit(&rc5, 0.05, 2.12, 0.000001, 5*omega0, 0.0001);
resonantInit(&rc7, 0.04, 2.12, 0.000001, 7*omega0, 0.0001);
resonantInit(&rc9, 0.03, 2.12, 0.000001, 9*omega0, 0.0001);
//resonantControlInitMatlab(&rc, 0.3211, -0.5996, 0.2789, -1.9986 , 1);
/*End code section*/"
            input_terminals = "real IN_I_DIR;real IN_I_QUAD;real IN_SIN;real IN_COS;real IN_IL2;real IN_ENABLE;"
            input_terminals_dimensions = "1;1;1;1;1;1"
            input_terminals_feedthrough = "True;True;True;True;True;True"
            input_terminals_show_labels = "False;False;False;False;False;False"
            output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    ref0 = (1.0/1.0)*(IN_I_DIR * IN_COS - IN_SIN * - IN_I_QUAD);
    //Executa a rotina de controle de corrente
    executeResonant(&rc0, ref0, IN_IL2, &u0, &err0);
    executeResonant(&rc3, ref0, IN_IL2, &u3, &err3);
    executeResonant(&rc5, ref0, IN_IL2, &u5, &err5);
    executeResonant(&rc7, ref0, IN_IL2, &u7, &err7);
    executeResonant(&rc9, ref0, IN_IL2, &u9, &err9);
    //Atribuiu os valores de saída do bloco
    OUT_PWMA = +(u0+u3+u5+u7+u9);
    OUT_PWMB = -(u0+u3+u5+u7+u9);
    OUT_REFERENCE = ref0;
    OUT_MEAS = IN_IL2;
    OUT_ERRO = err0;
}else{
    OUT_PWMA = 0;
    OUT_PWMB = 0;
    OUT_REFERENCE = 0;
    OUT_MEAS = 0;
    OUT_ERRO = 0;
}
/*End code section*/"
            output_terminals = "real OUT_PWMA;real OUT_PWMB;real OUT_REFERENCE;real OUT_MEAS;real OUT_ERRO;"
            output_terminals_dimensions = "1;1;1;1;inherit"
            output_terminals_feedthrough = "True;True;True;True;True"
            output_terminals_show_labels = "False;False;False;False;False"
        }
        [
            position = 9352, 9504
            size = 120, 440
        ]

        component "core/Rate Transition" RT9 {
            execution_rate = "TS_10KHZ"
        }
        [
            position = 9240, 9304
            size = 32, 32
        ]

        component "core/Rate Transition" RT10 {
            execution_rate = "TS_10KHZ"
        }
        [
            position = 9240, 9384
            size = 32, 32
        ]

        component "core/Rate Transition" RT15 {
            execution_rate = "TS_10KHZ"
        }
        [
            position = 9240, 9704
            size = 32, 32
        ]

        component "core/Probe" IL1_VSC2 {
        }
        [
            position = 9864, 9200
        ]

        component "core/Probe" IL2_VSC2 {
        }
        [
            position = 9864, 9272
        ]

        component "core/Probe" VC_VSC2 {
        }
        [
            position = 9864, 9344
        ]

        component "core/Probe" VRMS_VSC2 {
        }
        [
            position = 9864, 9424
        ]

        component "core/Probe" P_VSC2 {
        }
        [
            position = 9864, 9504
        ]

        component "core/Probe" Q_VSC2 {
        }
        [
            position = 9864, 9576
        ]

        component "core/Probe" REFERENCE_VSC2 {
        }
        [
            position = 9864, 9656
        ]

        component "core/Probe" PWMA_VSC2 {
        }
        [
            position = 9864, 9792
        ]

        component "core/Probe" PWMB_VSC2 {
        }
        [
            position = 9864, 9864
        ]

        component "core/SCADA Input" SC_ENABLE_GRID {
            execution_rate = "TS_05KHZ"
            max = "5000"
            min = "-5000"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 7712, 8176
        ]

        component "core/Rate Transition" RT16 {
            execution_rate = "TS_02KHZ"
        }
        [
            position = 8704, 9312
            size = 32, 32
        ]

        component "core/Probe" OMEGA_VSC2 {
        }
        [
            position = 10176, 9120
        ]

        component "core/Probe" VPOI_GRID {
        }
        [
            position = 9864, 9120
        ]

        component "core/Digital Probe" S_VSC2_FEEDBACK {
        }
        [
            position = 10160, 8264
        ]

        component "core/Digital Probe" S_GRID_FEEDBACK {
        }
        [
            position = 10160, 8128
        ]

        component "core/Probe" SIN_VSC2 {
        }
        [
            position = 10176, 9200
        ]

        component "core/Probe" COS_VSC2 {
        }
        [
            position = 10176, 9272
        ]

        component "core/Probe" V_QUAD_VSC2 {
        }
        [
            position = 10176, 9424
        ]

        component "core/Probe" V_VSC2 {
        }
        [
            position = 10176, 9344
        ]

        component "core/Probe" I_QUAD_VSC2 {
        }
        [
            position = 10176, 9576
        ]

        component "core/Probe" I_VSC2 {
        }
        [
            position = 10176, 9504
        ]

        component "core/Probe" IC_QUAD_VSC2 {
        }
        [
            position = 10176, 9728
        ]

        component "core/Probe" IC_DIR_VSC2 {
        }
        [
            position = 10176, 9656
        ]

        component "core/Probe" I_ERROR_VSC2 {
        }
        [
            position = 10176, 9792
        ]

        component "core/Probe" MEAS_VSC2 {
        }
        [
            position = 9864, 9728
        ]

        component "core/Single Phase Inverter" "VSC1 - GFM" {
            carrier_freq = "20e3"
            ctrl_src = "Internal modulator"
            d_time = "1e-6"
            dtv_flag_en = "False"
            dynamic_ac_voltage = "True"
            execution_rate = "TS_10KHZ"
            fvd_def_method = "LUT"
            load_mode = "on either"
            ref_sig_min_max = "[-1000.0, 1000.0]"
            signal_access = "Inherit"
        }
        [
            position = 8496, 7936
            size = 127, 256
        ]

        component "core/Voltage Source" VCC1 {
            init_const_value = "500"
        }
        [
            position = 8296, 7936
            rotation = right
        ]

        component Subsystem "VSC1 Filter" {
            layout = dynamic
            component "core/Inductor" L1 {
            }
            [
                position = 7952, 8120
            ]

            component "core/Resistor" R1 {
                resistance = "0.5"
            }
            [
                position = 8040, 8120
            ]

            component "core/Capacitor" C1 {
                capacitance = "44e-6"
                signal_access = "Inherit"
            }
            [
                position = 8208, 8312
                rotation = right
            ]

            component "core/Voltage Measurement" vm_1 {
                execution_rate = "TS_10KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Public"
            }
            [
                position = 8312, 8288
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" am_1 {
                execution_rate = "TS_10KHZ"
                feed_forward = "true"
                sig_output = "True"
                signal_access = "Public"
            }
            [
                position = 8136, 8120
                size = 64, 32
            ]

            component "core/Resistor" R3 {
                resistance = "0.5"
            }
            [
                position = 8208, 8200
                rotation = right
            ]

            port Vout+ {
                position = right:1
                kind = pe
            }
            [
                position = 8688, 8120
                rotation = down
            ]

            port Vin+ {
                position = left:1
                kind = pe
            }
            [
                position = 7872, 8120
            ]

            port Vin- {
                position = left:2
                kind = pe
                direction =  in
            }
            [
                position = 7872, 8384
            ]

            port i_l1 {
                position = auto:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8208, 8048
            ]

            port v_c {
                position = auto:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8376, 8288
            ]

            port Vout- {
                position = right:2
                kind = pe
            }
            [
                position = 8688, 8384
                rotation = down
            ]

            junction Junction6 pe
            [
                position = 8312, 8384
            ]

            junction Junction7 pe
            [
                position = 8216, 8384
            ]

            junction Junction9 pe
            [
                position = 8208, 8120
            ]

            junction Junction10 pe
            [
                position = 8312, 8120
            ]

            connect R1.p_node L1.n_node as Connection6
            connect L1.p_node Vin+ as Connection53
            connect am_1.out i_l1 as Connection56
            [
                breakpoints = 8136, 8080
            ]
            connect vm_1.out v_c as Connection61
            connect R1.n_node am_1.p_node as Connection27
            connect vm_1.n_node Junction6 as Connection74
            connect Vout- Junction6 as Connection76
            connect Junction6 Junction7 as Connection87
            [
                breakpoints = 8312, 8384; 8312, 8384; 8272, 8384
            ]
            connect Junction7 Vin- as Connection88
            [
                breakpoints = 8216, 8384; 8216, 8384; 8208, 8384; 8216, 8384
            ]
            connect C1.n_node Junction7 as Connection89
            connect Junction9 am_1.n_node as Connection105
            [
                breakpoints = 8216, 8120
            ]
            connect R3.p_node Junction9 as Connection106
            connect R3.n_node C1.p_node as Connection107
            connect vm_1.p_node Junction10 as Connection109
            connect Junction10 Junction9 as Connection110
            [
                breakpoints = 8312, 8120; 8312, 8120; 8312, 8120; 8312, 8120
            ]
            connect Vout+ Junction10 as Connection111
        }
        [
            position = 8680, 7936
            size = 120, 224
        ]

        component "core/Resistor" RPV_VSC1 {
            resistance = "1e-9"
        }
        [
            position = 8352, 7840
            rotation = down
        ]

        component "core/Rate Transition" RT17 {
            execution_rate = "TS_10KHZ"
        }
        [
            position = 8344, 7736
            size = 32, 32
        ]

        component "core/Digital Probe" S_VSC1_FEEDBACK {
        }
        [
            position = 10160, 8200
        ]

        component "core/Digital Probe" S_LOAD_FEEDBACK {
        }
        [
            position = 10160, 8336
        ]

        component "core/SCADA Input" SC_ENABLE_LOAD {
            execution_rate = "TS_05KHZ"
            max = "5000"
            min = "-5000"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 7712, 8248
        ]

        component "core/SCADA Input" SC_ENABLE_VSC1 {
            execution_rate = "TS_05KHZ"
            max = "5000"
            min = "-5000"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 7696, 6792
        ]

        component "core/SCADA Input" SC_QREF_VSC1 {
            execution_rate = "TS_05KHZ"
            max = "5000"
            min = "-5000"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 7696, 6936
        ]

        component "core/SCADA Input" SC_PREF_VSC1 {
            execution_rate = "TS_05KHZ"
            max = "15000"
            min = "0"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 7696, 6864
        ]

        component "core/C function" SOGI_QSG_VSC1 {
            arb_defs = "/*Begin code section*/
// Struct redeclaration  (HIL issue demand it to be redeclared)
struct SOGIqsg
{
  float w0;
  float last_alpha_signal;
  float last_beta_signal;
  float last_w_meas;
  float last_w;
  float proportional_gain;
  float fll_gain;
};

// Voltage SOGI
struct SOGIqsg v_sogi;
float v_alpha = 0;
float v_beta = 0;
float v_freq = 60;

// Current SOGI
struct SOGIqsg i_sogi;
float i_alpha = 0;
float i_beta = 0;
float i_freq = 60;
/*End code section*/"
            dll_file_path = "..\output\VHIL\lib_sogi_qsg.dll"
            dll_file_path_full = "C:/projetos/1phase_microgrid/output/VHIL/lib_sogi_qsg.dll"
            execution_rate = "TS_10KHZ"
            h_file_path = "..\src\sogi_qsg.h"
            h_file_path_full = "C:/projetos/1phase_microgrid/src/sogi_qsg.h"
            init_fnc = "/*Begin code section*/
// Voltage SOGI Variables
v_alpha = 0;
v_beta = 0;
v_freq = 60;
// Voltage SOGI Initialization
SOGIInit(&v_sogi, v_freq, 0.2, 0.02);

// Current SOGI Variables
i_alpha = 0;
i_beta = 0;
i_freq = 60;
// Currente SOGI Initialization
SOGIInit(&i_sogi, i_freq, 0.6, 0.02);
/*End code section*/"
            input_terminals = "real IN_VGRID;real IN_IL2;"
            input_terminals_dimensions = "1;1"
            input_terminals_feedthrough = "True;True"
            input_terminals_show_labels = "False;False"
            output_fnc = "/*Begin code section*/
//Execução da Rotina do SOGI para a Tensão
executeSOGI(&v_sogi, IN_VGRID, &v_alpha, &v_beta, &v_freq);
//Execução da Rotina do SOGI para a Corrente
executeSOGI(&i_sogi, IN_IL2, &i_alpha, &i_beta, &i_freq);
//Atribuição dos valores as saídas do bloco
OUT_V = v_alpha;
OUT_V_QUAD = v_beta;
OUT_I = i_alpha;
OUT_I_QUAD = i_beta;
OUT_OMEGA = v_freq;
/*End code section*/"
            output_terminals = "real OUT_V;real OUT_V_QUAD;real OUT_I;real OUT_I_QUAD;real OUT_OMEGA;"
            output_terminals_dimensions = "1;1;1;1;1"
            output_terminals_feedthrough = "True;True;True;True;True"
            output_terminals_show_labels = "False;False;False;False;False"
        }
        [
            position = 8264, 6448
            size = 120, 312
        ]

        component "core/C function" RMS_CALCULATOR_VSC1 {
            arb_defs = "/*Begin code section*/
// CircularBuffer redeclaration
struct CircularBuffer{
  float *buff;
  int size;
  int start;
  int end;
  int count;
};

// RMSCalculator redeclaration
 struct RMSCalculator {
  struct CircularBuffer square_buffer;
  int size;
  float sum;
};

// Voltage RMSCalculator declaration
struct RMSCalculator v_rms_calc;
int v_size = 167; 
float v_rms = 0;
/*End code section*/"
            dll_file_path = "..\output\VHIL\lib_rms.dll"
            dll_file_path_full = "C:/projetos/1phase_microgrid/output/VHIL/lib_rms.dll"
            execution_rate = "TS_10KHZ"
            h_file_path = "..\src\rms.h"
            h_file_path_full = "C:/projetos/1phase_microgrid/src/rms.h"
            init_fnc = "/*Begin code section*/
// Voltage RMS Calculator Variable
v_size = 167; 
v_rms = 0;
// Voltage RMS Initialization
RMSCalculatorInit(&v_rms_calc, v_size);
/*End code section*/"
            input_terminals = "real IN_V;"
            input_terminals_dimensions = "inherit"
            input_terminals_feedthrough = "True"
            input_terminals_show_labels = "False"
            output_fnc = "/*Begin code section*/
// Voltage RMS Execution
add2RMSCalculator(&v_rms_calc, IN_V);
calculateRMSvalue(&v_rms_calc, &v_rms);

// Output values
OUT_V_RMS = v_rms;
/*End code section*/"
            output_terminals = "real OUT_V_RMS;"
            output_terminals_dimensions = "inherit"
            output_terminals_feedthrough = "True"
            output_terminals_show_labels = "False"
        }
        [
            position = 8264, 6848
            size = 120, 312
        ]

        component "core/C function" TRIG_FUNCTION_CALC_VSC1 {
            arb_defs = "/*Begin code section*/
// Normalization variables declaration
float peak_factor = 0;
/*End code section*/"
            execution_rate = "TS_10KHZ"
            init_fnc = "/*Begin code section*/
// Normalization variables
peak_factor = 0;
/*End code section*/"
            input_terminals = "real IN_V;real IN_V_QUAD;real IN_VRMS;"
            input_terminals_dimensions = "inherit;inherit;inherit"
            input_terminals_feedthrough = "True;True;True"
            input_terminals_show_labels = "False;False;False"
            output_fnc = "/*Begin code section*/
// Normalization routine execution
if(IN_VRMS <= 0)
{
    peak_factor = -1;
}else
{
    peak_factor = 1.0 / (IN_VRMS * 1.4142);
}

// Output values
OUT_SIN = (peak_factor * IN_V_QUAD);
OUT_COS = (peak_factor * IN_V);
/*End code section*/"
            output_terminals = "real OUT_SIN;real OUT_COS;"
            output_terminals_dimensions = "inherit;inherit"
            output_terminals_feedthrough = "True;True"
            output_terminals_show_labels = "False;False"
        }
        [
            position = 8264, 7256
            size = 120, 312
        ]

        component "core/C function" VOLTAGE_CONTROLLER_VSC1 {
            arb_defs = "/*Begin code section*/
// Ressonant Controller Struct redeclaration
struct ResonantController {
  float sampling_time;
  float kp;
  float zero_dumping;
  float pole_dumping;
  float omega0;
  float aux_4ts;
  float aux_a;
  float k1;
  float k2;
  float k3;
  float k4;
  float k5;
  float err_kminus1;
  float err_kminus2;
  float u_kminus1;
  float u_kminus2;
};

// ResonantController variables (1*60Hz)
struct ResonantController rc0;
float u0 = 0;
float ref0 = 0;
float err0 = 0;
float theta0 = 0;

// Constants declaration
float TWOPI = 0;
float omega0 = 0;
float TS_05KHZ = 0;
float SQRT2 = 0;
/*End code section*/"
            dll_file_path = "..\output\VHIL\lib_resonant_control.dll"
            dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_resonant_control.dll"
            execution_rate = "TS_05KHZ"
            h_file_path = "..\src\resonant_control.h"
            h_file_path_full = "C:\projetos\1phase_microgrid\src\resonant_control.h"
            init_fnc = "/*Begin code section*/
// Auxiliary variables
TWOPI = 6.2831;
omega0 = TWOPI * 60;
TS_05KHZ = 0.0002;
SQRT2 = 1.41421356237;

// ResonantController variables (1*60 Hz)
u0 = 0;
ref0 = 0;
err0 = 0;
theta0 = 0;

// ResonantController initialization
resonantControlInitMatlab(&rc0, 0.04805, -0.08974, 0.04195, -1.994, 0.9998);
//resonantControlInitMatlab(&rc0, 0.03461, -0.06382, 0.02939, -1.994, 1);
/*End code section*/"
            input_terminals = "real IN_V_REF;real IN_OMEGA_REF;real IN_VC;real IN_ENABLE;real IN_VGRID;real IN_MICROGRID_STATUS;"
            input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit"
            input_terminals_feedthrough = "True;True;True;True;True;True"
            input_terminals_show_labels = "False;False;False;False;False;False"
            output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // Angle generation for sin calculation
    theta0 = TS_05KHZ * IN_OMEGA_REF + theta0;
    if (theta0 >= TWOPI)
        theta0 -= TWOPI;
    // Reference for Voltage Control
    ref0 = SQRT2 * IN_V_REF * sin(theta0);
    // Resonant controller execution
    executeResonant(&rc0, ref0, IN_VC, &u0, &err0);
    // Output values
    OUT_V_CTRL = u0;
    OUT_V_REF_CTRL = ref0;
}else{
    // Output values
    OUT_V_CTRL = 0;
    OUT_V_REF_CTRL = 0;
}
/*End code section*/"
            output_terminals = "real OUT_V_CTRL;real OUT_V_REF_CTRL;"
            output_terminals_dimensions = "inherit;inherit"
            output_terminals_feedthrough = "True;True"
            output_terminals_show_labels = "False;False"
        }
        [
            position = 9488, 6840
            size = 120, 440
        ]

        component "core/Rate Transition" RT18 {
            execution_rate = "TS_05KHZ"
        }
        [
            position = 9376, 6720
            size = 32, 32
        ]

        component "core/Rate Transition" RT19 {
            execution_rate = "TS_05KHZ"
        }
        [
            position = 9376, 6800
            size = 32, 32
        ]

        component "core/Rate Transition" RT21 {
            execution_rate = "TS_05KHZ"
        }
        [
            position = 9376, 6960
            size = 32, 32
        ]

        component "core/Rate Transition" RT22 {
            execution_rate = "TS_05KHZ"
        }
        [
            position = 9376, 7040
            size = 32, 32
        ]

        component "core/Rate Transition" RT24 {
            execution_rate = "TS_05KHZ"
        }
        [
            position = 9376, 6640
            size = 32, 32
        ]

        component "core/Constant" ZERO {
            execution_rate = "TS_10KHZ"
            value = "0"
        }
        [
            position = 9232, 7040
        ]

        component "core/C function" CURRENT_CONTROLLER_VSC1 {
            arb_defs = "/*Begin code section*/
// Proportional Controller Variables
float err = 0;
float u = 0;
float KP = 0;
/*End code section*/"
            execution_rate = "TS_10KHZ"
            init_fnc = "/*Begin code section*/
// Proportional Controller Variables
err = 0;
u = 0;
KP = 0;
/*End code section*/"
            input_terminals = "real IN_UV;real IN_IL1;real IN_ENABLE;real IN_MICROGRID_STATUS;"
            input_terminals_dimensions = "inherit;inherit;inherit;inherit"
            input_terminals_feedthrough = "True;True;True;True"
            input_terminals_show_labels = "False;False;False;False"
            output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    err = IN_UV - IN_IL1;
    u = 20 * err;
    // Output values
    OUT_PWMA = +u;
    OUT_PWMB = -u;
}else{
    // Output values
    OUT_PWMA = 0;
    OUT_PWMB = 0;
}
/*End code section*/"
            output_terminals = "real OUT_PWMA;real OUT_PWMB;"
            output_terminals_dimensions = "inherit;inherit"
            output_terminals_feedthrough = "True;True"
            output_terminals_show_labels = "False;False"
        }
        [
            position = 10048, 6840
            size = 120, 440
        ]

        component "core/Rate Transition" RT27 {
            execution_rate = "TS_10KHZ"
        }
        [
            position = 9936, 6904
            size = 32, 32
        ]

        component "core/Rate Transition" RT29 {
            execution_rate = "TS_10KHZ"
        }
        [
            position = 9936, 7032
            size = 32, 32
        ]

        component "core/Constant" ZERO1 {
            execution_rate = "TS_01KHZ"
            value = "0"
        }
        [
            position = 9792, 7032
        ]

        component "core/Rate Transition" RT30 {
            execution_rate = "TS_10KHZ"
        }
        [
            position = 9936, 6648
            size = 32, 32
        ]

        component "core/Single Phase TLM Core Coupling" "Core Coupling 1" {
            inductance = "0.3333333e-3"
        }
        [
            position = 9304, 8224
            rotation = right
            size = 12, 256
        ]

        component "core/Core Marker" "Core Marker2" {
            marker_id = "id1"
        }
        [
            position = 9144, 8424
        ]

        component "core/Core Marker" "Core Marker1" {
        }
        [
            position = 9120, 7808
        ]

        component "core/Probe" VC_VSC1 {
        }
        [
            position = 10584, 6792
        ]

        component "core/Probe" VRMS_VSC1 {
        }
        [
            position = 10584, 6864
        ]

        component "core/Probe" UV_VSC1 {
        }
        [
            position = 10584, 6936
        ]

        component "core/Probe" PWMA_VSC1 {
        }
        [
            position = 10896, 6712
        ]

        component "core/Probe" IL1_VSC1 {
        }
        [
            position = 10584, 6712
        ]

        component "core/Probe" PWMB_VSC1 {
        }
        [
            position = 10896, 6792
        ]

        component "core/Probe" VREF_VSC1 {
        }
        [
            position = 10584, 7016
        ]

        component "core/SCADA Input" SC_P_LOAD {
            execution_rate = "TS_05KHZ"
            max = "1"
            min = "0"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 7712, 8320
        ]

        component "core/SCADA Input" SC_Q_LOAD {
            execution_rate = "TS_05KHZ"
            max = "1"
            min = "0"
            signal_access = "Inherit"
            unit = ""
        }
        [
            position = 7712, 8392
        ]

        component "core/Single Non-Ideal Contactor" S_VCS2 {
            ctrl_src = "Model"
            resistance = "0.05"
            signal_access = "Inherit"
        }
        [
            position = 8952, 8472
            size = 64, 32
        ]

        component "core/Single Non-Ideal Contactor" S_GRID {
            ctrl_src = "Model"
            resistance = "0.05"
            signal_access = "Inherit"
        }
        [
            position = 9456, 8472
            size = 64, 32
        ]

        component "core/Single Non-Ideal Contactor" S_VCS1 {
            ctrl_src = "Model"
            resistance = "0.05"
            signal_access = "Inherit"
        }
        [
            position = 8952, 7856
            size = 64, 32
        ]

        component "core/C function" DROOP_CONTROLLER {
            arb_defs = "/*Begin code section*/
// Constant definitions
const float V0 = 220;
const float W0 = 376.9911;
const float DELTA_V = 10;
const float DELTA_W = 3.141592;
const float TWOPI = 6.2831;

// Structs redefinition
struct Droop
{
  float p_max;
  float q_max;
  float p_ref;
  float q_ref;
  float v0;
  float w0;
  float m;
  float n;
  float last_pf_meas;
  float last_qf_meas;
  float delta_v;
  float delta_w;
};

// Structs declaration
struct Droop droop;
// Droop Controller variables
float p = 0;
float q = 0;
float v_ref = 0;
float w_ref = 0;
/*End code section*/"
            dll_file_path = "..\output\VHIL\lib_droop.dll"
            dll_file_path_full = "C:\projetos\1phase_microgrid\output\VHIL\lib_droop.dll"
            execution_rate = "TS_02KHZ"
            h_file_path = "..\src\droop.h"
            h_file_path_full = "C:\projetos\1phase_microgrid\src\droop.h"
            init_fnc = "/*Begin code section*/
// Droop variables
p = 0;
q = 0;
v_ref = 0;
w_ref = 0;
// Controllers initialization
DroopControlInit(&droop, 15000, 7500, V0, W0, DELTA_V, DELTA_W);
/*End code section*/"
            input_terminals = "real IN_V_DIR;real IN_V_QUAD;real IN_I_DIR;real IN_I_QUAD;real IN_ENABLE;real IN_MICROGRID_STATUS;"
            input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit"
            input_terminals_feedthrough = "True;True;True;True;True;True"
            input_terminals_show_labels = "False;False;False;False;False;False"
            output_fnc = "/*Begin code section*/
if(IN_ENABLE == 1){
    // Droop controller execution
    calculateDroopPQ(&droop, IN_V_DIR, IN_V_QUAD, IN_I_DIR, IN_I_QUAD, &p, &q);
    executeDroopControl(&droop, &v_ref, &w_ref);
    // Output values
    OUT_V_REF = v_ref;
    OUT_OMEGA_REF = w_ref;
    OUT_P = p;
    OUT_Q = q;
}else{
    // Output values
    OUT_V_REF = 0;
    OUT_OMEGA_REF = 0;
    OUT_P = 0;
    OUT_Q = 0;
}
/*End code section*/"
            output_terminals = "real OUT_V_REF;real OUT_OMEGA_REF;real OUT_P;real OUT_Q;"
            output_terminals_dimensions = "inherit;inherit;inherit;inherit"
            output_terminals_feedthrough = "True;True;True;True"
            output_terminals_show_labels = "False;False;False;False"
        }
        [
            position = 8912, 6840
            size = 120, 440
        ]

        component "core/Rate Transition" RT31 {
            execution_rate = "TS_02KHZ"
        }
        [
            position = 8800, 6720
            size = 32, 32
        ]

        component "core/Rate Transition" RT32 {
            execution_rate = "TS_02KHZ"
        }
        [
            position = 8800, 6800
            size = 32, 32
        ]

        component "core/Rate Transition" RT34 {
            execution_rate = "TS_02KHZ"
        }
        [
            position = 8800, 7040
            size = 32, 32
        ]

        component "core/Rate Transition" RT35 {
            execution_rate = "TS_02KHZ"
        }
        [
            position = 8800, 6640
            size = 32, 32
        ]

        component "core/Constant" ZERO2 {
            execution_rate = "TS_10KHZ"
            value = "0"
        }
        [
            position = 8656, 7040
        ]

        component "core/Rate Transition" RT36 {
            execution_rate = "TS_02KHZ"
        }
        [
            position = 8800, 6880
            size = 32, 32
        ]

        component "core/Rate Transition" RT37 {
            execution_rate = "TS_02KHZ"
        }
        [
            position = 8800, 6960
            size = 32, 32
        ]

        component "core/Probe" V_DROOP {
        }
        [
            position = 10904, 6864
        ]

        component "core/Probe" OMEGA_DROOP {
        }
        [
            position = 10904, 6936
        ]

        component "core/Probe" P_VSC1 {
        }
        [
            position = 10904, 7016
        ]

        component "core/Probe" Q_VSC1 {
        }
        [
            position = 10904, 7088
        ]

        component "core/Inductor" Lload {
            inductance = "0.005"
            signal_access = "Inherit"
        }
        [
            position = 9672, 7992
            rotation = left
        ]

        component "core/Resistor" Rload {
            resistance = "3.9192"
        }
        [
            position = 9672, 7912
            rotation = left
        ]

        component "core/Single Non-Ideal Contactor" S_LOAD {
            ctrl_src = "Model"
            resistance = "0.05"
            signal_access = "Inherit"
        }
        [
            position = 9576, 7856
            size = 64, 32
        ]

        tag From39 {
            value = "PWMA_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8208, 8296
            size = 108, 20
        ]

        tag From40 {
            value = "PWMB_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8208, 8248
            size = 108, 20
        ]

        tag From42 {
            value = "ENABLE_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8208, 8352
            size = 107, 20
        ]

        tag Goto22 {
            value = "V_GRID"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9608, 8608
            size = 60, 20
        ]

        tag Goto23 {
            value = "I_GRID"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9608, 8528
            size = 60, 20
        ]

        tag Goto61 {
            value = "VPOI_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9136, 8608
            size = 108, 20
        ]

        tag Goto67 {
            value = "IL1_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8824, 8552
            size = 92, 20
        ]

        tag Goto68 {
            value = "IL2_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8824, 8592
            size = 92, 20
        ]

        tag Goto69 {
            value = "VC_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8824, 8632
            size = 92, 20
        ]

        tag From43 {
            value = "ENABLE_GRID"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9712, 8296
            rotation = down
            size = 107, 20
        ]

        tag From44 {
            value = "VPOI_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8112, 8960
            size = 108, 20
        ]

        tag From45 {
            value = "IL2_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8112, 9232
            size = 108, 20
        ]

        tag Goto70 {
            value = "V_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8416, 8968
            size = 108, 20
        ]

        tag Goto71 {
            value = "V_QUAD_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8416, 9032
            size = 108, 20
        ]

        tag Goto72 {
            value = "I_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8416, 9096
            size = 108, 20
        ]

        tag Goto73 {
            value = "I_QUAD_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8416, 9160
            size = 108, 20
        ]

        tag Goto74 {
            value = "OMEGA_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8416, 9224
            size = 108, 20
        ]

        tag From46 {
            value = "V_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8112, 9496
            size = 108, 20
        ]

        tag Goto75 {
            value = "VRMS_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8416, 9496
            size = 108, 20
        ]

        tag From48 {
            value = "V_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8600, 9312
            size = 108, 20
        ]

        tag Goto77 {
            value = "IC_DIR_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8968, 9312
            size = 108, 20
        ]

        tag Goto78 {
            value = "IC_QUAD_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8968, 9440
            size = 108, 20
        ]

        tag Goto79 {
            value = "P_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8968, 9568
            size = 108, 20
        ]

        tag Goto80 {
            value = "Q_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8968, 9696
            size = 108, 20
        ]

        tag From49 {
            value = "V_QUAD_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8600, 9376
            size = 108, 20
        ]

        tag From50 {
            value = "I_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8600, 9440
            size = 108, 20
        ]

        tag From51 {
            value = "I_QUAD_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8600, 9504
            size = 108, 20
        ]

        tag From52 {
            value = "V_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8112, 9768
            size = 108, 20
        ]

        tag Goto81 {
            value = "SIN_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8416, 9768
            size = 108, 20
        ]

        tag Goto82 {
            value = "COS_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8416, 10040
            size = 108, 20
        ]

        tag From53 {
            value = "IC_DIR_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9136, 9304
            size = 108, 20
        ]

        tag Goto83 {
            value = "PWMA_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9496, 9312
            size = 108, 20
        ]

        tag Goto84 {
            value = "PWMB_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9496, 9408
            size = 108, 20
        ]

        tag Goto86 {
            value = "REFERENCE_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9496, 9504
            size = 108, 20
        ]

        tag From54 {
            value = "IC_QUAD_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9136, 9384
            size = 108, 20
        ]

        tag From55 {
            value = "SIN_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9136, 9464
            size = 108, 20
        ]

        tag From56 {
            value = "COS_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9136, 9544
            size = 108, 20
        ]

        tag From57 {
            value = "IL2_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9136, 9624
            size = 108, 20
        ]

        tag From58 {
            value = "PREF_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8600, 9568
            size = 108, 20
        ]

        tag From59 {
            value = "QREF_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8600, 9632
            size = 108, 20
        ]

        tag From60 {
            value = "ENABLE_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8600, 9696
            size = 108, 20
        ]

        tag From61 {
            value = "ENABLE_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9136, 9704
            size = 108, 20
        ]

        tag Goto87 {
            value = "PREF_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7912, 9456
            size = 108, 20
        ]

        tag Goto88 {
            value = "QREF_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7912, 9520
            size = 108, 20
        ]

        tag Goto89 {
            value = "ENABLE_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7912, 9584
            size = 108, 20
        ]

        tag From62 {
            value = "IL1_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9696, 9200
            size = 108, 20
        ]

        tag From63 {
            value = "IL2_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9696, 9272
            size = 108, 20
        ]

        tag From64 {
            value = "VC_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9696, 9344
            size = 108, 20
        ]

        tag From65 {
            value = "VRMS_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9696, 9424
            size = 108, 20
        ]

        tag From67 {
            value = "P_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9696, 9504
            size = 108, 20
        ]

        tag From68 {
            value = "Q_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9696, 9576
            size = 108, 20
        ]

        tag From69 {
            value = "REFERENCE_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9696, 9656
            size = 108, 20
        ]

        tag From70 {
            value = "PWMA_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9696, 9792
            size = 108, 20
        ]

        tag From71 {
            value = "PWMB_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9696, 9864
            size = 108, 20
        ]

        tag Goto90 {
            value = "ENABLE_GRID"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7880, 8176
            size = 108, 20
        ]

        tag From72 {
            value = "OMEGA_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10008, 9120
            size = 108, 20
        ]

        tag From73 {
            value = "VRMS_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9696, 9120
            size = 108, 20
        ]

        tag Goto91 {
            value = "S_VSC2_FB"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9136, 8352
            size = 108, 20
        ]

        tag Goto92 {
            value = "S_GRID_FB"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9712, 8352
            size = 108, 20
        ]

        tag From74 {
            value = "S_GRID_FB"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9960, 8128
            size = 107, 20
        ]

        tag From75 {
            value = "S_VSC2_FB"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9960, 8264
            size = 107, 20
        ]

        tag From76 {
            value = "SIN_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10008, 9200
            size = 108, 20
        ]

        tag From77 {
            value = "COS_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10008, 9272
            size = 108, 20
        ]

        tag From79 {
            value = "V_QUAD_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10008, 9424
            size = 108, 20
        ]

        tag From80 {
            value = "V_QUAD_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8112, 9904
            size = 108, 20
        ]

        tag From81 {
            value = "VRMS_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8112, 10040
            size = 108, 20
        ]

        tag From82 {
            value = "V_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10008, 9344
            size = 108, 20
        ]

        tag From83 {
            value = "I_QUAD_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10008, 9576
            size = 108, 20
        ]

        tag From84 {
            value = "I_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10008, 9504
            size = 108, 20
        ]

        tag From85 {
            value = "IC_QUAD_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10008, 9728
            size = 108, 20
        ]

        tag From86 {
            value = "IC_DIR_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10008, 9656
            size = 108, 20
        ]

        tag Goto93 {
            value = "I_ERROR_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9496, 9696
            size = 108, 20
        ]

        tag From87 {
            value = "I_ERROR_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10008, 9792
            size = 108, 20
        ]

        tag Goto94 {
            value = "MEAS_VSC2"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9496, 9600
            size = 108, 20
        ]

        tag From88 {
            value = "MEAS_VSC2"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9696, 9728
            size = 108, 20
        ]

        tag From89 {
            value = "PWMA_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8208, 7680
            size = 108, 20
        ]

        tag From90 {
            value = "PWMB_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8208, 7632
            size = 108, 20
        ]

        tag From91 {
            value = "ENABLE_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8208, 7736
            size = 107, 20
        ]

        tag Goto96 {
            value = "IL1_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8824, 7968
            size = 92, 20
        ]

        tag Goto98 {
            value = "VC_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8824, 8016
            size = 92, 20
        ]

        tag Goto99 {
            value = "S_VSC1_FB"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9136, 7736
            size = 108, 20
        ]

        tag From93 {
            value = "S_VSC1_FB"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9960, 8200
            size = 107, 20
        ]

        tag From94 {
            value = "S_LOAD_FB"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9960, 8336
            size = 107, 20
        ]

        tag Goto101 {
            value = "ENABLE_LOAD"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7880, 8248
            size = 108, 20
        ]

        tag Goto104 {
            value = "ENABLE_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7864, 6792
            size = 108, 20
        ]

        tag Goto105 {
            value = "PREF_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7864, 6864
            size = 108, 20
        ]

        tag Goto106 {
            value = "QREF_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7864, 6936
            size = 108, 20
        ]

        tag From95 {
            value = "VC_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8112, 6312
            size = 108, 20
        ]

        tag From96 {
            value = "IL1_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8112, 6584
            size = 108, 20
        ]

        tag Goto107 {
            value = "V_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8416, 6320
            size = 108, 20
        ]

        tag Goto108 {
            value = "V_QUAD_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8416, 6384
            size = 108, 20
        ]

        tag Goto109 {
            value = "I_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8416, 6448
            size = 108, 20
        ]

        tag Goto110 {
            value = "I_QUAD_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8416, 6512
            size = 108, 20
        ]

        tag Goto111 {
            value = "OMEGA_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8416, 6576
            size = 108, 20
        ]

        tag From97 {
            value = "V_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8112, 6848
            size = 108, 20
        ]

        tag Goto112 {
            value = "VRMS_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8416, 6848
            size = 108, 20
        ]

        tag From98 {
            value = "V_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8112, 7120
            size = 108, 20
        ]

        tag Goto113 {
            value = "SIN_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8416, 7120
            size = 108, 20
        ]

        tag Goto114 {
            value = "COS_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8416, 7392
            size = 108, 20
        ]

        tag From99 {
            value = "V_QUAD_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8112, 7256
            size = 108, 20
        ]

        tag From100 {
            value = "VRMS_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8112, 7392
            size = 108, 20
        ]

        tag Goto117 {
            value = "UV_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9640, 6640
            size = 108, 20
        ]

        tag Goto118 {
            value = "VREF_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9640, 7040
            size = 108, 20
        ]

        tag From108 {
            value = "VC_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9272, 6800
            size = 108, 20
        ]

        tag From109 {
            value = "ENABLE_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9272, 6880
            size = 108, 20
        ]

        tag From110 {
            value = "V_GRID"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9272, 6960
            size = 108, 20
        ]

        tag Goto121 {
            value = "PWMA_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 10200, 6640
            size = 108, 20
        ]

        tag Goto122 {
            value = "PWMB_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 10200, 7040
            size = 108, 20
        ]

        tag From113 {
            value = "IL1_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9832, 6776
            size = 108, 20
        ]

        tag From114 {
            value = "ENABLE_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9832, 6904
            size = 108, 20
        ]

        tag From115 {
            value = "UV_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9832, 6648
            size = 108, 20
        ]

        tag From116 {
            value = "VC_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10416, 6792
            size = 108, 20
        ]

        tag From117 {
            value = "VRMS_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10416, 6864
            size = 108, 20
        ]

        tag From118 {
            value = "UV_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10416, 6936
            size = 108, 20
        ]

        tag From119 {
            value = "PWMA_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10728, 6712
            size = 108, 20
        ]

        tag From120 {
            value = "IL1_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10416, 6712
            size = 108, 20
        ]

        tag From121 {
            value = "PWMB_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10728, 6792
            size = 108, 20
        ]

        tag From124 {
            value = "VREF_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10416, 7016
            size = 108, 20
        ]

        tag Goto123 {
            value = "P_LOAD"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7880, 8320
            size = 108, 20
        ]

        tag Goto124 {
            value = "Q_LOAD"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7880, 8392
            size = 108, 20
        ]

        tag Goto125 {
            value = "V_DROOP"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9064, 6648
            size = 108, 20
        ]

        tag Goto126 {
            value = "OMEGA_DROOP"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9064, 6776
            size = 108, 20
        ]

        tag From128 {
            value = "ENABLE_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8696, 6960
            size = 108, 20
        ]

        tag From129 {
            value = "V_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8696, 6640
            size = 108, 20
        ]

        tag From130 {
            value = "V_QUAD_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8696, 6720
            size = 108, 20
        ]

        tag From131 {
            value = "I_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8696, 6800
            size = 108, 20
        ]

        tag From132 {
            value = "I_QUAD_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 8696, 6880
            size = 108, 20
        ]

        tag Goto127 {
            value = "P_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9064, 6904
            size = 108, 20
        ]

        tag Goto128 {
            value = "Q_VSC1"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9064, 7032
            size = 108, 20
        ]

        tag From133 {
            value = "V_DROOP"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9272, 6640
            size = 108, 20
        ]

        tag From134 {
            value = "OMEGA_DROOP"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9272, 6720
            size = 108, 20
        ]

        tag From135 {
            value = "V_DROOP"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10736, 6864
            size = 108, 20
        ]

        tag From136 {
            value = "OMEGA_DROOP"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10736, 6936
            size = 108, 20
        ]

        tag From137 {
            value = "P_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10736, 7016
            size = 108, 20
        ]

        tag From138 {
            value = "Q_VSC1"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 10736, 7088
            size = 108, 20
        ]

        tag Goto129 {
            value = "S_LOAD_FB"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 9728, 7736
            size = 108, 20
        ]

        tag From139 {
            value = "ENABLE_LOAD"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9456, 7736
            size = 107, 20
        ]

        junction Junction268 pe
        [
            position = 9144, 8472
        ]

        junction Junction269 pe
        [
            position = 9016, 8680
        ]

        junction Junction270 pe
        [
            position = 9512, 8680
        ]

        junction Junction271 pe
        [
            position = 9400, 8680
        ]

        junction Junction274 pe
        [
            position = 9016, 8472
        ]

        junction Junction275 sp
        [
            position = 8480, 8352
        ]

        junction Junction276 sp
        [
            position = 8952, 8352
        ]

        junction Junction277 pe
        [
            position = 9512, 8472
        ]

        junction Junction278 pe
        [
            position = 9208, 8472
        ]

        junction Junction279 sp
        [
            position = 9456, 8352
        ]

        junction Junction280 pe
        [
            position = 9120, 7856
        ]

        junction Junction281 sp
        [
            position = 8480, 7736
        ]

        junction Junction282 sp
        [
            position = 8952, 7736
        ]

        junction Junction283 pe
        [
            position = 9208, 7856
        ]

        junction Junction284 pe
        [
            position = 9400, 8064
        ]

        junction Junction285 sp
        [
            position = 9576, 7736
        ]

        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">PHASE LOCKED LOOP</p></body></html> ENDCOMMENT 
        [
            position = 8176, 8896
        ]

        comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">RMS CALCULATOR</p></body></html> ENDCOMMENT 
        [
            position = 8184, 9296
        ]

        comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">POWER CONTROLLER</p></body></html> ENDCOMMENT 
        [
            position = 8720, 9240
        ]

        comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VSC2 COMMAND SIGNALS</p></body></html> ENDCOMMENT 
        [
            position = 8096, 8192
        ]

        comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">TRIG FUNCTION CALCULATION</p></body></html> ENDCOMMENT 
        [
            position = 8136, 9704
        ]

        comment Comment6 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">CURRENT CONTROLLER </p></body></html> ENDCOMMENT 
        [
            position = 9240, 9240
        ]

        comment Comment7 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VSC2 SCADA INPUTS</p></body></html> ENDCOMMENT 
        [
            position = 7760, 9384
        ]

        comment Comment8 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VSC2 SCADA OUTPUTS </p></body></html> ENDCOMMENT 
        [
            position = 9832, 9056
        ]

        comment Comment9 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">GRID SCADA INPUTS </p></body></html> ENDCOMMENT 
        [
            position = 7728, 8104
        ]

        comment Comment10 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">GRID SCADA OUTPUTS  </p></body></html> ENDCOMMENT 
        [
            position = 9976, 8056
        ]

        comment Comment11 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VSC1 COMMAND SIGNALS </p></body></html> ENDCOMMENT 
        [
            position = 8096, 7576
        ]

        comment Comment12 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">MICROGRID LOAD</p></body></html> ENDCOMMENT 
        [
            position = 9688, 7936
            rotation = left
        ]

        comment Comment13 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">GRID FORMING INVERTER</p></body></html> ENDCOMMENT 
        [
            position = 8392, 8096
        ]

        comment Comment14 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">GRID FOLLOWING INVERTER </p></body></html> ENDCOMMENT 
        [
            position = 8392, 8712
        ]

        comment Comment15 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VSC1 SCADA INPUTS </p></body></html> ENDCOMMENT 
        [
            position = 7712, 6712
        ]

        comment Comment16 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">PHASE LOCKED LOOP</p></body></html> ENDCOMMENT 
        [
            position = 8176, 6248
        ]

        comment Comment17 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">RMS CALCULATOR</p></body></html> ENDCOMMENT 
        [
            position = 8184, 6648
        ]

        comment Comment18 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">TRIG FUNCTION CALCULATION</p></body></html> ENDCOMMENT 
        [
            position = 8136, 7056
        ]

        comment Comment19 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VOLTAGE CONTROLLER </p></body></html> ENDCOMMENT 
        [
            position = 9392, 6576
        ]

        comment Comment20 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">CURRENT CONTROLLER  </p></body></html> ENDCOMMENT 
        [
            position = 9936, 6576
        ]

        comment Comment21 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">VSC1 SCADA OUTPUTS  </p></body></html> ENDCOMMENT 
        [
            position = 10552, 6648
        ]

        comment Comment22 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">DROOP CONTROLLER  </p></body></html> ENDCOMMENT 
        [
            position = 8816, 6576
        ]

        connect VCC2.p_node RPV_VSC2.n_node as Connection4754
        connect RPV_VSC2.p_node "VSC2 - GFL.pos_out" as Connection4755
        connect Goto22 V_GRID.out as Connection4524
        connect Goto23 I_GRID.out as Connection4525
        connect Goto61 VPOI_VSC2.out as Connection5535
        connect "VSC2 - GFL.neg_out" VCC2.n_node as Connection5736
        [
            breakpoints = 8296, 8648; 8296, 8648; 8296, 8648; 8296, 8648
        ]
        connect "VSC2 Filter.Vin+" "VSC2 - GFL.a_in" as Connection6322
        connect "VSC2 - GFL.b_in" "VSC2 Filter.Vin-" as Connection6323
        connect Goto67 "VSC2 Filter.i_l1" as Connection6325
        connect Goto68 "VSC2 Filter.i_l2" as Connection6326
        connect "VSC2 Filter.v_c" Goto69 as Connection6327
        connect GRID.L I_GRID.p_node as Connection6345
        connect From44 SOGI_QSG_VSC2.IN_VGRID as Connection6364
        connect From45 SOGI_QSG_VSC2.IN_IL2 as Connection6365
        connect Goto70 SOGI_QSG_VSC2.OUT_V as Connection6366
        connect Goto71 SOGI_QSG_VSC2.OUT_V_QUAD as Connection6367
        connect Goto72 SOGI_QSG_VSC2.OUT_I as Connection6368
        connect SOGI_QSG_VSC2.OUT_I_QUAD Goto73 as Connection6369
        connect Goto74 SOGI_QSG_VSC2.OUT_OMEGA as Connection6370
        connect From46 RMS_CALCULATOR_VSC2.IN_V as Connection6371
        connect Goto75 RMS_CALCULATOR_VSC2.OUT_V_RMS as Connection6373
        connect Goto77 PI_CONTROLLER_VSC2.OUT_I_DIR as Connection6377
        connect Goto78 PI_CONTROLLER_VSC2.OUT_I_QUAD as Connection6378
        connect Goto79 PI_CONTROLLER_VSC2.OUT_P as Connection6379
        connect PI_CONTROLLER_VSC2.OUT_Q Goto80 as Connection6380
        connect From49 RT3.in as Connection6384
        connect RT3.out PI_CONTROLLER_VSC2.IN_V_QUAD as Connection6385
        connect From50 RT4.in as Connection6386
        connect RT4.out PI_CONTROLLER_VSC2.IN_I_DIR as Connection6387
        connect From51 RT5.in as Connection6388
        connect RT5.out PI_CONTROLLER_VSC2.IN_I_QUAD as Connection6389
        connect RT6.out PI_CONTROLLER_VSC2.IN_PREF as Connection6391
        connect RT7.out PI_CONTROLLER_VSC2.IN_QREF as Connection6393
        connect RT8.out PI_CONTROLLER_VSC2.IN_ENABLE as Connection6395
        connect From42 RT1.in as Connection6396
        connect From52 TRIG_FUNCTION_CALC_VSC2.IN_V as Connection6397
        connect Goto81 TRIG_FUNCTION_CALC_VSC2.OUT_SIN as Connection6399
        connect Goto82 TRIG_FUNCTION_CALC_VSC2.OUT_COS as Connection6400
        connect Goto83 RESONANT_CONTROLLER_VSC2.OUT_PWMA as Connection6401
        connect Goto84 RESONANT_CONTROLLER_VSC2.OUT_PWMB as Connection6402
        connect RESONANT_CONTROLLER_VSC2.OUT_REFERENCE Goto86 as Connection6404
        connect RT9.out RESONANT_CONTROLLER_VSC2.IN_I_DIR as Connection6405
        connect From53 RT9.in as Connection6406
        connect RT10.out RESONANT_CONTROLLER_VSC2.IN_I_QUAD as Connection6408
        connect RT15.out RESONANT_CONTROLLER_VSC2.IN_ENABLE as Connection6418
        connect From54 RT10.in as Connection6419
        connect From55 RESONANT_CONTROLLER_VSC2.IN_SIN as Connection6420
        connect From56 RESONANT_CONTROLLER_VSC2.IN_COS as Connection6421
        connect From57 RESONANT_CONTROLLER_VSC2.IN_IL2 as Connection6422
        connect From60 RT8.in as Connection6423
        connect From59 RT7.in as Connection6424
        connect From58 RT6.in as Connection6425
        connect From61 RT15.in as Connection6426
        connect SC_ENABLE_VSC2.out Goto89 as Connection6427
        connect SC_QREF_VSC2.out Goto88 as Connection6428
        connect SC_PREF_VSC2.out Goto87 as Connection6429
        connect From62 IL1_VSC2.in as Connection6430
        connect From63 IL2_VSC2.in as Connection6431
        connect From64 VC_VSC2.in as Connection6432
        connect From65 VRMS_VSC2.in as Connection6433
        connect From67 P_VSC2.in as Connection6435
        connect From68 Q_VSC2.in as Connection6436
        connect From69 REFERENCE_VSC2.in as Connection6437
        connect From70 PWMA_VSC2.in as Connection6438
        connect From71 PWMB_VSC2.in as Connection6439
        connect SC_ENABLE_GRID.out Goto90 as Connection6442
        connect RT16.out PI_CONTROLLER_VSC2.IN_V_DIR as Connection6443
        connect From48 RT16.in as Connection6444
        connect From72 OMEGA_VSC2.in as Connection6446
        connect From73 VPOI_GRID.in as Connection6447
        connect From74 S_GRID_FEEDBACK.in as Connection6450
        connect From75 S_VSC2_FEEDBACK.in as Connection6451
        connect From76 SIN_VSC2.in as Connection6452
        connect From77 COS_VSC2.in as Connection6453
        connect From79 V_QUAD_VSC2.in as Connection6455
        connect From81 TRIG_FUNCTION_CALC_VSC2.IN_VRMS as Connection6456
        connect From80 TRIG_FUNCTION_CALC_VSC2.IN_V_QUAD as Connection6457
        connect From82 V_VSC2.in as Connection6458
        connect From83 I_QUAD_VSC2.in as Connection6466
        connect From84 I_VSC2.in as Connection6467
        connect From85 IC_QUAD_VSC2.in as Connection6475
        connect From86 IC_DIR_VSC2.in as Connection6476
        connect RESONANT_CONTROLLER_VSC2.OUT_ERRO Goto93 as Connection6477
        connect From87 I_ERROR_VSC2.in as Connection6478
        connect Goto94 RESONANT_CONTROLLER_VSC2.OUT_MEAS as Connection6479
        connect From88 MEAS_VSC2.in as Connection6480
        connect "VSC2 - GFL.InA" From39 as Connection6482
        connect "VSC2 - GFL.InB" From40 as Connection6483
        connect VCC1.p_node RPV_VSC1.n_node as Connection6484
        connect RPV_VSC1.p_node "VSC1 - GFM.pos_out" as Connection6485
        connect "VSC1 - GFM.neg_out" VCC1.n_node as Connection6487
        [
            breakpoints = 8296, 8032; 8296, 8032; 8296, 8032; 8296, 8032
        ]
        connect "VSC1 Filter.Vin+" "VSC1 - GFM.a_in" as Connection6488
        connect "VSC1 - GFM.b_in" "VSC1 Filter.Vin-" as Connection6489
        connect Goto96 "VSC1 Filter.i_l1" as Connection6491
        connect "VSC1 Filter.v_c" Goto98 as Connection6493
        connect From91 RT17.in as Connection6498
        connect "VSC1 - GFM.InA" From89 as Connection6503
        connect "VSC1 - GFM.InB" From90 as Connection6504
        connect From93 S_VSC1_FEEDBACK.in as Connection6520
        connect From94 S_LOAD_FEEDBACK.in as Connection6521
        connect SC_ENABLE_LOAD.out Goto101 as Connection6522
        connect SC_ENABLE_VSC1.out Goto104 as Connection6527
        connect SC_QREF_VSC1.out Goto106 as Connection6528
        connect SC_PREF_VSC1.out Goto105 as Connection6529
        connect From95 SOGI_QSG_VSC1.IN_VGRID as Connection6530
        connect From96 SOGI_QSG_VSC1.IN_IL2 as Connection6531
        connect Goto107 SOGI_QSG_VSC1.OUT_V as Connection6532
        connect Goto108 SOGI_QSG_VSC1.OUT_V_QUAD as Connection6533
        connect Goto109 SOGI_QSG_VSC1.OUT_I as Connection6534
        connect SOGI_QSG_VSC1.OUT_I_QUAD Goto110 as Connection6535
        connect Goto111 SOGI_QSG_VSC1.OUT_OMEGA as Connection6536
        connect From97 RMS_CALCULATOR_VSC1.IN_V as Connection6537
        connect Goto112 RMS_CALCULATOR_VSC1.OUT_V_RMS as Connection6538
        connect From98 TRIG_FUNCTION_CALC_VSC1.IN_V as Connection6539
        connect Goto113 TRIG_FUNCTION_CALC_VSC1.OUT_SIN as Connection6540
        connect Goto114 TRIG_FUNCTION_CALC_VSC1.OUT_COS as Connection6541
        connect From100 TRIG_FUNCTION_CALC_VSC1.IN_VRMS as Connection6542
        connect From99 TRIG_FUNCTION_CALC_VSC1.IN_V_QUAD as Connection6543
        connect Goto117 VOLTAGE_CONTROLLER_VSC1.OUT_V_CTRL as Connection6544
        connect Goto118 VOLTAGE_CONTROLLER_VSC1.OUT_V_REF_CTRL as Connection6545
        connect RT18.out VOLTAGE_CONTROLLER_VSC1.IN_OMEGA_REF as Connection6549
        connect From108 RT19.in as Connection6550
        connect RT19.out VOLTAGE_CONTROLLER_VSC1.IN_VC as Connection6551
        connect RT21.out VOLTAGE_CONTROLLER_VSC1.IN_VGRID as Connection6554
        connect RT22.out VOLTAGE_CONTROLLER_VSC1.IN_MICROGRID_STATUS as Connection6555
        connect From110 RT21.in as Connection6559
        connect RT24.out VOLTAGE_CONTROLLER_VSC1.IN_V_REF as Connection6560
        connect ZERO.out RT22.in as Connection6566
        connect Goto121 CURRENT_CONTROLLER_VSC1.OUT_PWMA as Connection6567
        connect Goto122 CURRENT_CONTROLLER_VSC1.OUT_PWMB as Connection6568
        connect From114 RT27.in as Connection6572
        connect ZERO1.out RT29.in as Connection6580
        connect From115 RT30.in as Connection6581
        connect RT29.out CURRENT_CONTROLLER_VSC1.IN_MICROGRID_STATUS as Connection6582
        connect RT27.out CURRENT_CONTROLLER_VSC1.IN_ENABLE as Connection6583
        connect RT30.out CURRENT_CONTROLLER_VSC1.IN_UV as Connection6585
        connect From109 VOLTAGE_CONTROLLER_VSC1.IN_ENABLE as Connection6586
        connect From116 VC_VSC1.in as Connection6610
        connect From117 VRMS_VSC1.in as Connection6611
        connect From118 UV_VSC1.in as Connection6612
        connect From119 PWMA_VSC1.in as Connection6613
        connect From120 IL1_VSC1.in as Connection6614
        connect From121 PWMB_VSC1.in as Connection6615
        connect From124 VREF_VSC1.in as Connection6618
        connect From113 CURRENT_CONTROLLER_VSC1.IN_IL1 as Connection6619
        connect SC_P_LOAD.out Goto123 as Connection6636
        connect SC_Q_LOAD.out Goto124 as Connection6637
        connect "Core Marker2.node" Junction268 as Connection6659
        connect "VSC2 Filter.Vout-" Junction269 as Connection6662
        [
            breakpoints = 8896, 8512; 8896, 8680
        ]
        connect Junction269 VPOI_VSC2.n_node as Connection6663
        [
            breakpoints = 9016, 8680; 9016, 8680; 9016, 8680; 9016, 8680
        ]
        connect V_GRID.n_node Junction270 as Connection6665
        connect Junction270 GRID.N as Connection6666
        connect "Core Coupling 1.a_out" Junction271 as Connection6667
        connect Junction271 Junction269 as Connection6668
        connect Junction270 Junction271 as Connection6669
        connect VPOI_VSC2.p_node Junction274 as Connection6678
        connect Junction274 Junction268 as Connection6679
        [
            breakpoints = 9016, 8472; 9144, 8472
        ]
        connect S_VCS2.a_out Junction274 as Connection6680
        connect S_VCS2.a_in "VSC2 Filter.Vout+" as Connection6681
        connect "VSC2 - GFL.En" Junction275 as Connection6682
        connect Junction275 RT1.out as Connection6683
        [
            breakpoints = 8480, 8352
        ]
        connect S_VCS2.ctrl_in Junction276 as Connection6685
        connect Junction276 Junction275 as Connection6686
        connect Goto91 Junction276 as Connection6687
        connect V_GRID.p_node Junction277 as Connection6690
        connect Junction277 I_GRID.n_node as Connection6691
        [
            breakpoints = 9512, 8480; 9512, 8472
        ]
        connect S_GRID.a_out Junction277 as Connection6692
        connect "Core Coupling 1.b_out" Junction278 as Connection6693
        connect Junction278 Junction268 as Connection6694
        [
            breakpoints = 9208, 8472
        ]
        connect S_GRID.a_in Junction278 as Connection6695
        connect From43 Junction279 as Connection6697
        connect Junction279 S_GRID.ctrl_in as Connection6698
        connect Goto92 Junction279 as Connection6699
        connect "Core Marker1.node" Junction280 as Connection6702
        connect S_VCS1.a_out Junction280 as Connection6704
        connect S_VCS1.a_in "VSC1 Filter.Vout+" as Connection6705
        connect RT17.out Junction281 as Connection6706
        connect Junction281 "VSC1 - GFM.En" as Connection6707
        [
            breakpoints = 8480, 7736
        ]
        connect S_VCS1.ctrl_in Junction282 as Connection6709
        connect Junction282 Junction281 as Connection6710
        connect Goto99 Junction282 as Connection6711
        connect Goto125 DROOP_CONTROLLER.OUT_V_REF as Connection6712
        connect Goto126 DROOP_CONTROLLER.OUT_OMEGA_REF as Connection6713
        connect RT31.out DROOP_CONTROLLER.IN_V_QUAD as Connection6714
        connect RT32.out DROOP_CONTROLLER.IN_I_DIR as Connection6716
        connect RT34.out DROOP_CONTROLLER.IN_MICROGRID_STATUS as Connection6718
        connect RT35.out DROOP_CONTROLLER.IN_V_DIR as Connection6720
        connect ZERO2.out RT34.in as Connection6723
        connect From129 RT35.in as Connection6724
        connect From130 RT31.in as Connection6725
        connect RT36.out DROOP_CONTROLLER.IN_I_QUAD as Connection6726
        connect From132 RT36.in as Connection6727
        connect From131 RT32.in as Connection6728
        connect DROOP_CONTROLLER.OUT_Q Goto128 as Connection6730
        connect Goto127 DROOP_CONTROLLER.OUT_P as Connection6731
        connect From133 RT24.in as Connection6732
        connect From134 RT18.in as Connection6733
        connect From128 RT37.in as Connection6734
        connect RT37.out DROOP_CONTROLLER.IN_ENABLE as Connection6735
        connect From135 V_DROOP.in as Connection6736
        connect From136 OMEGA_DROOP.in as Connection6737
        connect From137 P_VSC1.in as Connection6738
        connect From138 Q_VSC1.in as Connection6739
        connect Lload.n_node Rload.p_node as Connection5741
        connect S_LOAD.a_out Rload.n_node as Connection6747
        connect Junction280 Junction283 as Connection6748
        [
            breakpoints = 9120, 7856; 9120, 7856; 9120, 7856; 9176, 7856; 9192, 7856
        ]
        connect Junction283 "Core Coupling 1.b_in" as Connection6749
        [
            breakpoints = 9208, 7856; 9208, 7856; 9208, 7856; 9208, 8168
        ]
        connect S_LOAD.a_in Junction283 as Connection6750
        connect "VSC1 Filter.Vout-" Junction284 as Connection6751
        [
            breakpoints = 8896, 7904; 8896, 8024; 8896, 8048; 8896, 8064; 9288, 8064; 9288, 8064; 9336, 8064; 9336, 8064; 9384, 8064; 9384, 8064; 9384, 8064; 9384, 8064
        ]
        connect Junction284 "Core Coupling 1.a_in" as Connection6752
        [
            breakpoints = 9400, 8064
        ]
        connect Lload.p_node Junction284 as Connection6753
        connect From139 Junction285 as Connection6755
        connect Junction285 S_LOAD.ctrl_in as Connection6756
        connect Goto129 Junction285 as Connection6757
    }

    default {
        "core/C function" {
            input_terminals = "real in;"
            input_terminals_show_labels = "False;"
            input_terminals_feedthrough = "True;"
            input_terminals_dimensions = "inherit;"
            output_terminals = "real out;"
            output_terminals_show_labels = "False;"
            output_terminals_feedthrough = "True;"
            output_terminals_dimensions = "inherit;"
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            library_load_type = "Compile-time load"
            dll_file_path = ""
            dll_file_path_full = ""
            arm_a9_file_path = ""
            arm_a9_file_path_full = ""
            arm_a53_file_path = ""
            arm_a53_file_path_full = ""
            h_file_path = ""
            h_file_path_full = ""
            add_src_path = ""
            add_src_path_full = ""
            convert_to_relative_dll = "True"
            convert_to_relative_a = "True"
            convert_to_relative_src = "True"
            arb_defs = ""
            add_macros = ""
            skip_pre_cmpl_check = "False"
            generate_for_hil = "True"
            execution_rate = "inherit"
            _supported_platforms = "[\'generic\']"
            refresh = "refresh"
        }

        "core/Capacitor" {
            signal_access = "inherit"
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        "core/Constant" {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
            _tunable = "False"
        }

        "core/Core Marker" {
            marker_id = "id0"
        }

        "core/Digital Probe" {
            signal_access = "inherit"
            override_signal_name = "False"
            signal_name = ""
            streaming_en = "False"
            addr = "0"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        "core/Inductor" {
            signal_access = "inherit"
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        "core/Probe" {
            signal_access = "inherit"
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        "core/Resistor" {
            resistance = "1"
            param_set = ""
        }

        "core/SCADA Input" {
            signal_access = "inherit"
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        "core/Voltage Source" {
            sig_input = "False"
            type = "signal generator"
            param_set = "1phase"
            parent_label = ""
            addr = "0"
            spc_nb = "0"
            execution_rate = "100e-6"
            cpd_visible = "True"
            enable_snb = "False"
            snb_type = "R2"
            R2 = "0.0"
            L1 = "0.1"
            override_signal_name = "False"
            signal_name = ""
            init_source_nature = "Constant"
            init_const_value = "0.0"
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        "core/Current Measurement" {
            signal_access = "inherit"
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Rate Transition" {
            init_value = "0.0"
            execution_rate = "100e-6"
            _supported_platforms = "[\'generic\']"
        }

        "core/Signal Controlled Sinusoidal Voltage Source" {
            phase_number = "1"
            execution_rate = "inherit"
        }

        "core/Single Non-Ideal Contactor" {
            signal_access = "inherit"
            ctrl_src = "Digital input"
            ctrl_mode = "switch"
            Sa = "1"
            Sa_logic = "active high"
            switching = "zero current"
            execution_rate = "inherit"
            resistance = "1.0"
        }

        "core/Single Phase Inverter" {
            signal_access = "inherit"
            ctrl_src = "Digital input per switch"
            op_mode = "Fixed carrier frequency"
            carrier_freq = "10000.0"
            phase_op_mode = "Fixed carrier phase offset"
            carr_ph_offset = "[0.0, 180.0]"
            d_time = "5e-6"
            ref_sig_min_max = "[-1.0, 1.0]"
            load_mode = "on min"
            execution_rate = "inherit"
            Sa_top = "1"
            Sa_top_logic = "active high"
            Sa_bot = "2"
            Sa_bot_logic = "active high"
            Sb_top = "3"
            Sb_top_logic = "active high"
            Sb_bot = "4"
            Sb_bot_logic = "active high"
            Sa_top_I = "False"
            Sa_bot_I = "False"
            Sb_top_I = "False"
            Sb_bot_I = "False"
            losses_estimation = "False"
            fvd_def_method = "Voltage and Resistance"
            Import_igbt_xml = "not selected"
            Import_diode_xml = "not selected"
            Switch_type = "IGBT"
            Vce = "1.3"
            Rce = "0"
            Vd = "1.2"
            Rd = "0"
            i_sw = "[0.0, 6.0, 12.0, 18.0, 24.0]"
            v_sw = "[0.0, 600.0]"
            temp_sw = "[25.0, 50.0, 75.0, 100.0, 125.0]"
            vce_table_out = "[1.3, 1.3, 1.3, 1.3, 1.3]"
            vd_table_out = "[1.2, 1.2, 1.2, 1.2, 1.2]"
            et_on_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*3.8e-3, 0.4*3.8e-3, 0.8*3.8e-3, 0.68*3.8e-3, 0.9*3.8e-3], [0.65*3.8e-3, 0.9*3.8e-3, 1.2*3.8e-3, 1.5*3.8e-3, 1.7*3.8e-3], [0.9*3.8e-3, 1.3*3.8e-3, 1.7*3.8e-3, 1.9*3.8e-3, 2.25*3.8e-3], [1.1*3.8e-3, 1.7*3.8e-3, 2.1*3.8e-3, 2.3*3.8e-3, 2.5*3.8e-3]]"
            et_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.1e-3, 0.4*2.1e-3, 0.8*2.1e-3, 0.68*2.1e-3, 0.9*2.1e-3], [0.65*2.1e-3, 0.9*2.1e-3, 1.2*2.1e-3, 1.5*2.1e-3, 1.7*2.1e-3], [0.9*2.1e-3, 1.3*2.1e-3, 1.7*2.1e-3, 1.9*2.1e-3, 2.25*2.1e-3], [1.1*2.1e-3, 1.7*2.1e-3, 2.1*2.1e-3, 2.3*2.1e-3, 2.5*2.1e-3]]"
            ed_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.2e-3, 0.4*2.2e-3, 0.8*2.2e-3, 0.68*2.2e-3, 0.9*2.2e-3], [0.65*2.2e-3, 0.9*2.2e-3, 1.2*2.2e-3, 1.5*2.2e-3, 1.7*2.2e-3], [0.9*2.2e-3, 1.3*2.2e-3, 1.7*2.2e-3, 1.9*2.2e-3, 2.25*2.2e-3], [1.1*2.2e-3, 1.7*2.2e-3, 2.1*2.2e-3, 2.3*2.2e-3, 2.5*2.2e-3]]"
            temp_estimation = "False"
            thermal_networks_type = "Foster"
            switch_Rth = "[0.159, 0.133, 0.120, 0.038]"
            switch_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            switch_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            diode_Rth = "[0.159, 0.133, 0.120, 0.038]"
            diode_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            diode_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            loss_exec_rate = "100e-6"
            visualize_luts = "Visualize Lookup Tables"
            show_monitoring = "False"
            FSM_select = "converter"
            _control_property = "all high"
            switches_names_at_mask = "[]"
            pwm_enabling = "False"
            pwm_enable_di = "13"
            pwm_enable_inv = "active high"
            dtv_flag_en = "True"
            PESB_Optimization = "True"
            dynamic_ac_voltage = "False"
        }

        "core/Single Phase TLM Core Coupling" {
            type = "Inductive"
            capacitance = "1e-06"
            inductance = "1e-3"
            embedded_components = "False"
            ratio_type = "Automatic"
            ratio = "0.1"
            embedded_inductors_initial_current = "0.0"
            embedded_capacitors_initial_voltage = "0.0"
        }

        "core/Voltage Measurement" {
            signal_access = "inherit"
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }
    }

    CODE model_init
        TS_10KHZ = 0.0001;
        TS_05KHZ = 0.0002;
        TS_02KHZ = 0.0005;
        TS_01KHZ = 0.0010;
    ENDCODE
}
